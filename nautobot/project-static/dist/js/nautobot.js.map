{"version":3,"file":"js/nautobot.js","mappings":"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","sources":["webpack://nautobot/webpack/runtime/chunk loaded","webpack://nautobot/./src/js/collapse.js","webpack://nautobot/./src/js/draggable.js","webpack://nautobot/./src/js/drawer.js","webpack://nautobot/./src/js/history.js","webpack://nautobot/./src/js/utils.js","webpack://nautobot/./src/js/search.js","webpack://nautobot/./src/js/select2.js","webpack://nautobot/./src/js/tabs.js","webpack://nautobot/./src/js/theme.js","webpack://nautobot/./src/js/nautobot.js","webpack://nautobot/./src/js/form.js","webpack://nautobot/webpack/bootstrap","webpack://nautobot/webpack/runtime/define property getters","webpack://nautobot/webpack/runtime/global","webpack://nautobot/webpack/runtime/hasOwnProperty shorthand","webpack://nautobot/webpack/runtime/make namespace object","webpack://nautobot/webpack/runtime/jsonp chunk loading","webpack://nautobot/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","/**\n * Initialize collapse toggle all buttons identified by `data-nb-toggle=\"collapse-all\"` data attribute. Collapse toggle\n * all buttons can be further configured with `data-nb-target=\"{collapse CSS selector}\"` data attribute specifying which\n * collapse elements they control. When not explicitly set, target collapse CSS selector falls back to `\".collapse\"`.\n * ---\n * Critical difference between this and default Bootstrap 5 collapse implementation is that Bootstrap only supports\n * toggling individual panel states without an option to toggle them collectively. See an explanation below:\n * Bootstrap 5 on \"Collapse All\" button click:  |  Nautobot on \"Collapse All\" button click:\n *   * X [expanded]  -> [collapsed]             |    * X [expanded]  -> [collapsed]\n *   * Y [collapsed] -> [expanded]              |    * Y [collapsed] -> [collapsed]\n *   * Z [expanded]  -> [collapsed]             |    * Z [expanded]  -> [collapsed]\n * ---\n * @returns {function(): void} Destructor function - remove all event listeners added during initialization.\n */\nexport const initializeCollapseToggleAll = () => {\n  const areAll = (collapseElements, collapsedOrExpanded) =>\n    collapseElements.every((element) => {\n      const isCollapsed = !element.classList.contains('show');\n      return collapsedOrExpanded === 'collapsed' ? isCollapsed : !isCollapsed;\n    });\n\n  const getCollapseToggleAllTargets = (collapseToggleAll) => [\n    ...document.querySelectorAll(collapseToggleAll.dataset.nbTarget || '.collapse'),\n  ];\n\n  const onClick = (event) => {\n    const collapseToggleAll = event.target.closest('[data-nb-toggle=\"collapse-all\"]');\n\n    if (collapseToggleAll) {\n      getCollapseToggleAllTargets(collapseToggleAll).forEach((collapse) => {\n        const collapseInstance = window.bootstrap.Collapse.getOrCreateInstance(collapse);\n        const shouldCollapse = collapseToggleAll.getAttribute('aria-expanded') === 'true';\n        shouldCollapse ? collapseInstance.hide() : collapseInstance.show();\n      });\n    }\n  };\n\n  const onHiddenBsCollapse = () =>\n    [...document.querySelectorAll('[data-nb-toggle=\"collapse-all\"]')]\n      .filter((collapseToggleAll) => areAll(getCollapseToggleAllTargets(collapseToggleAll), 'collapsed'))\n      .forEach((collapseToggleAll) => {\n        collapseToggleAll.setAttribute('aria-expanded', 'false');\n        collapseToggleAll.textContent = 'Expand All';\n      });\n\n  const onShownBsCollapse = () =>\n    [...document.querySelectorAll('[data-nb-toggle=\"collapse-all\"]')]\n      .filter((collapseToggleAll) => areAll(getCollapseToggleAllTargets(collapseToggleAll), 'expanded'))\n      .forEach((collapseToggleAll) => {\n        collapseToggleAll.setAttribute('aria-expanded', 'true');\n        collapseToggleAll.textContent = 'Collapse All';\n      });\n\n  // Using event delegation pattern here to avoid re-creating listeners each time DOM is modified.\n  document.addEventListener('click', onClick);\n  document.addEventListener('hidden.bs.collapse', onHiddenBsCollapse);\n  document.addEventListener('shown.bs.collapse', onShownBsCollapse);\n\n  return () => {\n    document.removeEventListener('click', onClick);\n    document.removeEventListener('hidden.bs.collapse', onHiddenBsCollapse);\n    document.removeEventListener('shown.bs.collapse', onShownBsCollapse);\n  };\n};\n","const DRAGGABLE_CLASS = 'nb-draggable';\nconst DRAGGABLE_CONTAINER_CLASS = 'nb-draggable-container';\nconst DRAGGABLE_HANDLE_CLASS = 'nb-draggable-handle';\nconst DRAGGING_CLASS = 'nb-dragging';\n\nexport const initializeDraggable = () => {\n  const closest = (element, className) => element?.closest?.(`.${className}`);\n\n  const createHandleOnMouseListener = (isDraggable) => (event) => {\n    const handle = closest(event.target, DRAGGABLE_HANDLE_CLASS);\n    if (handle) {\n      const draggable = closest(handle, DRAGGABLE_CLASS);\n      draggable.setAttribute('draggable', String(isDraggable));\n    }\n  };\n\n  const onMouseDown = createHandleOnMouseListener(true);\n  const onMouseUp = createHandleOnMouseListener(false);\n\n  const onDragStart = (event) => {\n    const draggable = closest(event.target, DRAGGABLE_CLASS);\n    if (draggable) {\n      event.dataTransfer.clearData('text/plain');\n      event.dataTransfer.setData('text/plain', event.target.id);\n      draggable.classList.add(DRAGGING_CLASS);\n    }\n  };\n\n  const onDragEnd = (event) => {\n    const draggable = closest(event.target, DRAGGABLE_CLASS);\n    if (draggable) {\n      draggable.classList.remove(DRAGGING_CLASS);\n      draggable.setAttribute('draggable', 'false');\n    }\n  };\n\n  const onDragOver = (event) => {\n    const draggableContainer = closest(event.target, DRAGGABLE_CONTAINER_CLASS);\n    if (draggableContainer) {\n      event.preventDefault();\n    }\n  };\n\n  const onDrop = (event) => {\n    const draggable = document.getElementById(event.dataTransfer.getData('text/plain'));\n    if (draggable) {\n      event.preventDefault();\n\n      const container = closest(draggable, DRAGGABLE_CONTAINER_CLASS);\n\n      const insertBefore = (() => {\n        // Were we dropped onto another draggable?\n        const dropDraggable = closest(event.target, DRAGGABLE_CLASS);\n        if (dropDraggable) {\n          /*\n           * Were we dropped in the top half or the bottom half of the target draggable?\n           *   - Top half - insert before that draggable.\n           *   - Bottom half - insert after that draggable.\n           */\n          const { height, top } = dropDraggable.getBoundingClientRect();\n          const isTopHalf = event.clientY < top + height / 2;\n          return isTopHalf ? dropDraggable : dropDraggable.nextSibling;\n        }\n\n        // We were dropped into empty space - find the closest draggable by geometry.\n        return [...container.children].find((child) => {\n          const { left, right, top } = child.getBoundingClientRect();\n          // Are we in the correct column?\n          if (left > event.clientX) {\n            // Found the first child that is too far to the right, so we insert before that child.\n            return true;\n          } else if (right >= event.clientX) {\n            // Child is in the correct column.\n            if (top >= event.clientY) {\n              // Found the first child in this column we were dropped above, so we insert before that child.\n              return true;\n            }\n          }\n        });\n      })();\n\n      if (insertBefore) {\n        container.insertBefore(draggable, insertBefore);\n      } else {\n        // Add to end of the list.\n        container.append(draggable);\n      }\n\n      draggable.classList.add(DRAGGING_CLASS);\n    }\n  };\n\n  // Using event delegation pattern here to avoid re-creating listeners each time DOM is modified.\n  document.addEventListener('mousedown', onMouseDown);\n  document.addEventListener('mouseup', onMouseUp);\n  document.addEventListener('dragstart', onDragStart);\n  document.addEventListener('dragend', onDragEnd);\n  document.addEventListener('dragover', onDragOver);\n  document.addEventListener('drop', onDrop);\n};\n","const DRAWER_CLASS = 'nb-drawer';\nconst DRAWER_OPEN_CLASS = 'nb-drawer-open';\n\n/**\n * Toggle drawer element with an option to force open/close.\n * @param {HTMLElement} drawer - Drawer HTML element to be toggled.\n * @param {boolean} [force] - Optionally force opening (`true`) or closing (`false`) regardless of current state.\n * @returns {void} Do not return any value, modify existing HTML element in-place.\n */\nconst toggleDrawer = (drawer, force) => {\n  if (!drawer) {\n    return;\n  }\n\n  drawer.classList.toggle(DRAWER_OPEN_CLASS, force);\n\n  const isOpen = drawer.classList.contains(DRAWER_OPEN_CLASS);\n\n  drawer.setAttribute('aria-hidden', isOpen ? 'false' : 'true');\n\n  const drawerToggles = [...document.querySelectorAll(`[data-nb-toggle=\"drawer\"][data-nb-target=\"#${drawer.id}\"]`)];\n  drawerToggles.forEach((drawerToggle) => drawerToggle.setAttribute('aria-expanded', isOpen ? 'true' : 'false'));\n\n  /*\n   * Maintain proper element focus when the drawer is:\n   *   1. Open - focus the drawer as soon as it becomes visible and focusable.\n   *   2. Closed - in case focus is within the drawer move it back to the first found drawer toggle and, if not\n   *     available, the `main` element instead.\n   */\n  if (isOpen) {\n    // Close other open drawers if there are any. Effectively, this allows only one drawer to be open at a time.\n    const openDrawers = document.getElementsByClassName(DRAWER_OPEN_CLASS);\n    [...openDrawers]\n      .filter((openDrawer) => openDrawer !== drawer)\n      .forEach((openDrawer) => toggleDrawer(openDrawer, false));\n\n    (() => {\n      let rafRetriesRemaining = 100; // In case something goes wrong prevent falling into an infinite loop.\n\n      // Use `requestAnimationFrame` to wait until drawer becomes visible and focusable.\n      window.requestAnimationFrame(function focusDrawer() {\n        const isDrawerVisible = window.getComputedStyle(drawer).visibility === 'visible';\n\n        if (isDrawerVisible) {\n          drawer.focus();\n        } else if (rafRetriesRemaining > 0) {\n          rafRetriesRemaining -= 1;\n          window.requestAnimationFrame(focusDrawer);\n        }\n      });\n    })();\n  } else if (drawer.contains(document.activeElement)) {\n    const nextActiveElement = drawerToggles[0] || document.querySelector('main');\n    nextActiveElement?.focus({ preventScroll: true });\n  }\n\n  const event = isOpen ? 'nb-drawer:opened' : 'nb-drawer:closed';\n  drawer.dispatchEvent(new CustomEvent(event, { bubbles: true, cancelable: true }));\n};\n\n/**\n * Initialize custom Nautobot drawers mechanism.\n * @returns {void} Do not return any value, attach an event listener.\n */\nexport const initializeDrawers = () => {\n  // Using event delegation pattern here to avoid re-creating listeners each time DOM is modified.\n  document.addEventListener('nb-drawer:close', (event) => toggleDrawer(event.target, false));\n  document.addEventListener('nb-drawer:open', (event) => toggleDrawer(event.target, true));\n  document.addEventListener('nb-drawer:toggle', (event) => toggleDrawer(event.target));\n\n  document.addEventListener('nb-drawer:opened', (event) => {\n    if (event.target.id) {\n      const nextState = { ...window.history?.state, drawer: event.target.id };\n      const url = `${window.location.pathname}${window.location.search}${window.location.hash}`;\n      window.history?.replaceState(nextState, '', url);\n    }\n  });\n\n  document.addEventListener('nb-drawer:closed', (event) => {\n    const { drawer, ...restState } =\n      typeof window.history?.state === 'object' && window.history.state !== null ? window.history.state : {};\n    const nextState = Object.keys(restState).length > 0 ? restState : null;\n    const url = `${window.location.pathname}${window.location.search}${window.location.hash}`;\n    window.history?.replaceState(nextState, '', url);\n  });\n\n  document.addEventListener('click', (event) => {\n    const dismiss = event.target.closest('[data-nb-dismiss]');\n    const toggle = event.target.closest('[data-nb-toggle]');\n\n    if (dismiss?.dataset.nbDismiss === 'drawer') {\n      const drawer = dismiss.closest(`.${DRAWER_CLASS}`);\n      drawer?.dispatchEvent(new CustomEvent(`nb-drawer:close`, { bubbles: true, cancelable: true }));\n    } else if (toggle?.dataset.nbToggle === 'drawer') {\n      const drawer = document.querySelector(toggle.dataset.nbTarget);\n      drawer?.dispatchEvent(new CustomEvent(`nb-drawer:toggle`, { bubbles: true, cancelable: true }));\n    }\n  });\n\n  if (window.history?.state?.drawer) {\n    document\n      .getElementById(window.history.state.drawer)\n      ?.dispatchEvent(new CustomEvent('nb-drawer:open', { bubbles: true, cancelable: true }));\n  }\n};\n","const SESSION_STORAGE_KEY = 'historyState';\n\n/**\n * Load last saved history state from `sessionStorage`.\n *\n * *The idea behind this and `saveState` function below is to be able to maintain history state between history entries\n * separated by a full document reload caused by navigation or form submission. Browsers do not export any native API\n * to manage history state in said scenario, so the workaround is to call `saveState` before full document reload and\n * then `loadState` after the document is loaded back again. `saveState` must be called on demand by arbitrary logic,\n * whereas `loadState` is executed automatically by the main `nautobot.js` script and should not be called manually.*\n *\n * @returns {void} Do not return any value, update current history entry with last saved state instead.\n */\nexport const loadState = () => {\n  const state = (() => {\n    try {\n      const item = window.sessionStorage?.getItem(SESSION_STORAGE_KEY);\n      return item ? JSON.parse(item) : undefined;\n    } catch (exception) {\n      return undefined;\n    }\n  })();\n\n  if (state !== undefined) {\n    const url = `${window.location.pathname}${window.location.search}${window.location.hash}`;\n    window.history?.replaceState(state, '', url);\n    window.sessionStorage?.removeItem(SESSION_STORAGE_KEY);\n  }\n};\n\n/**\n * Save given state, or current history entry state if not explicitly passed, into `sessionStorage`.\n *\n * *The idea behind this and `loadState` function above is to be able to maintain history state between history entries\n * separated by a full document reload caused by navigation or form submission. Browsers do not export any native API\n * to manage history state in said scenario, so the workaround is to call `saveState` before full document reload and\n * then `loadState` after the document is loaded back again. `saveState` must be called on demand by arbitrary logic,\n * whereas `loadState` is executed automatically by the main `nautobot.js` script and should not be called manually.*\n *\n * @param {object|null} [state] - Optional `state` object to be saved; current history entry state will be used if\n *   `state` is not explicitly passed. Use `null` to remove history state from `sessionStorage`.\n * @returns {void} Do not return any value, save current history entry state into `sessionStorage` instead.\n */\nexport const saveState = (state) => {\n  const stateToSave = state !== undefined ? state : window.history?.state;\n\n  if (stateToSave !== undefined) {\n    window.sessionStorage?.setItem(SESSION_STORAGE_KEY, JSON.stringify(stateToSave));\n  }\n};\n","/**\n * This function is heavily inspired by React `createElement`. Its purpose is to remove some boilerplate code otherwise\n * required for creating new HTML elements.\n * @example\n * // Create `row` and `col` elements with a valid parent-child relationship.\n * const child = createElement('div', { className: 'col' });\n * const parent = createElement('div', { className: 'row' }, child);\n * @param {string} tag - HTML element tag name to be passed to `document.createElement` function.\n * @param {object} [attributes={}] - Object containing HTML element attributes to be set on newly created HTML element.\n *   `class` attribute is a special case in which `className` property name can be optionally used in order to avoid\n *   ambiguation with JavaScript reserved `class` keyword.\n * @param {(HTMLElement|string)} [children] - HTML elements or string values to become newly created element children.\n * @returns {HTMLElement} New HTML element. Append it to an existing DOM node if you want it to appear in browser.\n */\nexport const createElement = (tag, attributes = {}, ...children) => {\n  const element = document.createElement(tag);\n\n  Object.entries(attributes).forEach(([attribute, value]) =>\n    element.setAttribute(attribute === 'className' ? 'class' : attribute, value),\n  );\n\n  children.forEach((child) =>\n    typeof child === 'string' ? element.insertAdjacentText('beforeend', child) : element.appendChild(child),\n  );\n\n  return element;\n};\n\n/**\n * Remove all classes from given element, optionally excluding some explicitly.\n * @example\n * // Remove all classes except `container-fluid` from given element.\n * removeElementClasses(element, 'container-fluid');\n * @param {HTMLElement} element - HTML element which classes are to be removed.\n * @param {string} [ignore] - Classes to ignore during class removal, i.e. should be left as-is.\n * @returns {void} Do not return any value, modify existing HTML element in-place.\n */\nexport const removeElementClasses = (element, ...ignore) =>\n  [...element.classList.entries()]\n    .filter(([, className]) => !ignore.includes(className))\n    .forEach(([, className]) => element.classList.remove(className));\n\n/**\n * Convert `px` pixel value to `rem` units.\n * @example\n * // Convert `20` (`px`) to `rem`, return `1.25` (`rem`).\n * rem(20);\n * @param {number} px - Pixel value.\n * @returns {number} Given pixel value converted to `rem` units.\n */\nexport const rem = (px) => {\n  const rootFontSize = window.getComputedStyle(document.documentElement).fontSize;\n  return px / parseInt(rootFontSize, 10);\n};\n","import { createElement, rem } from './utils.js';\n\nconst FORM_CONTROL_PADDING_X = rem(12);\nconst GAP = rem(6);\nconst ICON_SIZE = rem(20);\n\nconst BASE_SEARCH_INPUT_PADDING_X = `${FORM_CONTROL_PADDING_X + ICON_SIZE + GAP}rem`;\n\nconst MAX_BADGE_COUNT = 1;\n\nexport const initializeSearch = () => {\n  const headerSearch = document.getElementById('header_search');\n\n  // Do nothing and `return` early when there is no `#header_search` element in the page.\n  if (!headerSearch) {\n    return () => {};\n  }\n\n  const NAV_MENU = (() => {\n    try {\n      const navMenu = document.getElementById('nav_menu');\n      return navMenu ? JSON.parse(navMenu.textContent) : {};\n    } catch (exception) {\n      return {};\n    }\n  })();\n\n  /*\n   * Pick only the lowest level of nested `nav_menu` object. In TypeScript, it would be manifested as the following type:\n   * `{ [item_link: string]: { name: string; weight: number } };`.\n   */\n  const SEARCHABLE_MODELS = Object.fromEntries(\n    Object.entries(NAV_MENU.tabs).flatMap(([, tab_details]) =>\n      Object.entries(tab_details.groups).flatMap(([, group_details]) =>\n        Object.entries(group_details.items).map(([item_link, item_details]) => [item_link, item_details]),\n      ),\n    ),\n  );\n\n  const BADGE_REG_EXP = new RegExp(\n    `^\\\\s*in\\\\s*:\\\\s*(${Object.entries(SEARCHABLE_MODELS)\n      // Extend simple vanilla model name match with more word delimiter variants (or no word delimiters at all).\n      .flatMap(([, { name }]) => [name, ...['', '_', '\\\\-'].map((delimiter) => name.replace(/\\s+/g, delimiter))])\n      .join('|')})\\\\s+`,\n    'i',\n  );\n\n  const headerSearchInput = headerSearch.querySelector('input');\n\n  const closeSearchPopup = () => {\n    const searchPopup = document.getElementById('search_popup');\n\n    if (searchPopup) {\n      searchPopup.remove();\n      document.body.classList.toggle('overflow-y-hidden', false);\n    }\n  };\n\n  // Focus search input on Cmd+K or Ctrl+K shortcut and close search popup on Escape.\n  const onKeyDown = (event) => {\n    const isPressedCmd = event.getModifierState?.('Meta');\n    const isPressedCtrl = event.ctrlKey;\n\n    if ((isPressedCmd || isPressedCtrl) && event.key === 'k') {\n      event.preventDefault();\n      headerSearchInput.focus();\n    } else if (event.key === 'Escape') {\n      closeSearchPopup();\n    }\n  };\n\n  document.addEventListener('keydown', onKeyDown);\n\n  const openSearchPopup = () => {\n    const searchPopup = document.getElementById('search_popup');\n\n    // Just focus an existing search popup `input` and `return` early if `#searchPopup` is already open.\n    if (searchPopup) {\n      const input = searchPopup.querySelector('input');\n      input?.focus();\n      input?.setSelectionRange(-1, -1);\n      return;\n    }\n\n    document.body.classList.toggle('overflow-y-hidden', true);\n\n    const { left: mainLeft = 0, right: mainRight = 0 } = document.querySelector('main')?.getBoundingClientRect() ?? {};\n    const { top: headerSearchInputTop } = headerSearchInput.getBoundingClientRect();\n\n    const icon = createElement('span', {\n      ['aria-hidden']: 'true',\n      className:\n        'mdi mdi-magnify d-inline-flex ms-12 mt-6 pe-none position-absolute start-0 text-secondary top-0 user-select-none',\n      style: `height: ${ICON_SIZE}rem; width: ${ICON_SIZE}rem;`,\n    });\n\n    const badges = createElement('span', {\n      className: 'd-inline-flex gap-6 left-0 my-6 position-absolute top-0',\n      style: `left: ${BASE_SEARCH_INPUT_PADDING_X};`,\n    });\n\n    const input = createElement('input', {\n      className: 'form-control w-100',\n      name: 'q',\n      required: 'true',\n      style: `padding-inline: ${BASE_SEARCH_INPUT_PADDING_X};`,\n      type: 'search',\n      value: headerSearchInput.value,\n    });\n\n    const clear = createElement(\n      'button',\n      {\n        className: `btn mdi mdi-close bg-transparent border-0 end-0 hstack justify-content-center me-12 mt-6 p-0 position-absolute text-secondary top-0 nb-transition-base${input.value === '' ? ' invisible opacity-0' : ''}`,\n        style: `height: ${ICON_SIZE}rem; width: ${ICON_SIZE}rem;`,\n        type: 'button',\n      },\n      createElement('span', { className: 'visually-hidden' }, 'Clear'),\n    );\n\n    clear.addEventListener('click', () => {\n      input.value = '';\n      input.dispatchEvent(new InputEvent('input'));\n      input.focus();\n    });\n\n    input.addEventListener('input', () => {\n      const shouldHideClear = input.value === '';\n      clear.classList.toggle('invisible', shouldHideClear);\n      clear.classList.toggle('opacity-0', shouldHideClear);\n    });\n\n    const submit = createElement('input', { className: 'd-none', type: 'submit' });\n\n    const form = createElement(\n      'form',\n      { action: headerSearch.getAttribute('action'), className: 'position-relative w-100', role: 'search' },\n      icon,\n      badges,\n      input,\n      clear,\n      submit,\n    );\n\n    /* In case there is no badge, use global search. Otherwise, navigate to badge specific model list view. */\n    form.addEventListener('submit', () => {\n      const badge = form.querySelector('[data-nb-link]:last-child');\n\n      if (badge) {\n        form.setAttribute('action', badge.dataset.nbLink);\n      }\n    });\n\n    const results = createElement('div');\n\n    const popup = createElement(\n      'div',\n      { className: 'mx-auto w-100', style: `max-width: ${rem(720)}rem;` },\n      form,\n      results,\n    );\n\n    const overlay = createElement(\n      'div',\n      {\n        className: 'overflow-auto pb-20 position-fixed top-0 end-0 bottom-0 start-0 nb-z-modal-backdrop',\n        id: 'search_popup',\n        role: 'dialog',\n        style: `background-color: rgba(0, 0, 0, .5); padding-block-start: ${headerSearchInputTop}px; padding-inline-start: calc(${mainLeft}px + ${rem(20)}rem); padding-inline-end: calc(100% - ${mainRight}px + ${rem(20)}rem);`,\n      },\n      popup,\n    );\n\n    // Close search popup on direct overlay click.\n    overlay.addEventListener('click', (event) => {\n      if (event.target === overlay) {\n        closeSearchPopup();\n      }\n    });\n\n    document.body.appendChild(overlay);\n\n    const addBadge = (link) => {\n      const name = Object.entries(SEARCHABLE_MODELS).find(([item_link]) => item_link === link)?.[1]?.name ?? link;\n\n      const removeButton = createElement(\n        'button',\n        { type: 'button' },\n        createElement('span', { ['aria-hidden']: 'true', class: 'mdi mdi-close' }),\n        createElement('span', { class: 'visually-hidden' }, 'Remove'),\n      );\n\n      removeButton.addEventListener('click', () => {\n        badge.remove();\n        input.focus();\n      });\n\n      const badge = createElement(\n        'span',\n        { className: 'badge border', ['data-nb-link']: link },\n        `in: ${name}`,\n        removeButton,\n      );\n\n      // Before adding a new badge, remove existing badges with the same `link` to prevent duplicates.\n      [...badges.querySelectorAll(`[data-nb-link=\"${link}\"]`)].forEach((badge) => badge.remove());\n\n      badges.appendChild(badge);\n\n      // Obey the `MAX_BADGE_COUNT` constraint.\n      [...badges.children].slice(0, -1 * MAX_BADGE_COUNT).forEach((badge) => badge.remove());\n    };\n\n    // Recalculate search input left padding when badges container size changes, i.e. a badge is added or removed.\n    const resizeObserver = new ResizeObserver(() => {\n      const { width } = badges.getBoundingClientRect();\n      input.style.paddingInlineStart = width\n        ? `calc(${BASE_SEARCH_INPUT_PADDING_X} + ${width}px + ${GAP}rem)`\n        : BASE_SEARCH_INPUT_PADDING_X;\n    });\n\n    resizeObserver.observe(badges);\n\n    input.addEventListener('input', (event) => {\n      const match = input.value.match(BADGE_REG_EXP);\n\n      if (match) {\n        const [phrase, model] = match;\n\n        const normalize = (text) =>\n          text\n            .trim()\n            .toLowerCase()\n            .replace(/\\s|_|-/g, '');\n        const link = Object.entries(SEARCHABLE_MODELS).find(\n          ([, { name }]) => normalize(name) === normalize(model),\n        )?.[0];\n\n        if (link) {\n          // Remove phrase that matched the badge-specific regular expression and replace it with a corresponding badge.\n          input.value = input.value.replace(phrase, '');\n          input.dispatchEvent(new InputEvent('input'));\n          addBadge(link);\n        }\n      }\n    });\n\n    // Remove the first badge on the right-hand side when `'Backspace'` key is pressed on the input start position.\n    input.addEventListener('keydown', (event) => {\n      const isBackspace = event.key === 'Backspace';\n      const isInputStart = input.selectionEnd === 0 && input.selectionStart === 0;\n\n      if (isBackspace && isInputStart) {\n        badges.querySelector(':last-child')?.remove();\n      }\n    });\n\n    // When search popup is open, copy existing badges from `#header_search` to search popup input.\n    headerSearch.querySelectorAll('[data-nb-link]').forEach((badge) => addBadge(badge.dataset.nbLink));\n\n    // Automatically focus search popup input when opened and move cursor to the end of input field.\n    input.focus();\n    input.setSelectionRange(-1, -1);\n  };\n\n  headerSearchInput.addEventListener('focus', openSearchPopup);\n\n  return () => {\n    closeSearchPopup();\n    document.removeEventListener('keydown', onKeyDown);\n    headerSearchInput.removeEventListener('focus', openSearchPopup);\n  };\n};\n","import get from 'lodash.get';\n\n/**\n * Get HTML `element`. This function accepts input as native `Document` and `Element` object and `jQuery` collection.\n * It should no longer be required after migrating away from jQuery.\n * @param {Document|Element|jQuery} `element` - `element` in question.\n * @returns {Document|Element} Native `element` object.\n */\nconst getElement = (element) => (element instanceof Document || element instanceof Element ? element : element[0]);\n\n/**\n * Get `select` element value.\n * @param {HTMLSelectElement} select - `select` element in question.\n * @returns {string|string[]} `string` value for single combobox, an array of `string` values for multiple combobox.\n */\nconst getValue = (select) =>\n  select?.getAttribute('multiple') !== null ? [...select.selectedOptions].map((option) => option.value) : select?.value;\n\n/**\n * Set Select2 combobox value(s).\n * @param {HTMLSelectElement} select2 - Select2 combobox HTML element.\n * @param {{ text: string, value: string }[]|null} value - Array of objects containing `text` and `value` key-value\n *   pairs; `null` to reset the field value.\n */\nexport const setSelect2Value = (select2, value) => {\n  $(select2).val(null);\n\n  (value ?? []).forEach(({ text, value }) => {\n    if (!select2.querySelector(`option[value=\"${value}\"]`)) {\n      const option = document.createElement('option');\n      option.innerText = text;\n      option.setAttribute('selected', 'true');\n      option.setAttribute('value', value);\n      select2.appendChild(option);\n    }\n  });\n\n  const nextValue = (() => {\n    if (value.length > 0) {\n      const isMultiple = select2?.getAttribute('multiple') !== null;\n      return isMultiple ? value.map(({ value }) => value) : value?.[0]?.value;\n    }\n\n    return null;\n  })();\n\n  $(select2).val(nextValue).trigger('change');\n};\n\n/**\n * Parse URLs which may contain variable references to other field values.\n * @param {string} url - URL template string.\n * @returns {string} URL with interpolated dynamic values.\n */\nconst parseURL = (url) => {\n  const filter_regex = /\\{\\{([a-z_]+)}}/g;\n\n  let match;\n  let rendered_url = url;\n\n  while ((match = filter_regex.exec(url))) {\n    const filter_field = document.querySelector(`#id_${match[1]}`);\n    const custom_attribute = filter_field?.selectedOptions?.[0]?.getAttribute('api-value');\n    const replace =\n      custom_attribute || filter_field.value || (filter_field.getAttribute('data-null-option') ? 'null' : undefined);\n\n    rendered_url = replace ? rendered_url.replace(match[0], replace) : rendered_url;\n  }\n\n  return rendered_url;\n};\n\n/**\n * Initialize given Select2 components in passed `context` by `selector`, optionally with `options`.\n * @param {Document|Element|jQuery} context - Context root element.\n * @param {string} selector - CSS query selector of `select` elements to be initialized as Select2 components.\n * @param {object} [options] - Optional Select2 components initialization options.\n * @returns {void} Do not return any value, just initialize given Select2 components.\n */\nconst initializeSelect2 = (context, selector, options) =>\n  [...getElement(context).querySelectorAll(selector)].forEach((element) =>\n    $(element).select2({\n      allowClear: true,\n      placeholder: element.getAttribute('placeholder') || '---------',\n      theme: 'bootstrap-5',\n      selectionCssClass: 'select2--small',\n      width: 'off',\n      ...options,\n    }),\n  );\n\nconst initializeColorPicker = (context, dropdownParent = null) => {\n  // Assign color picker selection classes.\n  const colorPickerClassCopy = (data, container) => {\n    if (data.element) {\n      // Swap the style.\n      const containerElement = getElement(container);\n      containerElement.setAttribute('style', data.element.getAttribute('style'));\n    }\n\n    return data.text;\n  };\n\n  initializeSelect2(context, '.nautobot-select2-color-picker', {\n    dropdownParent,\n    templateResult: colorPickerClassCopy,\n    templateSelection: colorPickerClassCopy,\n  });\n};\n\nconst initializeDynamicChoiceSelection = (context, dropdownParent = null) => {\n  initializeSelect2(context, '.nautobot-select2-api', {\n    ajax: {\n      delay: 500,\n      url: function () {\n        const element = this[0];\n        const url = parseURL(element.getAttribute('data-url'));\n\n        // If URL is not fully rendered yet, abort the request.\n        return !url.includes('{{') && url;\n      },\n      data: function (params) {\n        const element = this[0];\n\n        // Paging. Note that `params.page` indexes at 1.\n        const offset = (params.page - 1) * 50 || 0;\n\n        // Base query params.\n        const limit = 50;\n        const q = params.term;\n\n        // Set api_version.\n        const api_version = element.getAttribute('data-api-version');\n\n        // Allow for controlling the depth setting from within APISelect.\n        const depth = parseInt(element.getAttribute('data-depth'), 10) || 0;\n\n        // Attach content_type to parameters.\n        const content_type = element.getAttribute('data-contenttype');\n\n        // Attach any extra query parameters\n        const extra_query_parameters = Object.fromEntries(\n          [...element.attributes]\n            .filter((attribute) => attribute.name.includes('data-query-param-'))\n            .flatMap((attribute) => {\n              const [, param_name] = attribute.name.split('data-query-param-');\n\n              const values = (() => {\n                try {\n                  return JSON.parse(attribute.value);\n                } catch (exception) {\n                  return [];\n                }\n              })();\n\n              return values.flatMap((value) => {\n                const has_ref_field = value.startsWith('$');\n\n                // Referencing the value of another form field.\n                const ref_field = has_ref_field\n                  ? (() => {\n                      const name = value.slice(1);\n\n                      if (element.id.includes('id_form-')) {\n                        const id_prefix = element.id.match(/id_form-[0-9]+-/i, '')[0];\n                        return document.querySelector(`#${id_prefix}${name}`);\n                      }\n\n                      /*\n                       * If the element is in a table row with a class containing \"dynamic-formset\" we need to find the\n                       * reference field in the same row.\n                       */\n                      if (element.closest('tr')?.classList.contains('dynamic-formset')) {\n                        return element.closest('tr').querySelector(`select[id*=\"${name}\"]`);\n                      }\n\n                      return document.querySelector(`#id_${name}`);\n                    })()\n                  : null;\n\n                const ref_field_value = ref_field\n                  ? (() => {\n                      const field_value = getValue(ref_field);\n                      const style = window.getComputedStyle(ref_field);\n\n                      if (field_value && style.opacity !== '0' && style.visibility !== 'hidden') {\n                        return field_value;\n                      }\n\n                      if (ref_field.getAttribute('required') && ref_field.getAttribute('data-null-option')) {\n                        return 'null';\n                      }\n                    })()\n                  : null;\n\n                const param_value = has_ref_field ? ref_field_value : value;\n                return param_value !== null && param_value !== undefined\n                  ? [[param_name, ref_field_value || value]]\n                  : [];\n              });\n            }),\n        );\n\n        const parameters = {\n          depth: String(depth),\n          limit: String(limit),\n          offset: String(offset),\n          ...(api_version ? { api_version } : undefined),\n          ...(content_type ? { content_type } : undefined),\n          ...(q ? { q } : undefined),\n          ...extra_query_parameters,\n        };\n\n        // This will handle params with multiple values (i.e. for list filter forms).\n        return new URLSearchParams(parameters).toString();\n      },\n      processResults: function (data) {\n        const element = this.$element[0];\n        [...element.querySelectorAll('option')].forEach((child) => child.removeAttribute('disabled'));\n\n        const results = [\n          // Handle the null option, but only add it once.\n          ...(element.getAttribute('data-null-option') && data.previous === null\n            ? [{ id: 'null', text: element.getAttribute('data-null-option') }]\n            : []),\n          ...Object.values(\n            data.results.reduce((results, record, index) => {\n              // The disabled-indicator equated to true, so we disable this option.\n              const disabled = Boolean(record?.[element.getAttribute('disabled-indicator')]);\n              const id = get(record, element.getAttribute('value-field')) || record.id;\n              const text = get(record, element.getAttribute('display-field')) || record.name;\n\n              const item = { ...record, disabled, id, text };\n              const { group, site, url } = item;\n\n              // DynamicGroupSerializer has a `children` field which fits an inappropriate if condition\n              // in select2.min.js, which will result in the incorrect rendering of DynamicGroup DynamicChoiceField.\n              // So we nullify the field here since we do not need this field.\n              const should_nullify_children = Boolean(url?.includes('dynamic-groups'));\n\n              const collection = (() => {\n                switch (true) {\n                  case group !== undefined && group !== null && site !== undefined && site !== null:\n                    return { property: `${site.name}:${group.name}`, text: `${site.name} / ${group.name}` };\n\n                  case group !== undefined && group !== null:\n                    return { property: group.name, text: group.name };\n\n                  case site !== undefined && site !== null:\n                    return { property: site.name, text: site.name };\n\n                  case group === null && site === null:\n                    return { property: 'global', text: 'Global' };\n\n                  default:\n                    return undefined;\n                }\n              })();\n\n              return {\n                ...results,\n                ...(collection\n                  ? {\n                      [collection.property]: {\n                        ...results[collection.property],\n                        ...(!results[collection.property] ? { text: collection.text } : undefined),\n                        children: should_nullify_children\n                          ? undefined\n                          : [...(results[collection.property]?.children ?? []), item],\n                      },\n                    }\n                  : { [index]: item }),\n              };\n            }, {}),\n          ),\n        ];\n\n        // Check if there are more results to page.\n        const has_next_page = data.next !== null;\n        return { results, pagination: { more: has_next_page } };\n      },\n    },\n    dropdownParent,\n  });\n};\n\nconst initializeMultiValueChar = (context, dropdownParent = null) =>\n  initializeSelect2(context, '.nautobot-select2-multi-value-char', {\n    dropdownParent,\n    language: { noResults: () => 'Type something to add it as an option' },\n    multiple: true,\n    tags: true,\n  });\n\nconst initializeStaticChoiceSelection = (context, dropdownParent = null) =>\n  initializeSelect2(context, '.nautobot-select2-static', { dropdownParent });\n\nexport const initializeSelect2Fields = (context) => {\n  initializeColorPicker(context);\n  initializeDynamicChoiceSelection(context);\n  initializeMultiValueChar(context);\n  initializeStaticChoiceSelection(context);\n\n  [...getElement(context).querySelectorAll('.modal')].forEach((modal) => {\n    initializeColorPicker(modal, modal);\n    initializeDynamicChoiceSelection(modal, modal);\n    initializeMultiValueChar(modal, modal);\n    initializeStaticChoiceSelection(modal, modal);\n  });\n};\n","import * as bootstrap from 'bootstrap';\nimport { createElement, removeElementClasses } from './utils.js';\n\nconst TABS_HIDDEN_CLASSES = ['invisible', 'position-absolute'];\n\n/**\n * Collapse wrapped tabs to dropdown menu in given tab container.\n * @param {HTMLElement} tabs - Tab container HTML element.\n * @returns {void} Do not return any value, modify DOM instead.\n */\nexport const collapseTabs = (tabs) => {\n  const tabsParent = tabs.parentNode;\n\n  // Remove existing tab clones to prevent duplicates because they will be created from scratch below if needed.\n  [...tabsParent.querySelectorAll('.nav.nav-tabs[data-clone=\"true\"]')].forEach((tabsClone) => tabsClone.remove());\n\n  // For safety, do not operate on original tabs element, deep clone tabs to operate on its clone instead.\n  const tabsClone = tabs.cloneNode(true);\n\n  // Remove `id` element attribute from cloned tabs element to avoid potential `id` conflicts.\n  tabsClone.removeAttribute('id');\n\n  // Set `data-clone` attribute to `\"true\"` on tabs clone element to be able to easily distinguish it from the original.\n  tabsClone.dataset.clone = 'true';\n\n  /*\n   * Add following classes to cloned element to:\n   *   1. Make tabs span across the whole required width without wrapping.\n   *   2. Force them to be (temporarily) invisible.\n   */\n  const tabsCloneTemporaryClasses = ['flex-nowrap', 'invisible', 'position-absolute', 'z-n1'];\n  tabsClone.classList.add(...tabsCloneTemporaryClasses);\n\n  // Append currently invisible cloned tabs to DOM right after the original tabs element.\n  tabs.nextSibling ? tabsParent.insertBefore(tabsClone, tabs.nextSibling) : tabsParent.appendChild(tabsClone);\n\n  // Excessive tabs should be collapsed if tabs clone is wider than the original. Remember - clone does not wrap.\n  const shouldCollapseTabs = () => tabsClone.getBoundingClientRect().width > tabs.getBoundingClientRect().width;\n\n  // If there is no need to collapse tabs, show original tabs (if previously hidden) clean up tabs clone and `return` early.\n  if (!shouldCollapseTabs()) {\n    tabs.classList.remove(...TABS_HIDDEN_CLASSES);\n    tabsParent.removeChild(tabsClone);\n    return;\n  }\n\n  /*\n   * Compose dropdown element. Ignore dropdown items for now, they will be added to the dropdown menu soon anyway. The\n   * most important thing about this step is to append dropdown with visible toggle button at the end of cloned tabs\n   * list to reach maximum width (dropdown toggle has considerable size too) before starting to actually collapse tabs.\n   */\n  const dropdownMenu = createElement('ul', { className: 'dropdown-menu dropdown-menu-end' });\n  const dropdownToggleIcon = createElement('span', { className: 'mdi mdi-menu' });\n  const dropdownToggleLabel = createElement('span', { className: 'visually-hidden' }, 'Toggle Dropdown');\n  const dropdownToggle = createElement(\n    'button',\n    {\n      'aria-expanded': 'false',\n      className: 'btn dropdown-toggle text-secondary',\n      'data-bs-toggle': 'dropdown',\n      type: 'button',\n    },\n    dropdownToggleIcon,\n    dropdownToggleLabel,\n  );\n  const dropdown = createElement(\n    'li',\n    { className: 'dropdown flex-grow-1 mb-n1 text-end' },\n    dropdownToggle,\n    dropdownMenu,\n  );\n  tabsClone.appendChild(dropdown);\n\n  /*\n   * Identify tabs that require collapsing by taking out one by one from the right-hand side until tabs width can fit\n   * inside its parent container. Essentially, overflowing tabs are moved from tab list to future dropdown menu.\n   */\n  const collapsedTabs = [];\n  while (shouldCollapseTabs()) {\n    const lastTab = dropdown.previousElementSibling; // With dropdown appended to DOM, its previous siblings are tabs.\n    collapsedTabs.unshift(lastTab); // Use `unshift` instead of `push` because this loop is iterating backward in a sense.\n    tabsClone.removeChild(lastTab);\n  }\n\n  /*\n   * Properly convert collapsed tabs to dropdown items:\n   *   1. Remove all `<li>` `nav-item` element classes.\n   *   2. Remove all `<a>` `nav-link` element classes other than `active` and `disabled` to maintain valid tab state.\n   *   3. Add `dropdown-item` class to `<a>` element (formerly `nav-link`).\n   *   4. Append collapsed tab to dropdown menu.\n   */\n  collapsedTabs.forEach((collapsedTab) => {\n    removeElementClasses(collapsedTab);\n\n    [...collapsedTab.children].forEach((navLink) => {\n      removeElementClasses(navLink, 'active', 'disabled');\n      navLink.classList.add('dropdown-item', 'justify-content-between');\n    });\n\n    dropdownMenu.appendChild(collapsedTab);\n  });\n\n  /*\n   * Tabs clone with collapsed tabs is now ready to be swapped with original. The only thing left to do is to\n   * make it synchronize its state back to the original.\n   */\n  [...tabsClone.querySelectorAll('a')].forEach((clonedTab) => {\n    clonedTab.addEventListener('shown.bs.tab', () => {\n      const originalTab = tabs.querySelector(`a[href=\"${clonedTab.getAttribute('href')}\"]`);\n      const originalTabInstance = bootstrap.Tab.getInstance(originalTab) || new bootstrap.Tab(originalTab);\n      originalTabInstance.show();\n    });\n  });\n\n  // Swap tabs clone with the original, in other words swap wrapped tabs with collapsed tabs.\n  tabs.classList.add(...TABS_HIDDEN_CLASSES);\n  tabsClone.classList.remove(...tabsCloneTemporaryClasses);\n};\n\n/**\n * Observe size changes of all tab containers on the page and collapse tabs inside of them if they wrap.\n * @example\n * // Run `collapseTabs` algorithm for all tabs on the page exactly once, i.e. observe and immediately unobserve.\n * const unobserveCollapseTabs = observeCollapseTabs();\n * unobserveCollapseTabs();\n * @returns {function(): void} Unobserve function - disconnect all resize observers created during function call.\n */\nexport const observeCollapseTabs = () => {\n  const resizeObservers = [...document.querySelectorAll('.nav.nav-tabs')].map((tabs) => {\n    const resizeObserver = new ResizeObserver(() => collapseTabs(tabs));\n    resizeObserver.observe(tabs);\n    return resizeObserver;\n  });\n\n  return () => resizeObservers.forEach((resizeObserver) => resizeObserver.disconnect());\n};\n","const THEME_MODAL_ID = 'theme_modal';\n\nconst THEME_DARK = 'dark';\nconst THEME_LIGHT = 'light';\nconst THEME_SYSTEM = 'system';\n\n/**\n * Get preferred system color scheme.\n * @returns {('dark'|'light')} Preferred system color scheme.\n */\nconst getPreferredColorScheme = () =>\n  window.matchMedia?.(`(prefers-color-scheme: ${THEME_DARK})`).matches ? THEME_DARK : THEME_LIGHT;\n\n/**\n * Check if given `theme` is a valid Nautobot theme, i.e. `'dark'`, `'light'`, or `'system'`.\n * @param {string} theme - Theme in question.\n * @returns {boolean} `true` is given `theme` is a valid Nautobot theme, `false` otherwise.\n */\nconst isValidTheme = (theme) => theme === THEME_DARK || theme === THEME_LIGHT || theme === THEME_SYSTEM;\n\n/**\n * Automatically detect Nautobot theme. It is derived from `cookie` or `localStorage` if set manually, and falls back to\n * preferred system color scheme by default.\n * @returns {('dark'|'light'|'system')} Detected Nautobot theme.\n */\nconst detectTheme = () => {\n  // Cookie getter based on MDN example: https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie#example_2_get_a_sample_cookie_named_test2\n  const cookieTheme = document.cookie\n    .split('; ')\n    .find((cookie) => cookie.startsWith('theme='))\n    ?.split('=')[1];\n  if (isValidTheme(cookieTheme)) {\n    return cookieTheme;\n  }\n\n  const localStorageTheme = window.localStorage?.getItem('theme');\n  if (isValidTheme(localStorageTheme)) {\n    return localStorageTheme;\n  }\n\n  return THEME_SYSTEM;\n};\n\n/**\n * Set Nautobot theme.\n * @param {('dark'|'light'|'system')} theme - Nautobot theme to be set.\n * @param {{ manual?: boolean }} [options] - Setter function options object. Currently supported option is `manual`.\n * @returns {void} Do not return any value, set given `theme` and save it into a persistent store if `manual` is `true`.\n */\nconst setTheme = (theme, options) => {\n  const isManual = Boolean(options?.manual);\n\n  const modal = document.getElementById(THEME_MODAL_ID);\n  const buttons = modal?.querySelectorAll('button[data-nb-theme]') ?? [];\n\n  buttons.forEach((button) =>\n    ['border', 'border-primary'].forEach((className) =>\n      button.classList.toggle(className, button.dataset.nbTheme === theme),\n    ),\n  );\n\n  const bsTheme = theme === THEME_SYSTEM ? getPreferredColorScheme() : theme;\n  document.documentElement.dataset.theme = bsTheme;\n  document.documentElement.dataset.bsTheme = bsTheme;\n\n  if (theme === THEME_SYSTEM) {\n    document.cookie = `theme=${theme}; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT`;\n    window.localStorage?.removeItem('theme');\n  } else if (isManual) {\n    document.cookie = `theme=${theme}; path=/`;\n    window.localStorage?.setItem('theme', theme);\n  }\n\n  if (theme === THEME_DARK || (theme === THEME_SYSTEM && bsTheme === THEME_DARK)) {\n    [...document.getElementsByTagName('object')].forEach((object) => {\n      object.addEventListener('load', (event) => {\n        if (event.target.contentDocument) {\n          const images = event.target.contentDocument.getElementsByTagName('image');\n          const short_names = event.target.contentDocument.getElementsByClassName('rack-device-shortname');\n          const full_names = event.target.contentDocument.getElementsByClassName('rack-device-fullname');\n\n          [...images, ...short_names, ...full_names].forEach((rack_image) =>\n            rack_image.setAttribute('filter', 'url(#darkmodeinvert)'),\n          );\n        }\n      });\n    });\n  }\n\n  if (isManual) {\n    document.location.reload();\n  }\n};\n\nexport const initializeTheme = () => {\n  const modal = document.getElementById(THEME_MODAL_ID);\n  const buttons = modal?.querySelectorAll('button[data-nb-theme]') ?? [];\n\n  setTheme(detectTheme());\n  window.matchMedia(`(prefers-color-scheme: ${THEME_DARK})`).addEventListener('change', () => setTheme(detectTheme()));\n\n  const onClick = (event) => setTheme(event.currentTarget.dataset.nbTheme, { manual: true });\n  buttons.forEach((button) => button.addEventListener('click', onClick));\n\n  return () => buttons.forEach((button) => button.removeEventListener('click', onClick));\n};\n","import '../scss/nautobot.scss';\n\nimport * as bootstrap from 'bootstrap';\nwindow.bootstrap = bootstrap;\n\nimport ClipboardJS from 'clipboard';\nwindow.ClipboardJS = ClipboardJS;\n\nimport flatpickr from 'flatpickr';\nwindow.flatpickr = flatpickr;\n\nimport hljs from 'highlight.js/lib/core';\nimport 'highlight.js/styles/github.css';\nimport graphql from 'highlight.js/lib/languages/graphql';\nimport json from 'highlight.js/lib/languages/json';\nimport xml from 'highlight.js/lib/languages/xml';\nimport yaml from 'highlight.js/lib/languages/yaml';\n\nhljs.registerLanguage('graphql', graphql);\nhljs.registerLanguage('json', json);\nhljs.registerLanguage('xml', xml);\nhljs.registerLanguage('yaml', yaml);\nwindow.hljs = hljs;\n\nimport jQuery from 'jquery';\nwindow.jQuery = jQuery;\nwindow.$ = window.jQuery;\n\nimport 'jquery-ui';\nimport 'select2';\n\nimport { initializeCollapseToggleAll } from './collapse.js';\nimport { initializeDraggable } from './draggable.js';\nimport { initializeDrawers } from './drawer.js';\nimport { observeFormStickyFooters } from './form.js';\nimport { loadState, saveState } from './history.js';\nimport { initializeSearch } from './search.js';\nimport { initializeSelect2Fields, setSelect2Value } from './select2.js';\nimport { observeCollapseTabs } from './tabs.js';\nimport { initializeTheme } from './theme.js';\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  window.nb = window.nb ?? {};\n\n  // History\n  loadState();\n  window.nb.history = { saveState };\n\n  // Tooltips\n  // https://getbootstrap.com/docs/5.3/components/tooltips/#enable-tooltips\n  [...document.querySelectorAll('[data-bs-toggle=\"tooltip\"]')].forEach((tooltip) => new bootstrap.Tooltip(tooltip));\n\n  // Sidenav\n  document.querySelector('.nb-sidenav-toggler').addEventListener('click', (event) => {\n    const toggler = event.currentTarget;\n\n    const controls = toggler.getAttribute('aria-controls');\n    const expanded = toggler.getAttribute('aria-expanded') === 'true';\n\n    toggler.setAttribute('aria-expanded', String(!expanded));\n\n    const sidenav = document.getElementById(controls);\n    sidenav.classList.toggle('nb-sidenav-collapsed', expanded);\n  });\n\n  [...document.querySelectorAll('.nb-sidenav-list-item')].forEach((sidenavListItem) => {\n    sidenavListItem.addEventListener('click', () => {\n      const controls = sidenavListItem.getAttribute('aria-controls');\n      const expanded = sidenavListItem.getAttribute('aria-expanded') === 'true';\n\n      sidenavListItem.setAttribute('aria-expanded', String(!expanded));\n\n      const onClickDocument = (documentClickEvent) => {\n        const { target: documentClickTarget } = documentClickEvent;\n        const sidenavFlyout = document.getElementById(controls);\n\n        const isClickOutside =\n          !sidenavListItem.contains(documentClickTarget) && !sidenavFlyout.contains(documentClickTarget);\n\n        if (isClickOutside) {\n          sidenavListItem.setAttribute('aria-expanded', 'false');\n          document.removeEventListener('click', onClickDocument);\n        }\n      };\n\n      expanded\n        ? document.removeEventListener('click', onClickDocument)\n        : document.addEventListener('click', onClickDocument);\n    });\n  });\n\n  // Collapse\n  initializeCollapseToggleAll();\n\n  // Draggable\n  initializeDraggable();\n\n  // Drawer\n  initializeDrawers();\n\n  // Form\n  // TODO(norbert-mieczkowski-codilime): for htmx SPA-like behavior, re-initialize sticky footers like tabs below.\n  let unobserveFormStickyFooters = observeFormStickyFooters();\n\n  // Search\n  initializeSearch();\n\n  // Select2\n  window.nb.select2 = { initializeSelect2Fields, setSelect2Value };\n\n  // Tabs\n  /*\n   * TODO(norbert-mieczkowski-codilime): listen for proper event type(s) to re-initialize collapse tabs observers when\n   *   htmx dynamic content reloading is implemented. Said re-initialization should be as simple as something like:\n   *   ```js\n   *   let unobserveCollapseTabs = observeCollapseTabs();\n   *   document.body.addEventListener('htmx:xhr:loadend', () => unobserveCollapseTabs());\n   *   document.body.addEventListener('htmx:load', () => {\n   *     unobserveCollapseTabs = observeCollapseTabs();\n   *   });\n   *   ```\n   */\n  let unobserveCollapseTabs = observeCollapseTabs();\n\n  // Theme\n  initializeTheme();\n\n  const toggleFavorite = (element, event) => {\n    if (event.detail.successful) {\n      element.classList.toggle('active');\n    }\n  };\n  window.toggleFavorite = toggleFavorite;\n\n  const setRequestUrl = (element, event) => {\n    const isFavorite = element.classList.contains('active');\n    event.detail.path = isFavorite ? element.dataset.deleteUrl : element.dataset.addUrl;\n  };\n  window.setRequestUrl = setRequestUrl;\n});\n","/**\n * Observe pinned state of elements of class `nb-form-sticky-footer` on the page and add drop shadow with `nb-is-pinned`\n * class if they are pinned. This is purely cosmetic and does not affect functionality.\n * @example\n * // Run form sticky footers observer algorithm exactly once, i.e. observe and immediately unobserve.\n * const unobserveFormStickyFooters = observeFormStickyFooters();\n * unobserveFormStickyFooters();\n * @returns {function(): void} Unobserve function - disconnect all resize observers created during function call.\n */\nexport const observeFormStickyFooters = () => {\n  // Form sticky footers pinned state detection with `IntersectionObserver` based on: https://stackoverflow.com/a/57991537.\n  const intersectionObserver = new IntersectionObserver(\n    ([entry]) => entry.target.classList.toggle('nb-is-pinned', entry.intersectionRatio < 1),\n    { threshold: [1] },\n  );\n\n  const formStickyFooters = [...document.querySelectorAll('.nb-form-sticky-footer')];\n  formStickyFooters.forEach((formStickyFooter) => intersectionObserver.observe(formStickyFooter));\n\n  return () => {\n    intersectionObserver.disconnect();\n  };\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t825: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunknautobot\"] = self[\"webpackChunknautobot\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [68], () => (__webpack_require__(190)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","DRAGGABLE_CLASS","DRAGGABLE_CONTAINER_CLASS","DRAGGING_CLASS","DRAWER_OPEN_CLASS","toggleDrawer","drawer","force","classList","toggle","isOpen","contains","setAttribute","drawerToggles","document","querySelectorAll","id","forEach","drawerToggle","getElementsByClassName","filter","openDrawer","rafRetriesRemaining","window","requestAnimationFrame","focusDrawer","getComputedStyle","visibility","focus","activeElement","nextActiveElement","querySelector","preventScroll","event","dispatchEvent","CustomEvent","bubbles","cancelable","SESSION_STORAGE_KEY","saveState","state","stateToSave","undefined","history","sessionStorage","setItem","JSON","stringify","createElement","tag","attributes","children","element","Object","entries","attribute","value","child","insertAdjacentText","appendChild","removeElementClasses","ignore","className","includes","remove","rem","px","rootFontSize","documentElement","fontSize","parseInt","FORM_CONTROL_PADDING_X","GAP","ICON_SIZE","BASE_SEARCH_INPUT_PADDING_X","getElement","Document","Element","setSelect2Value","select2","$","val","text","option","innerText","nextValue","length","getAttribute","map","trigger","initializeSelect2","context","selector","options","allowClear","placeholder","theme","selectionCssClass","width","initializeColorPicker","dropdownParent","colorPickerClassCopy","data","container","templateResult","templateSelection","initializeDynamicChoiceSelection","ajax","delay","url","filter_regex","match","rendered_url","exec","filter_field","custom_attribute","selectedOptions","replace","parseURL","this","params","offset","page","q","term","api_version","depth","content_type","extra_query_parameters","fromEntries","name","flatMap","param_name","split","parse","exception","has_ref_field","startsWith","ref_field","slice","id_prefix","closest","ref_field_value","field_value","select","style","opacity","param_value","parameters","String","limit","URLSearchParams","toString","processResults","$element","removeAttribute","results","previous","values","reduce","record","index","disabled","Boolean","item","group","site","should_nullify_children","collection","property","pagination","more","next","initializeMultiValueChar","language","noResults","multiple","tags","initializeStaticChoiceSelection","initializeSelect2Fields","modal","TABS_HIDDEN_CLASSES","THEME_MODAL_ID","THEME_DARK","THEME_LIGHT","THEME_SYSTEM","isValidTheme","detectTheme","cookieTheme","cookie","find","localStorageTheme","localStorage","getItem","setTheme","isManual","manual","getElementById","button","dataset","nbTheme","bsTheme","matchMedia","matches","removeItem","getElementsByTagName","object","addEventListener","target","contentDocument","rack_image","location","reload","bootstrap","ClipboardJS","flatpickr","registerLanguage","graphql","json","xml","yaml","hljs","jQuery","nb","pathname","search","hash","replaceState","loadState","tooltip","toggler","currentTarget","controls","expanded","sidenavListItem","onClickDocument","documentClickEvent","documentClickTarget","sidenavFlyout","removeEventListener","areAll","collapseElements","collapsedOrExpanded","every","isCollapsed","getCollapseToggleAllTargets","collapseToggleAll","nbTarget","collapse","collapseInstance","Collapse","getOrCreateInstance","hide","show","textContent","initializeCollapseToggleAll","createHandleOnMouseListener","isDraggable","handle","onMouseDown","onMouseUp","draggable","dataTransfer","clearData","setData","add","preventDefault","getData","insertBefore","dropDraggable","height","top","getBoundingClientRect","clientY","nextSibling","left","right","clientX","append","initializeDraggable","nextState","restState","keys","dismiss","nbDismiss","nbToggle","intersectionObserver","IntersectionObserver","entry","intersectionRatio","threshold","formStickyFooter","observe","observeFormStickyFooters","headerSearch","NAV_MENU","navMenu","SEARCHABLE_MODELS","tabs","tab_details","groups","group_details","items","item_link","item_details","BADGE_REG_EXP","RegExp","delimiter","join","headerSearchInput","closeSearchPopup","searchPopup","body","isPressedCmd","getModifierState","isPressedCtrl","ctrlKey","key","input","setSelectionRange","mainLeft","mainRight","headerSearchInputTop","icon","badges","required","type","clear","InputEvent","shouldHideClear","submit","form","action","role","badge","nbLink","popup","overlay","addBadge","link","removeButton","class","ResizeObserver","paddingInlineStart","phrase","model","normalize","trim","toLowerCase","isBackspace","isInputStart","selectionEnd","selectionStart","initializeSearch","resizeObservers","resizeObserver","tabsParent","parentNode","tabsClone","cloneNode","clone","tabsCloneTemporaryClasses","shouldCollapseTabs","removeChild","dropdownMenu","dropdownToggleIcon","dropdownToggleLabel","dropdownToggle","dropdown","collapsedTabs","lastTab","previousElementSibling","unshift","collapsedTab","navLink","clonedTab","originalTab","getInstance","collapseTabs","observeCollapseTabs","buttons","onClick","initializeTheme","toggleFavorite","detail","successful","setRequestUrl","isFavorite","path","deleteUrl","addUrl","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","splice","r","d","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}