{"version":3,"file":"js/nautobot.js","mappings":"uBAAIA,E,2HCAJ,MAAMC,EAAkB,eAClBC,EAA4B,yBAE5BC,EAAiB,cCFjBC,EAAoB,iBAQpBC,EAAe,CAACC,EAAQC,KAC5B,IAAKD,EACH,OAGFA,EAAOE,UAAUC,OAAOL,EAAmBG,GAE3C,MAAMG,EAASJ,EAAOE,UAAUG,SAASP,GAEzCE,EAAOM,aAAa,cAAeF,EAAS,QAAU,QAEtD,MAAMG,EAAgB,IAAIC,SAASC,iBAAiB,8CAA8CT,EAAOU,SASzG,GARAH,EAAcI,SAASC,GAAiBA,EAAaN,aAAa,gBAAiBF,EAAS,OAAS,WAQjGA,EAGF,IADoBI,SAASK,uBAAuBf,IAEjDgB,QAAQC,GAAeA,IAAef,IACtCW,SAASI,GAAehB,EAAagB,GAAY,KAEpD,MACE,IAAIC,EAAsB,IAG1BC,OAAOC,uBAAsB,SAASC,IACmC,YAA/CF,OAAOG,iBAAiBpB,GAAQqB,WAGtDrB,EAAOsB,QACEN,EAAsB,IAC/BA,GAAuB,EACvBC,OAAOC,sBAAsBC,GAEjC,GACD,EAdD,QAeK,GAAInB,EAAOK,SAASG,SAASe,eAAgB,CAClD,MAAMC,EAAoBjB,EAAc,IAAMC,SAASiB,cAAc,QACrED,GAAmBF,MAAM,CAAEI,eAAe,GAC5C,GCxCWC,EAAgB,CAACC,EAAKC,EAAa,CAAC,KAAMC,KACrD,MAAMC,EAAUvB,SAASmB,cAAcC,GAUvC,OARAI,OAAOC,QAAQJ,GAAYlB,SAAQ,EAAEuB,EAAWC,KAC9CJ,EAAQzB,aAA2B,cAAd4B,EAA4B,QAAUA,EAAWC,KAGxEL,EAASnB,SAASyB,GACC,iBAAVA,EAAqBL,EAAQM,mBAAmB,YAAaD,GAASL,EAAQO,YAAYF,KAG5FL,CAAO,EAYHQ,EAAuB,CAACR,KAAYS,IAC/C,IAAIT,EAAQ7B,UAAU+B,WACnBnB,QAAO,EAAE,CAAE2B,MAAgBD,EAAOE,SAASD,KAC3C9B,SAAQ,EAAE,CAAE8B,KAAeV,EAAQ7B,UAAUyC,OAAOF,KAqB5CG,EAAOC,IAClB,MAAMC,EAAe7B,OAAOG,iBAAiBZ,SAASuC,iBAAiBC,SACvE,OAAOH,EAAKI,SAASH,EAAc,GAAG,EC7DlCI,EAAyBN,EAAI,IAC7BO,EAAMP,EAAI,GACVQ,EAAYR,EAAI,IAEhBS,EAA8B,GAAGH,EAAyBE,EAAYD,OCHtEG,EAAsB,CAAC,YAAa,qBCA1CrC,OAAOsC,UAAY,EAGnBtC,OAAOuC,YAAc,EAGrBvC,OAAOwC,UAAY,IASnB,IAAKC,iBAAiB,UAAWC,EAAA,GACjC,IAAKD,iBAAiB,OAAQE,EAAA,GAC9B,IAAKF,iBAAiB,MAAOG,EAAA,GAC7B,IAAKH,iBAAiB,OAAQI,EAAA,GAC9B7C,OAAO8C,KAAO,IAGd9C,OAAO+C,OAAS,EAChB/C,OAAOgD,EAAIhD,OAAO+C,OAUlBxD,SAAS0D,iBAAiB,oBAAoB,WAG5C,IAAI1D,SAASC,iBAAiB,+BAA+BE,SAASwD,GAAY,IAAI,UAAkBA,KAGxG3D,SAASiB,cAAc,oBAAoByC,iBAAiB,SAAUE,IACpE,MAAMC,EAAUD,EAAME,cAEhBC,EAAWF,EAAQG,aAAa,iBAChCC,EAAqD,SAA1CJ,EAAQG,aAAa,iBAEtCH,EAAQ/D,aAAa,gBAAiBoE,QAAQD,IAE9BjE,SAASmE,eAAeJ,GAChCrE,UAAUC,OAAO,oBAAqBsE,EAAS,IAGzD,IAAIjE,SAASC,iBAAiB,uBAAuBE,SAASiE,IAC5DA,EAAgBV,iBAAiB,SAAS,KACxC,MAAMK,EAAWK,EAAgBJ,aAAa,iBACxCC,EAA6D,SAAlDG,EAAgBJ,aAAa,iBAE9CI,EAAgBtE,aAAa,gBAAiBoE,QAAQD,IAEtD,MAAMI,EAAmBC,IACvB,MAAQC,OAAQC,GAAwBF,EAClCG,EAAgBzE,SAASmE,eAAeJ,IAG3CK,EAAgBvE,SAAS2E,KAAyBC,EAAc5E,SAAS2E,KAG1EJ,EAAgBtE,aAAa,gBAAiB,SAC9CE,SAAS0E,oBAAoB,QAASL,GACxC,EAGFJ,EACIjE,SAAS0E,oBAAoB,QAASL,GACtCrE,SAAS0D,iBAAiB,QAASW,EAAgB,GACvD,ILxE6B,MACjC,MAAMM,EAAU,CAACpD,EAASU,IAAcV,GAASoD,UAAU,IAAI1C,KAEzD2C,EAA+BC,GAAiBjB,IACpD,MAAMkB,EAASH,EAAQf,EAAMW,OAPF,uBAQvBO,GACgBH,EAAQG,EAAQ3F,GACxBW,aAAa,YAAaoE,OAAOW,GAC7C,EAGIE,EAAcH,GAA4B,GAC1CI,EAAYJ,GAA4B,GA4E9C5E,SAAS0D,iBAAiB,YAAaqB,GACvC/E,SAAS0D,iBAAiB,UAAWsB,GACrChF,SAAS0D,iBAAiB,aA5ELE,IACnB,MAAMqB,EAAYN,EAAQf,EAAMW,OAAQpF,GACpC8F,IACFrB,EAAMsB,aAAaC,UAAU,cAC7BvB,EAAMsB,aAAaE,QAAQ,aAAcxB,EAAMW,OAAOrE,IACtD+E,EAAUvF,UAAU2F,IAAIhG,GAC1B,IAuEFW,SAAS0D,iBAAiB,WApEPE,IACjB,MAAMqB,EAAYN,EAAQf,EAAMW,OAAQpF,GACpC8F,IACFA,EAAUvF,UAAUyC,OAAO9C,GAC3B4F,EAAUnF,aAAa,YAAa,SACtC,IAgEFE,SAAS0D,iBAAiB,YA7DNE,IACSe,EAAQf,EAAMW,OAAQnF,IAE/CwE,EAAM0B,gBACR,IA0DFtF,SAAS0D,iBAAiB,QAvDVE,IACd,MAAMqB,EAAYjF,SAASmE,eAAeP,EAAMsB,aAAaK,QAAQ,eACrE,GAAIN,EAAW,CACbrB,EAAM0B,iBAEN,MAAME,EAAYb,EAAQM,EAAW7F,GAE/BqG,EAAe,MAEnB,MAAMC,EAAgBf,EAAQf,EAAMW,OAAQpF,GAC5C,GAAIuG,EAAe,CAMjB,MAAM,OAAEC,EAAM,IAAEC,GAAQF,EAAcG,wBAEtC,OADkBjC,EAAMkC,QAAUF,EAAMD,EAAS,EAC9BD,EAAgBA,EAAcK,WACnD,CAGA,MAAO,IAAIP,EAAUlE,UAAU0E,MAAMpE,IACnC,MAAM,KAAEqE,EAAI,MAAEC,EAAK,IAAEN,GAAQhE,EAAMiE,wBAEnC,OAAII,EAAOrC,EAAMuC,SAGND,GAAStC,EAAMuC,SAEpBP,GAAOhC,EAAMkC,cAFZ,CAMP,GAEH,EA7BoB,GA+BjBL,EACFD,EAAUC,aAAaR,EAAWQ,GAGlCD,EAAUY,OAAOnB,GAGnBA,EAAUvF,UAAU2F,IAAIhG,EAC1B,IASuC,EKjBzCgH,GJlBArG,SAAS0D,iBAAiB,SAAUE,IAClC,MAAM0C,EAAU1C,EAAMW,OAAOI,QAAQ,qBAC/BhF,EAASiE,EAAMW,OAAOI,QAAQ,oBAED,WAA/B2B,GAASC,QAAQC,UACnBjH,EAAa+G,EAAQ3B,QAAQ,eAAqB,GACZ,WAA7BhF,GAAQ4G,QAAQE,UACzBlH,EAAaS,SAASiB,cAActB,EAAO4G,QAAQG,UACrD,IE7D4B,MAC9B,MAAMC,EAAe3G,SAASmE,eAAe,iBAG7C,IAAKwC,EACH,MAAO,OAGT,MASMC,EATuB,MAC3B,IACE,MAAMC,EAAqB7G,SAASmE,eAAe,wBACnD,OAAO0C,EAAqBC,KAAKC,MAAMF,EAAmBG,aAAe,EAC3E,CAAE,MAAOC,GACP,MAAO,EACT,CACD,EAP4B,GASkBC,SAAQ,EAAEC,EAAYC,KACnEC,MAAMC,QAAQF,GAAgBA,EAAe,KAGzCG,EAAgB,IAAIC,OACxB,oBAAoBZ,EAAkBM,SAASO,GAAoBA,IAAiBC,KAAK,YACzF,KAGIC,EAAoBhB,EAAa1F,cAAc,SAC/C2G,EAA0BjB,EAAa1F,cAAc,kCAGrD4G,EAA8C,KAA5BF,EAAkBhG,MAC1CgG,EAAkBjI,UAAUC,OAAO,wBAAyBkI,GAC5DF,EAAkBG,MAAMC,mBAAqB,QAAQrF,UAA+BkF,EAAwBI,gBAC5GJ,EAAwBlI,UAAUC,OAAO,YAAakI,GAEtD,MAAMI,EAAmB,KACvB,MAAMC,EAAclI,SAASmE,eAAe,gBAExC+D,IACFA,EAAY/F,SACZnC,SAASmI,KAAKzI,UAAUC,OAAO,qBAAqB,GACtD,EAgBFK,SAAS0D,iBAAiB,WAZPE,IACjB,MAAMwE,EAAexE,EAAMyE,iBAAiB,QACtCC,EAAgB1E,EAAM2E,SAEvBH,GAAgBE,IAAgC,MAAd1E,EAAM4E,KAC3C5E,EAAM0B,iBACNqC,EAAkB7G,SACK,WAAd8C,EAAM4E,KACfP,GACF,IA0KFN,EAAkBjE,iBAAiB,SArKX,KACtB1D,SAASmI,KAAKzI,UAAUC,OAAO,qBAAqB,GAEpD,MAAQsG,KAAMwC,EAAW,EAAGvC,MAAOwC,EAAY,GAAM1I,SAASiB,cAAc,SAAS4E,yBAA2B,CAAC,GACzGD,IAAK+C,GAAahB,EAAkB9B,wBAEtC+C,EAAazH,EAAc,OAAQ,CACvCc,UAAW,0FACX6F,MAAO,WAAWlF,gBAAwBA,UAGtCiG,EAAS1H,EAAc,OAAQ,CACnCc,UAAW,0DACX6F,MAAO,SAASjF,OAGZiG,EAAQ3H,EAAc,QAAS,CACnCc,UAAW,qBACX8G,KAAM,IACNC,SAAU,OACVlB,MAAO,mBAAmBjF,KAC1BoG,KAAM,SACNtH,MAAOgG,EAAkBhG,QAGrBuH,EAAQ/H,EAAc,SAAU,CACpCc,UAAW,0JAAyK,KAAhB6G,EAAMnH,MAAe,uBAAyB,IAClNmG,MAAO,WAAWlF,gBAAwBA,QAC1CqG,KAAM,WAGRC,EAAMxF,iBAAiB,SAAS,KAC9BoF,EAAMnH,MAAQ,GACdmH,EAAMK,cAAc,IAAIC,WAAW,UACnCN,EAAMhI,OAAO,IAGfgI,EAAMpF,iBAAiB,SAAS,KAC9B,MAAM2F,EAAkC,KAAhBP,EAAMnH,MAC9BuH,EAAMxJ,UAAUC,OAAO,YAAa0J,GACpCH,EAAMxJ,UAAUC,OAAO,YAAa0J,EAAgB,IAGtD,MAAMC,EAASnI,EAAc,QAAS,CAAEc,UAAW,SAAUgH,KAAM,WAE7DM,EAAOpI,EACX,OACA,CAAEqI,OAAQ7C,EAAa3C,aAAa,UAAW/B,UAAW,0BAA2BwH,KAAM,UAC3Fb,EACAC,EACAC,EACAI,EACAI,GAGII,EAAUvI,EAAc,OAExBwI,EAAQxI,EACZ,MACA,CAAEc,UAAW,gBAAiB6F,MAAO,cAAc1F,EAAI,YACvDmH,EACAG,GAGIE,EAAUzI,EACd,MACA,CACEc,UAAW,sFACX/B,GAAI,eACJuJ,KAAM,SACN3B,MAAO,6DAA6Da,mCAA0CF,SAAgBrG,EAAI,4CAA4CsG,SAAiBtG,EAAI,YAErMuH,GAGF3J,SAASmI,KAAKrG,YAAY8H,GAG1BA,EAAQlG,iBAAiB,SAAUE,IAC7BA,EAAMW,SAAWqF,GACnB3B,GACF,IAGF,MAAM4B,EAAYC,IAChB,MAAMC,EACJnD,EAAkBZ,MAAMyB,GAAoBA,EAAgB,KAAOqC,MAAa,IAAMA,EAElFE,EAAc7I,EAAc,QAAS,CAAE4H,KAAM,WAAYE,KAAM,SAAUtH,MAAOmI,IAEhFG,EAAe9I,EACnB,SACA,CAAE8H,KAAM,UACR9H,EAAc,OAAQ,CAAE+I,MAAO,mBAGjCD,EAAavG,iBAAiB,SAAS,KACrCyG,EAAMhI,SACN2G,EAAMhI,OAAO,IAGf,MAAMqJ,EAAQhJ,EACZ,OACA,CAAEc,UAAW,eAAgB,oBAAuB6H,GACpD,OD1HoBnI,EC0HDoI,ED1HWpI,EAAMyI,QAAQ,aAAcC,GAAUA,EAAMC,kBC2H1EN,EACAC,GD5HmB,IAACtI,ECgItB,IAAIkH,EAAO5I,iBAAiB,uBAAuB6J,QAAgB3J,SAASgK,GAAUA,EAAMhI,WAE5F0G,EAAO/G,YAAYqI,GAGnB,IAAItB,EAAOvH,UAAUiJ,MAAM,GAAG,GAAsBpK,SAASgK,GAAUA,EAAMhI,UAAS,EAIjE,IAAIqI,gBAAe,KACxC,MAAM,MAAEC,GAAU5B,EAAOhD,wBACzBiD,EAAMhB,MAAMC,mBAAqB0C,EAC7B,QAAQ5H,OAAiC4H,SAAa9H,QACtDE,CAA2B,IAGlB6H,QAAQ7B,GAEvBC,EAAMpF,iBAAiB,SAAUE,IAC/B,MAAMyG,EAAQvB,EAAMnH,MAAM0I,MAAM9C,GAEhC,GAAI8C,EAAO,CACT,MAAOM,EAAQC,GAASP,EAGlBQ,EAAaC,GAASA,EAAKC,OAAOC,cAClClB,EAAYlD,EAAkBZ,MAAMiF,GAAUA,EAAMC,IAAIL,GAAW3I,SAAS2I,EAAUD,QAAW,GAEnGd,IAEFhB,EAAMnH,MAAQmH,EAAMnH,MAAMyI,QAAQO,EAAQ,IAC1C7B,EAAMK,cAAc,IAAIC,WAAW,UACnCS,EAASC,GAEb,KAIFhB,EAAMpF,iBAAiB,WAAYE,IACjC,MAAMuH,EAA4B,cAAdvH,EAAM4E,IACpB4C,EAAsC,IAAvBtC,EAAMuC,cAA+C,IAAzBvC,EAAMwC,eAEnDH,GAAeC,GACjBvC,EAAO5H,cAAc,gBAAgBkB,QACvC,IAIFwE,EAAa1G,iBAAiB,uBAAuBE,SAASgK,GAAUN,EAASM,EAAM5D,QAAQgF,eAG/FzC,EAAMhI,QACNgI,EAAM0C,mBAAmB,GAAI,EAAE,GAShC,EEzJDC,GDwCiC,MACjC,MAAMC,EAAkB,IAAI1L,SAASC,iBAAiB,kBAAkBiL,KAAKS,IAC3E,MAAMC,EAAiB,IAAIpB,gBAAe,IAvHlB,CAACmB,IAC3B,MAAME,EAAaF,EAAKG,WAGxB,IAAID,EAAW5L,iBAAiB,qCAAqCE,SAAS4L,GAAcA,EAAU5J,WAGtG,MAAM4J,EAAYJ,EAAKK,WAAU,GAGjCD,EAAUE,gBAAgB,MAG1BF,EAAUxF,QAAQ2F,MAAQ,OAO1B,MAAMC,EAA4B,CAAC,cAAe,YAAa,oBAAqB,QACpFJ,EAAUrM,UAAU2F,OAAO8G,GAG3BR,EAAK5F,YAAc8F,EAAWpG,aAAasG,EAAWJ,EAAK5F,aAAe8F,EAAW/J,YAAYiK,GAGjG,MAAMK,EAAqB,IAAML,EAAUlG,wBAAwB4E,MAAQkB,EAAK9F,wBAAwB4E,MAGxG,IAAK2B,IAGH,OAFAT,EAAKjM,UAAUyC,UAAUW,QACzB+I,EAAWQ,YAAYN,GASzB,MAAMO,EAAenL,EAAc,KAAM,CAAEc,UAAW,kBAChDsK,EAAqBpL,EAAc,OAAQ,CAAEc,UAAW,iBACxDuK,EAAsBrL,EAAc,OAAQ,CAAEc,UAAW,mBAAqB,mBAC9EwK,EAAiBtL,EACrB,SACA,CACE,gBAAiB,QACjBc,UAAW,qCACX,iBAAkB,WAClBgH,KAAM,UAERsD,EACAC,GAEIE,EAAWvL,EACf,KACA,CAAEc,UAAW,uCACbwK,EACAH,GAEFP,EAAUjK,YAAY4K,GAMtB,MAAMC,EAAgB,GACtB,KAAOP,KAAsB,CAC3B,MAAMQ,EAAUF,EAASG,uBACzBF,EAAcG,QAAQF,GACtBb,EAAUM,YAAYO,EACxB,CASAD,EAAcxM,SAAS4M,IACrBhL,EAAqBgL,GAErB,IAAIA,EAAazL,UAAUnB,SAAS6M,IAClCjL,EAAqBiL,EAAS,SAAU,YACxCA,EAAQtN,UAAU2F,IAAI,gBAAiB,0BAA0B,IAGnEiH,EAAaxK,YAAYiL,EAAa,IAOxC,IAAIhB,EAAU9L,iBAAiB,MAAME,SAAS8M,IAC5CA,EAAUvJ,iBAAiB,gBAAgB,KACzC,MAAMwJ,EAAcvB,EAAK1K,cAAc,WAAWgM,EAAUjJ,aAAa,cAC7C,MAAcmJ,YAAYD,IAAgB,IAAI,MAAcA,IACpEE,MAAM,GAC1B,IAIJzB,EAAKjM,UAAU2F,OAAOvC,GACtBiJ,EAAUrM,UAAUyC,UAAUgK,EAA0B,EAaNkB,CAAa1B,KAE7D,OADAC,EAAelB,QAAQiB,GAChBC,CAAc,GAG8D,ECjCzD0B,GAO5B7M,OAAO8M,eALgB,CAAChM,EAASqC,KAC3BA,EAAM4J,OAAOC,YACflM,EAAQ7B,UAAUC,OAAO,SAC3B,EAQFc,OAAOiN,cAJe,CAACnM,EAASqC,KAC9B,MAAM+J,EAAapM,EAAQ7B,UAAUG,SAAS,UAC9C+D,EAAM4J,OAAOI,KAAOD,EAAapM,EAAQgF,QAAQsH,UAAYtM,EAAQgF,QAAQuH,MAAM,CAGvF,G,GClHIC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUM,KAAKF,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAGpEK,EAAOD,OACf,CAGAJ,EAAoBQ,EAAIF,EPzBpBpP,EAAW,GACf8O,EAAoBS,EAAI,CAACC,EAAQC,EAAUC,EAAIC,KAC9C,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAASC,EAAI,EAAGA,EAAI9P,EAAS+P,OAAQD,IAAK,CAGzC,IAFA,IAAKL,EAAUC,EAAIC,GAAY3P,EAAS8P,GACpCE,GAAY,EACPC,EAAI,EAAGA,EAAIR,EAASM,OAAQE,MACpB,EAAXN,GAAsBC,GAAgBD,IAAarN,OAAO4N,KAAKpB,EAAoBS,GAAGY,OAAO7G,GAASwF,EAAoBS,EAAEjG,GAAKmG,EAASQ,MAC9IR,EAASW,OAAOH,IAAK,IAErBD,GAAY,EACTL,EAAWC,IAAcA,EAAeD,IAG7C,GAAGK,EAAW,CACbhQ,EAASoQ,OAAON,IAAK,GACrB,IAAIO,EAAIX,SACET,IAANoB,IAAiBb,EAASa,EAC/B,CACD,CACA,OAAOb,CAnBP,CAJCG,EAAWA,GAAY,EACvB,IAAI,IAAIG,EAAI9P,EAAS+P,OAAQD,EAAI,GAAK9P,EAAS8P,EAAI,GAAG,GAAKH,EAAUG,IAAK9P,EAAS8P,GAAK9P,EAAS8P,EAAI,GACrG9P,EAAS8P,GAAK,CAACL,EAAUC,EAAIC,EAqBjB,EQzBdb,EAAoBwB,EAAI,CAACpB,EAASqB,KACjC,IAAI,IAAIjH,KAAOiH,EACXzB,EAAoB0B,EAAED,EAAYjH,KAASwF,EAAoB0B,EAAEtB,EAAS5F,IAC5EhH,OAAOmO,eAAevB,EAAS5F,EAAK,CAAEoH,YAAY,EAAMC,IAAKJ,EAAWjH,IAE1E,ECNDwF,EAAoB0B,EAAI,CAACI,EAAKC,IAAUvO,OAAOwO,UAAUC,eAAe1B,KAAKuB,EAAKC,GCClF/B,EAAoBuB,EAAKnB,IACH,oBAAX8B,QAA0BA,OAAOC,aAC1C3O,OAAOmO,eAAevB,EAAS8B,OAAOC,YAAa,CAAExO,MAAO,WAE7DH,OAAOmO,eAAevB,EAAS,aAAc,CAAEzM,OAAO,GAAO,E,MCA9D,IAAIyO,EAAkB,CACrB,IAAK,GAaNpC,EAAoBS,EAAEU,EAAKkB,GAA0C,IAA7BD,EAAgBC,GAGxD,IAAIC,EAAuB,CAACC,EAA4BC,KACvD,IAGIvC,EAAUoC,GAHT1B,EAAU8B,EAAaC,GAAWF,EAGhBxB,EAAI,EAC3B,GAAGL,EAASgC,MAAMzQ,GAAgC,IAAxBkQ,EAAgBlQ,KAAa,CACtD,IAAI+N,KAAYwC,EACZzC,EAAoB0B,EAAEe,EAAaxC,KACrCD,EAAoBQ,EAAEP,GAAYwC,EAAYxC,IAGhD,GAAGyC,EAAS,IAAIhC,EAASgC,EAAQ1C,EAClC,CAEA,IADGuC,GAA4BA,EAA2BC,GACrDxB,EAAIL,EAASM,OAAQD,IACzBqB,EAAU1B,EAASK,GAChBhB,EAAoB0B,EAAEU,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAOrC,EAAoBS,EAAEC,EAAO,EAGjCkC,EAAqBC,KAA2B,qBAAIA,KAA2B,sBAAK,GACxFD,EAAmBzQ,QAAQmQ,EAAqBQ,KAAK,KAAM,IAC3DF,EAAmBG,KAAOT,EAAqBQ,KAAK,KAAMF,EAAmBG,KAAKD,KAAKF,G,KC7CvF,IAAII,EAAsBhD,EAAoBS,OAAEN,EAAW,CAAC,KAAK,IAAOH,EAAoB,OAC5FgD,EAAsBhD,EAAoBS,EAAEuC,E","sources":["webpack://nautobot/webpack/runtime/chunk loaded","webpack://nautobot/./src/js/draggable.js","webpack://nautobot/./src/js/drawer.js","webpack://nautobot/./src/js/utils.js","webpack://nautobot/./src/js/search.js","webpack://nautobot/./src/js/tabs.js","webpack://nautobot/./src/js/nautobot.js","webpack://nautobot/webpack/bootstrap","webpack://nautobot/webpack/runtime/define property getters","webpack://nautobot/webpack/runtime/hasOwnProperty shorthand","webpack://nautobot/webpack/runtime/make namespace object","webpack://nautobot/webpack/runtime/jsonp chunk loading","webpack://nautobot/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","const DRAGGABLE_CLASS = 'nb-draggable';\nconst DRAGGABLE_CONTAINER_CLASS = 'nb-draggable-container';\nconst DRAGGABLE_HANDLE_CLASS = 'nb-draggable-handle';\nconst DRAGGING_CLASS = 'nb-dragging';\n\nexport const initializeDraggable = () => {\n  const closest = (element, className) => element?.closest?.(`.${className}`);\n\n  const createHandleOnMouseListener = (isDraggable) => (event) => {\n    const handle = closest(event.target, DRAGGABLE_HANDLE_CLASS);\n    if (handle) {\n      const draggable = closest(handle, DRAGGABLE_CLASS);\n      draggable.setAttribute('draggable', String(isDraggable));\n    }\n  };\n\n  const onMouseDown = createHandleOnMouseListener(true);\n  const onMouseUp = createHandleOnMouseListener(false);\n\n  const onDragStart = (event) => {\n    const draggable = closest(event.target, DRAGGABLE_CLASS);\n    if (draggable) {\n      event.dataTransfer.clearData('text/plain');\n      event.dataTransfer.setData('text/plain', event.target.id);\n      draggable.classList.add(DRAGGING_CLASS);\n    }\n  };\n\n  const onDragEnd = (event) => {\n    const draggable = closest(event.target, DRAGGABLE_CLASS);\n    if (draggable) {\n      draggable.classList.remove(DRAGGING_CLASS);\n      draggable.setAttribute('draggable', 'false');\n    }\n  };\n\n  const onDragOver = (event) => {\n    const draggableContainer = closest(event.target, DRAGGABLE_CONTAINER_CLASS);\n    if (draggableContainer) {\n      event.preventDefault();\n    }\n  };\n\n  const onDrop = (event) => {\n    const draggable = document.getElementById(event.dataTransfer.getData('text/plain'));\n    if (draggable) {\n      event.preventDefault();\n\n      const container = closest(draggable, DRAGGABLE_CONTAINER_CLASS);\n\n      const insertBefore = (() => {\n        // Were we dropped onto another draggable?\n        const dropDraggable = closest(event.target, DRAGGABLE_CLASS);\n        if (dropDraggable) {\n          /*\n           * Were we dropped in the top half or the bottom half of the target draggable?\n           *   - Top half - insert before that draggable.\n           *   - Bottom half - insert after that draggable.\n           */\n          const { height, top } = dropDraggable.getBoundingClientRect();\n          const isTopHalf = event.clientY < top + height / 2;\n          return isTopHalf ? dropDraggable : dropDraggable.nextSibling;\n        }\n\n        // We were dropped into empty space - find the closest draggable by geometry.\n        return [...container.children].find((child) => {\n          const { left, right, top } = child.getBoundingClientRect();\n          // Are we in the correct column?\n          if (left > event.clientX) {\n            // Found the first child that is too far to the right, so we insert before that child.\n            return true;\n          } else if (right >= event.clientX) {\n            // Child is in the correct column.\n            if (top >= event.clientY) {\n              // Found the first child in this column we were dropped above, so we insert before that child.\n              return true;\n            }\n          }\n        });\n      })();\n\n      if (insertBefore) {\n        container.insertBefore(draggable, insertBefore);\n      } else {\n        // Add to end of the list.\n        container.append(draggable);\n      }\n\n      draggable.classList.add(DRAGGING_CLASS);\n    }\n  };\n\n  // Using event delegation pattern here to avoid re-creating listeners each time DOM is modified.\n  document.addEventListener('mousedown', onMouseDown);\n  document.addEventListener('mouseup', onMouseUp);\n  document.addEventListener('dragstart', onDragStart);\n  document.addEventListener('dragend', onDragEnd);\n  document.addEventListener('dragover', onDragOver);\n  document.addEventListener('drop', onDrop);\n};\n","const DRAWER_CLASS = 'nb-drawer';\nconst DRAWER_OPEN_CLASS = 'nb-drawer-open';\n\n/**\n * Toggle drawer element with an option to force open/close.\n * @param {HTMLElement} drawer - Drawer HTML element to be toggled.\n * @param {boolean} [force] - Optionally force opening (`true`) or closing (`false`) regardless of current state.\n * @returns {void} Do not return any value, modify existing HTML element in-place.\n */\nconst toggleDrawer = (drawer, force) => {\n  if (!drawer) {\n    return;\n  }\n\n  drawer.classList.toggle(DRAWER_OPEN_CLASS, force);\n\n  const isOpen = drawer.classList.contains(DRAWER_OPEN_CLASS);\n\n  drawer.setAttribute('aria-hidden', isOpen ? 'false' : 'true');\n\n  const drawerToggles = [...document.querySelectorAll(`[data-nb-toggle=\"drawer\"][data-nb-target=\"#${drawer.id}\"]`)];\n  drawerToggles.forEach((drawerToggle) => drawerToggle.setAttribute('aria-expanded', isOpen ? 'true' : 'false'));\n\n  /*\n   * Maintain proper element focus when the drawer is:\n   *   1. Open - focus the drawer as soon as it becomes visible and focusable.\n   *   2. Closed - in case focus is within the drawer move it back to the first found drawer toggle and, if not\n   *     available, the `main` element instead.\n   */\n  if (isOpen) {\n    // Close other open drawers if there are any. Effectively, this allows only one drawer to be open at a time.\n    const openDrawers = document.getElementsByClassName(DRAWER_OPEN_CLASS);\n    [...openDrawers]\n      .filter((openDrawer) => openDrawer !== drawer)\n      .forEach((openDrawer) => toggleDrawer(openDrawer, false));\n\n    (() => {\n      let rafRetriesRemaining = 100; // In case something goes wrong prevent falling into an infinite loop.\n\n      // Use `requestAnimationFrame` to wait until drawer becomes visible and focusable.\n      window.requestAnimationFrame(function focusDrawer() {\n        const isDrawerVisible = window.getComputedStyle(drawer).visibility === 'visible';\n\n        if (isDrawerVisible) {\n          drawer.focus();\n        } else if (rafRetriesRemaining > 0) {\n          rafRetriesRemaining -= 1;\n          window.requestAnimationFrame(focusDrawer);\n        }\n      });\n    })();\n  } else if (drawer.contains(document.activeElement)) {\n    const nextActiveElement = drawerToggles[0] || document.querySelector('main');\n    nextActiveElement?.focus({ preventScroll: true });\n  }\n};\n\n/**\n * Initialize custom Nautobot drawers mechanism.\n * @returns {void} Do not return any value, attach an event listener.\n */\nexport const initializeDrawers = () => {\n  // Using event delegation pattern here to avoid re-creating listeners each time DOM is modified.\n  document.addEventListener('click', (event) => {\n    const dismiss = event.target.closest('[data-nb-dismiss]');\n    const toggle = event.target.closest('[data-nb-toggle]');\n\n    if (dismiss?.dataset.nbDismiss === 'drawer') {\n      toggleDrawer(dismiss.closest(`.${DRAWER_CLASS}`), false);\n    } else if (toggle?.dataset.nbToggle === 'drawer') {\n      toggleDrawer(document.querySelector(toggle.dataset.nbTarget));\n    }\n  });\n};\n","/**\n * This function is heavily inspired by React `createElement`. Its purpose is to remove some boilerplate code otherwise\n * required for creating new HTML elements.\n * @example\n * // Create `row` and `col` elements with a valid parent-child relationship.\n * const child = createElement('div', { className: 'col' });\n * const parent = createElement('div', { className: 'row' }, child);\n * @param {string} tag - HTML element tag name to be passed to `document.createElement` function.\n * @param {object} [attributes={}] - Object containing HTML element attributes to be set on newly created HTML element.\n *   `class` attribute is a special case in which `className` property name can be optionally used in order to avoid\n *   ambiguation with JavaScript reserved `class` keyword.\n * @param {(HTMLElement|string)} [children] - HTML elements or string values to become newly created element children.\n * @returns {HTMLElement} New HTML element. Append it to an existing DOM node if you want it to appear in browser.\n */\nexport const createElement = (tag, attributes = {}, ...children) => {\n  const element = document.createElement(tag);\n\n  Object.entries(attributes).forEach(([attribute, value]) =>\n    element.setAttribute(attribute === 'className' ? 'class' : attribute, value),\n  );\n\n  children.forEach((child) =>\n    typeof child === 'string' ? element.insertAdjacentText('beforeend', child) : element.appendChild(child),\n  );\n\n  return element;\n};\n\n/**\n * Remove all classes from given element, optionally excluding some explicitly.\n * @example\n * // Remove all classes except `container-fluid` from given element.\n * removeElementClasses(element, 'container-fluid');\n * @param {HTMLElement} element - HTML element which classes are to be removed.\n * @param {string} [ignore] - Classes to ignore during class removal, i.e. should be left as-is.\n * @returns {void} Do not return any value, modify existing HTML element in-place.\n */\nexport const removeElementClasses = (element, ...ignore) =>\n  [...element.classList.entries()]\n    .filter(([, className]) => !ignore.includes(className))\n    .forEach(([, className]) => element.classList.remove(className));\n\n/**\n * JavaScript re-implementation of Nautobot `bettertitle` helper function.\n * Alternative to the Django builtin `title()`; capitalizes words without replacing letters that are already uppercase.\n * @xample:\n * // Convert `'IP address'` to Title Case, return `'IP Address'`.\n * bettertitle('IP address');\n * @param {string} value - String to convert to Title Case.\n * @returns {string} String in Title Case format.\n */\nexport const bettertitle = (value) => value.replace(/(^|\\s)\\w/g, (match) => match.toUpperCase());\n\n/**\n * Convert `px` pixel value to `rem` units.\n * @example\n * // Convert `20` (`px`) to `rem`, return `1.25` (`rem`).\n * rem(20);\n * @param {number} px - Pixel value.\n * @returns {number} Given pixel value converted to `rem` units.\n */\nexport const rem = (px) => {\n  const rootFontSize = window.getComputedStyle(document.documentElement).fontSize;\n  return px / parseInt(rootFontSize, 10);\n};\n","import { bettertitle, createElement, rem } from './utils.js';\n\nconst FORM_CONTROL_PADDING_X = rem(12);\nconst GAP = rem(6);\nconst ICON_SIZE = rem(20);\n\nconst BASE_SEARCH_INPUT_PADDING_X = `${FORM_CONTROL_PADDING_X + ICON_SIZE + GAP}rem`;\n\nconst MAX_BADGE_COUNT = 1;\n\nexport const initializeSearch = () => {\n  const headerSearch = document.getElementById('header_search');\n\n  // Do nothing and `return` early when there is no `#header_search` element in the page.\n  if (!headerSearch) {\n    return () => {};\n  }\n\n  const SEARCH_MODEL_CHOICES = (() => {\n    try {\n      const searchModelChoices = document.getElementById('search_model_choices');\n      return searchModelChoices ? JSON.parse(searchModelChoices.textContent) : [];\n    } catch (exception) {\n      return [];\n    }\n  })();\n\n  const SEARCHABLE_MODELS = SEARCH_MODEL_CHOICES.flatMap(([app_config, model_tuples]) =>\n    Array.isArray(model_tuples) ? model_tuples : [],\n  );\n\n  const BADGE_REG_EXP = new RegExp(\n    `^\\\\s*in\\\\s*:\\\\s*(${SEARCHABLE_MODELS.flatMap((searchableModel) => searchableModel).join('|')})\\\\s+`,\n    'i',\n  );\n\n  const headerSearchInput = headerSearch.querySelector('input');\n  const headerSearchPlaceholder = headerSearch.querySelector('input + span > span:last-child');\n\n  // Toggle between placeholder and value in global header search input.\n  const shouldShowValue = headerSearchInput.value !== '';\n  headerSearchInput.classList.toggle('nb-color-transparent', !shouldShowValue);\n  headerSearchInput.style.paddingInlineStart = `calc(${FORM_CONTROL_PADDING_X}rem + ${headerSearchPlaceholder.offsetLeft}px)`;\n  headerSearchPlaceholder.classList.toggle('invisible', shouldShowValue);\n\n  const closeSearchPopup = () => {\n    const searchPopup = document.getElementById('search_popup');\n\n    if (searchPopup) {\n      searchPopup.remove();\n      document.body.classList.toggle('overflow-y-hidden', false);\n    }\n  };\n\n  // Focus search input on Cmd+K or Ctrl+K shortcut and close search popup on Escape.\n  const onKeyDown = (event) => {\n    const isPressedCmd = event.getModifierState('Meta');\n    const isPressedCtrl = event.ctrlKey;\n\n    if ((isPressedCmd || isPressedCtrl) && event.key === 'k') {\n      event.preventDefault();\n      headerSearchInput.focus();\n    } else if (event.key === 'Escape') {\n      closeSearchPopup();\n    }\n  };\n\n  document.addEventListener('keydown', onKeyDown);\n\n  const openSearchPopup = () => {\n    document.body.classList.toggle('overflow-y-hidden', true);\n\n    const { left: mainLeft = 0, right: mainRight = 0 } = document.querySelector('main')?.getBoundingClientRect() ?? {};\n    const { top: inputTop } = headerSearchInput.getBoundingClientRect();\n\n    const searchIcon = createElement('span', {\n      className: 'mdi mdi-magnify d-inline-flex ms-12 mt-6 position-absolute start-0 text-secondary top-0',\n      style: `height: ${ICON_SIZE}rem; width: ${ICON_SIZE}rem;`,\n    });\n\n    const badges = createElement('span', {\n      className: 'd-inline-flex gap-6 left-0 my-6 position-absolute top-0',\n      style: `left: ${BASE_SEARCH_INPUT_PADDING_X};`,\n    });\n\n    const input = createElement('input', {\n      className: 'form-control w-100',\n      name: 'q',\n      required: 'true',\n      style: `padding-inline: ${BASE_SEARCH_INPUT_PADDING_X};`,\n      type: 'search',\n      value: headerSearchInput.value,\n    });\n\n    const clear = createElement('button', {\n      className: `btn mdi mdi-close bg-transparent border-0 end-0 hstack justify-content-center me-12 mt-6 p-0 position-absolute text-secondary top-0 nb-transition-base${input.value === '' ? ' invisible opacity-0' : ''}`,\n      style: `height: ${ICON_SIZE}rem; width: ${ICON_SIZE}rem;`,\n      type: 'button',\n    });\n\n    clear.addEventListener('click', () => {\n      input.value = '';\n      input.dispatchEvent(new InputEvent('input'));\n      input.focus();\n    });\n\n    input.addEventListener('input', () => {\n      const shouldHideClear = input.value === '';\n      clear.classList.toggle('invisible', shouldHideClear);\n      clear.classList.toggle('opacity-0', shouldHideClear);\n    });\n\n    const submit = createElement('input', { className: 'd-none', type: 'submit' });\n\n    const form = createElement(\n      'form',\n      { action: headerSearch.getAttribute('action'), className: 'position-relative w-100', role: 'search' },\n      searchIcon,\n      badges,\n      input,\n      clear,\n      submit,\n    );\n\n    const results = createElement('div');\n\n    const popup = createElement(\n      'div',\n      { className: 'mx-auto w-100', style: `max-width: ${rem(720)}rem;` },\n      form,\n      results,\n    );\n\n    const overlay = createElement(\n      'div',\n      {\n        className: 'overflow-auto pb-20 position-fixed top-0 end-0 bottom-0 start-0 nb-z-modal-backdrop',\n        id: 'search_popup',\n        role: 'dialog',\n        style: `background-color: rgba(0, 0, 0, .5); padding-block-start: ${inputTop}px; padding-inline-start: calc(${mainLeft}px + ${rem(20)}rem); padding-inline-end: calc(100% - ${mainRight}px + ${rem(20)}rem);`,\n      },\n      popup,\n    );\n\n    document.body.appendChild(overlay);\n\n    // Close search popup on direct overlay click.\n    overlay.addEventListener('click', (event) => {\n      if (event.target === overlay) {\n        closeSearchPopup();\n      }\n    });\n\n    const addBadge = (modelname) => {\n      const verbose_name_plural =\n        SEARCHABLE_MODELS.find((searchableModel) => searchableModel[0] === modelname)?.[1] ?? modelname;\n\n      const inputHidden = createElement('input', { name: 'obj_type', type: 'hidden', value: modelname });\n\n      const removeButton = createElement(\n        'button',\n        { type: 'button' },\n        createElement('span', { class: 'mdi mdi-close' }),\n      );\n\n      removeButton.addEventListener('click', () => {\n        badge.remove();\n        input.focus();\n      });\n\n      const badge = createElement(\n        'span',\n        { className: 'badge border', ['data-nb-modelname']: modelname },\n        `in: ${bettertitle(verbose_name_plural)}`,\n        inputHidden,\n        removeButton,\n      );\n\n      // Before adding a new badge, remove existing badges with the same `modelname` to prevent duplicates.\n      [...badges.querySelectorAll(`[data-nb-modelname=\"${modelname}\"]`)].forEach((badge) => badge.remove());\n\n      badges.appendChild(badge);\n\n      // Obey the `MAX_BADGE_COUNT` constraint.\n      [...badges.children].slice(0, -1 * MAX_BADGE_COUNT).forEach((badge) => badge.remove());\n    };\n\n    // Recalculate search input left padding when badges container size changes, i.e. a badge is added or removed.\n    const resizeObserver = new ResizeObserver(() => {\n      const { width } = badges.getBoundingClientRect();\n      input.style.paddingInlineStart = width\n        ? `calc(${BASE_SEARCH_INPUT_PADDING_X} + ${width}px + ${GAP}rem)`\n        : BASE_SEARCH_INPUT_PADDING_X;\n    });\n\n    resizeObserver.observe(badges);\n\n    input.addEventListener('input', (event) => {\n      const match = input.value.match(BADGE_REG_EXP);\n\n      if (match) {\n        const [phrase, model] = match;\n\n        // Match entered `model` to either an existing `modelname` or `verbose_name_plural` from `search_model_choices`.\n        const normalize = (text) => text.trim().toLowerCase();\n        const modelname = SEARCHABLE_MODELS.find((names) => names.map(normalize).includes(normalize(model)))?.[0];\n\n        if (modelname) {\n          // Remove phrase that matched the badge-specific regular expression and replace it with a corresponding badge.\n          input.value = input.value.replace(phrase, '');\n          input.dispatchEvent(new InputEvent('input'));\n          addBadge(modelname);\n        }\n      }\n    });\n\n    // Remove the first badge on the right-hand side when `'Backspace'` key is pressed on the input start position.\n    input.addEventListener('keydown', (event) => {\n      const isBackspace = event.key === 'Backspace';\n      const isInputStart = input.selectionEnd === 0 && input.selectionStart === 0;\n\n      if (isBackspace && isInputStart) {\n        badges.querySelector(':last-child')?.remove();\n      }\n    });\n\n    // When search popup is open, move existing badges from `#header_search` to search popup input.\n    headerSearch.querySelectorAll('[data-nb-modelname]').forEach((badge) => addBadge(badge.dataset.nbModelname));\n\n    // Automatically focus search popup input when opened and move cursor to the end of input field.\n    input.focus();\n    input.setSelectionRange(-1, -1);\n  };\n\n  headerSearchInput.addEventListener('focus', openSearchPopup);\n\n  return () => {\n    closeSearchPopup();\n    document.removeEventListener('keydown', onKeyDown);\n    headerSearchInput.removeEventListener('focus', openSearchPopup);\n  };\n};\n","import * as bootstrap from 'bootstrap';\nimport { createElement, removeElementClasses } from './utils.js';\n\nconst TABS_HIDDEN_CLASSES = ['invisible', 'position-absolute'];\n\n/**\n * Collapse wrapped tabs to dropdown menu in given tab container.\n * @param {HTMLElement} tabs - Tab container HTML element.\n * @returns {void} Do not return any value, modify DOM instead.\n */\nexport const collapseTabs = (tabs) => {\n  const tabsParent = tabs.parentNode;\n\n  // Remove existing tab clones to prevent duplicates because they will be created from scratch below if needed.\n  [...tabsParent.querySelectorAll('.nav.nav-tabs[data-clone=\"true\"]')].forEach((tabsClone) => tabsClone.remove());\n\n  // For safety, do not operate on original tabs element, deep clone tabs to operate on its clone instead.\n  const tabsClone = tabs.cloneNode(true);\n\n  // Remove `id` element attribute from cloned tabs element to avoid potential `id` conflicts.\n  tabsClone.removeAttribute('id');\n\n  // Set `data-clone` attribute to `\"true\"` on tabs clone element to be able to easily distinguish it from the original.\n  tabsClone.dataset.clone = 'true';\n\n  /*\n   * Add following classes to cloned element to:\n   *   1. Make tabs span across the whole required width without wrapping.\n   *   2. Force them to be (temporarily) invisible.\n   */\n  const tabsCloneTemporaryClasses = ['flex-nowrap', 'invisible', 'position-absolute', 'z-n1'];\n  tabsClone.classList.add(...tabsCloneTemporaryClasses);\n\n  // Append currently invisible cloned tabs to DOM right after the original tabs element.\n  tabs.nextSibling ? tabsParent.insertBefore(tabsClone, tabs.nextSibling) : tabsParent.appendChild(tabsClone);\n\n  // Excessive tabs should be collapsed if tabs clone is wider than the original. Remember - clone does not wrap.\n  const shouldCollapseTabs = () => tabsClone.getBoundingClientRect().width > tabs.getBoundingClientRect().width;\n\n  // If there is no need to collapse tabs, show original tabs (if previously hidden) clean up tabs clone and `return` early.\n  if (!shouldCollapseTabs()) {\n    tabs.classList.remove(...TABS_HIDDEN_CLASSES);\n    tabsParent.removeChild(tabsClone);\n    return;\n  }\n\n  /*\n   * Compose dropdown element. Ignore dropdown items for now, they will be added to the dropdown menu soon anyway. The\n   * most important thing about this step is to append dropdown with visible toggle button at the end of cloned tabs\n   * list to reach maximum width (dropdown toggle has considerable size too) before starting to actually collapse tabs.\n   */\n  const dropdownMenu = createElement('ul', { className: 'dropdown-menu' });\n  const dropdownToggleIcon = createElement('span', { className: 'mdi mdi-menu' });\n  const dropdownToggleLabel = createElement('span', { className: 'visually-hidden' }, 'Toggle Dropdown');\n  const dropdownToggle = createElement(\n    'button',\n    {\n      'aria-expanded': 'false',\n      className: 'btn dropdown-toggle text-secondary',\n      'data-bs-toggle': 'dropdown',\n      type: 'button',\n    },\n    dropdownToggleIcon,\n    dropdownToggleLabel,\n  );\n  const dropdown = createElement(\n    'li',\n    { className: 'dropdown flex-grow-1 mb-n1 text-end' },\n    dropdownToggle,\n    dropdownMenu,\n  );\n  tabsClone.appendChild(dropdown);\n\n  /*\n   * Identify tabs that require collapsing by taking out one by one from the right-hand side until tabs width can fit\n   * inside its parent container. Essentially, overflowing tabs are moved from tab list to future dropdown menu.\n   */\n  const collapsedTabs = [];\n  while (shouldCollapseTabs()) {\n    const lastTab = dropdown.previousElementSibling; // With dropdown appended to DOM, its previous siblings are tabs.\n    collapsedTabs.unshift(lastTab); // Use `unshift` instead of `push` because this loop is iterating backward in a sense.\n    tabsClone.removeChild(lastTab);\n  }\n\n  /*\n   * Properly convert collapsed tabs to dropdown items:\n   *   1. Remove all `<li>` `nav-item` element classes.\n   *   2. Remove all `<a>` `nav-link` element classes other than `active` and `disabled` to maintain valid tab state.\n   *   3. Add `dropdown-item` class to `<a>` element (formerly `nav-link`).\n   *   4. Append collapsed tab to dropdown menu.\n   */\n  collapsedTabs.forEach((collapsedTab) => {\n    removeElementClasses(collapsedTab);\n\n    [...collapsedTab.children].forEach((navLink) => {\n      removeElementClasses(navLink, 'active', 'disabled');\n      navLink.classList.add('dropdown-item', 'justify-content-between');\n    });\n\n    dropdownMenu.appendChild(collapsedTab);\n  });\n\n  /*\n   * Tabs clone with collapsed tabs is now ready to be swapped with original. The only thing left to do is to\n   * make it synchronize its state back to the original.\n   */\n  [...tabsClone.querySelectorAll('a')].forEach((clonedTab) => {\n    clonedTab.addEventListener('shown.bs.tab', () => {\n      const originalTab = tabs.querySelector(`a[href=\"${clonedTab.getAttribute('href')}\"]`);\n      const originalTabInstance = bootstrap.Tab.getInstance(originalTab) || new bootstrap.Tab(originalTab);\n      originalTabInstance.show();\n    });\n  });\n\n  // Swap tabs clone with the original, in other words swap wrapped tabs with collapsed tabs.\n  tabs.classList.add(...TABS_HIDDEN_CLASSES);\n  tabsClone.classList.remove(...tabsCloneTemporaryClasses);\n};\n\n/**\n * Observe size changes of all tab containers on the page and collapse tabs inside of them if they wrap.\n * @example\n * // Run `collapseTabs` algorithm for all tabs on the page exactly once, i.e. observe and immediately unobserve.\n * const unobserveCollapseTabs = observeCollapseTabs();\n * unobserveCollapseTabs();\n * @returns {function(): void} Unobserve function - disconnect all resize observers created during function call.\n */\nexport const observeCollapseTabs = () => {\n  const resizeObservers = [...document.querySelectorAll('.nav.nav-tabs')].map((tabs) => {\n    const resizeObserver = new ResizeObserver(() => collapseTabs(tabs));\n    resizeObserver.observe(tabs);\n    return resizeObserver;\n  });\n\n  return () => resizeObservers.forEach((resizeObserver) => resizeObserver.disconnect());\n};\n","import '../scss/nautobot.scss';\n\nimport * as bootstrap from 'bootstrap';\nwindow.bootstrap = bootstrap;\n\nimport ClipboardJS from 'clipboard';\nwindow.ClipboardJS = ClipboardJS;\n\nimport flatpickr from 'flatpickr';\nwindow.flatpickr = flatpickr;\n\nimport hljs from 'highlight.js/lib/core';\nimport 'highlight.js/styles/github.css';\nimport graphql from 'highlight.js/lib/languages/graphql';\nimport json from 'highlight.js/lib/languages/json';\nimport xml from 'highlight.js/lib/languages/xml';\nimport yaml from 'highlight.js/lib/languages/yaml';\n\nhljs.registerLanguage('graphql', graphql);\nhljs.registerLanguage('json', json);\nhljs.registerLanguage('xml', xml);\nhljs.registerLanguage('yaml', yaml);\nwindow.hljs = hljs;\n\nimport jQuery from 'jquery';\nwindow.jQuery = jQuery;\nwindow.$ = window.jQuery;\n\nimport 'jquery-ui';\nimport 'select2';\n\nimport { initializeDraggable } from './draggable.js';\nimport { initializeDrawers } from './drawer.js';\nimport { initializeSearch } from './search.js';\nimport { observeCollapseTabs } from './tabs.js';\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  // Tooltips\n  // https://getbootstrap.com/docs/5.3/components/tooltips/#enable-tooltips\n  [...document.querySelectorAll('[data-bs-toggle=\"tooltip\"]')].forEach((tooltip) => new bootstrap.Tooltip(tooltip));\n\n  // Sidenav\n  document.querySelector('.sidenav-toggler').addEventListener('click', (event) => {\n    const toggler = event.currentTarget;\n\n    const controls = toggler.getAttribute('aria-controls');\n    const expanded = toggler.getAttribute('aria-expanded') === 'true';\n\n    toggler.setAttribute('aria-expanded', String(!expanded));\n\n    const sidenav = document.getElementById(controls);\n    sidenav.classList.toggle('sidenav-collapsed', expanded);\n  });\n\n  [...document.querySelectorAll('.sidenav-list-item')].forEach((sidenavListItem) => {\n    sidenavListItem.addEventListener('click', () => {\n      const controls = sidenavListItem.getAttribute('aria-controls');\n      const expanded = sidenavListItem.getAttribute('aria-expanded') === 'true';\n\n      sidenavListItem.setAttribute('aria-expanded', String(!expanded));\n\n      const onClickDocument = (documentClickEvent) => {\n        const { target: documentClickTarget } = documentClickEvent;\n        const sidenavFlyout = document.getElementById(controls);\n\n        const isClickOutside =\n          !sidenavListItem.contains(documentClickTarget) && !sidenavFlyout.contains(documentClickTarget);\n\n        if (isClickOutside) {\n          sidenavListItem.setAttribute('aria-expanded', 'false');\n          document.removeEventListener('click', onClickDocument);\n        }\n      };\n\n      expanded\n        ? document.removeEventListener('click', onClickDocument)\n        : document.addEventListener('click', onClickDocument);\n    });\n  });\n\n  // Draggable\n  initializeDraggable();\n\n  // Drawer\n  initializeDrawers();\n\n  // Search\n  initializeSearch();\n\n  // Tabs\n  /*\n   * TODO(norbert-mieczkowski-codilime): listen for proper event type(s) to re-initialize collapse tabs observers when\n   *   htmx dynamic content reloading is implemented. Said re-initialization should be as simple as something like:\n   *   ```js\n   *   let unobserveCollapseTabs = observeCollapseTabs();\n   *   document.body.addEventListener('htmx:xhr:loadend', () => unobserveCollapseTabs());\n   *   document.body.addEventListener('htmx:load', () => {\n   *     unobserveCollapseTabs = observeCollapseTabs();\n   *   });\n   *   ```\n   */\n  let unobserveCollapseTabs = observeCollapseTabs();\n\n  const toggleFavorite = (element, event) => {\n    if (event.detail.successful) {\n      element.classList.toggle('active');\n    }\n  };\n  window.toggleFavorite = toggleFavorite;\n\n  const setRequestUrl = (element, event) => {\n    const isFavorite = element.classList.contains('active');\n    event.detail.path = isFavorite ? element.dataset.deleteUrl : element.dataset.addUrl;\n  };\n  window.setRequestUrl = setRequestUrl;\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t825: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunknautobot\"] = self[\"webpackChunknautobot\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [68], () => (__webpack_require__(274)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","DRAGGABLE_CLASS","DRAGGABLE_CONTAINER_CLASS","DRAGGING_CLASS","DRAWER_OPEN_CLASS","toggleDrawer","drawer","force","classList","toggle","isOpen","contains","setAttribute","drawerToggles","document","querySelectorAll","id","forEach","drawerToggle","getElementsByClassName","filter","openDrawer","rafRetriesRemaining","window","requestAnimationFrame","focusDrawer","getComputedStyle","visibility","focus","activeElement","nextActiveElement","querySelector","preventScroll","createElement","tag","attributes","children","element","Object","entries","attribute","value","child","insertAdjacentText","appendChild","removeElementClasses","ignore","className","includes","remove","rem","px","rootFontSize","documentElement","fontSize","parseInt","FORM_CONTROL_PADDING_X","GAP","ICON_SIZE","BASE_SEARCH_INPUT_PADDING_X","TABS_HIDDEN_CLASSES","bootstrap","ClipboardJS","flatpickr","registerLanguage","graphql","json","xml","yaml","hljs","jQuery","$","addEventListener","tooltip","event","toggler","currentTarget","controls","getAttribute","expanded","String","getElementById","sidenavListItem","onClickDocument","documentClickEvent","target","documentClickTarget","sidenavFlyout","removeEventListener","closest","createHandleOnMouseListener","isDraggable","handle","onMouseDown","onMouseUp","draggable","dataTransfer","clearData","setData","add","preventDefault","getData","container","insertBefore","dropDraggable","height","top","getBoundingClientRect","clientY","nextSibling","find","left","right","clientX","append","initializeDraggable","dismiss","dataset","nbDismiss","nbToggle","nbTarget","headerSearch","SEARCHABLE_MODELS","searchModelChoices","JSON","parse","textContent","exception","flatMap","app_config","model_tuples","Array","isArray","BADGE_REG_EXP","RegExp","searchableModel","join","headerSearchInput","headerSearchPlaceholder","shouldShowValue","style","paddingInlineStart","offsetLeft","closeSearchPopup","searchPopup","body","isPressedCmd","getModifierState","isPressedCtrl","ctrlKey","key","mainLeft","mainRight","inputTop","searchIcon","badges","input","name","required","type","clear","dispatchEvent","InputEvent","shouldHideClear","submit","form","action","role","results","popup","overlay","addBadge","modelname","verbose_name_plural","inputHidden","removeButton","class","badge","replace","match","toUpperCase","slice","ResizeObserver","width","observe","phrase","model","normalize","text","trim","toLowerCase","names","map","isBackspace","isInputStart","selectionEnd","selectionStart","nbModelname","setSelectionRange","initializeSearch","resizeObservers","tabs","resizeObserver","tabsParent","parentNode","tabsClone","cloneNode","removeAttribute","clone","tabsCloneTemporaryClasses","shouldCollapseTabs","removeChild","dropdownMenu","dropdownToggleIcon","dropdownToggleLabel","dropdownToggle","dropdown","collapsedTabs","lastTab","previousElementSibling","unshift","collapsedTab","navLink","clonedTab","originalTab","getInstance","show","collapseTabs","observeCollapseTabs","toggleFavorite","detail","successful","setRequestUrl","isFavorite","path","deleteUrl","addUrl","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","keys","every","splice","r","d","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}