{"version":3,"file":"js/nautobot.js","mappings":"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","sources":["webpack://nautobot/webpack/runtime/chunk loaded","webpack://nautobot/./src/js/collapse.js","webpack://nautobot/./src/js/draggable.js","webpack://nautobot/./src/js/drawer.js","webpack://nautobot/./src/js/utils.js","webpack://nautobot/./src/js/search.js","webpack://nautobot/./src/js/select2.js","webpack://nautobot/./src/js/tabs.js","webpack://nautobot/./src/js/theme.js","webpack://nautobot/./src/js/nautobot.js","webpack://nautobot/./src/js/form.js","webpack://nautobot/webpack/bootstrap","webpack://nautobot/webpack/runtime/define property getters","webpack://nautobot/webpack/runtime/global","webpack://nautobot/webpack/runtime/hasOwnProperty shorthand","webpack://nautobot/webpack/runtime/make namespace object","webpack://nautobot/webpack/runtime/jsonp chunk loading","webpack://nautobot/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","/**\n * Initialize collapse toggle all buttons identified by `data-nb-toggle=\"collapse-all\"` data attribute. Collapse toggle\n * all buttons can be further configured with `data-nb-target=\"{collapse CSS selector}\"` data attribute specifying which\n * collapse elements they control. When not explicitly set, target collapse CSS selector falls back to `\".collapse\"`.\n * ---\n * Critical difference between this and default Bootstrap 5 collapse implementation is that Bootstrap only supports\n * toggling individual panel states without an option to toggle them collectively. See an explanation below:\n * Bootstrap 5 on \"Collapse All\" button click:  |  Nautobot on \"Collapse All\" button click:\n *   * X [expanded]  -> [collapsed]             |    * X [expanded]  -> [collapsed]\n *   * Y [collapsed] -> [expanded]              |    * Y [collapsed] -> [collapsed]\n *   * Z [expanded]  -> [collapsed]             |    * Z [expanded]  -> [collapsed]\n * ---\n * @returns {function(): void} Destructor function - remove all event listeners added during initialization.\n */\nexport const initializeCollapseToggleAll = () => {\n  const areAll = (collapseElements, collapsedOrExpanded) =>\n    collapseElements.every((element) => {\n      const isCollapsed = !element.classList.contains('show');\n      return collapsedOrExpanded === 'collapsed' ? isCollapsed : !isCollapsed;\n    });\n\n  const getCollapseToggleAllTargets = (collapseToggleAll) => [\n    ...document.querySelectorAll(collapseToggleAll.dataset.nbTarget || '.collapse'),\n  ];\n\n  const onClick = (event) => {\n    const collapseToggleAll = event.target.closest('[data-nb-toggle=\"collapse-all\"]');\n\n    if (collapseToggleAll) {\n      getCollapseToggleAllTargets(collapseToggleAll).forEach((collapse) => {\n        const collapseInstance = window.bootstrap.Collapse.getOrCreateInstance(collapse);\n        const shouldCollapse = collapseToggleAll.getAttribute('aria-expanded') === 'true';\n        shouldCollapse ? collapseInstance.hide() : collapseInstance.show();\n      });\n    }\n  };\n\n  const onHiddenBsCollapse = () =>\n    [...document.querySelectorAll('[data-nb-toggle=\"collapse-all\"]')]\n      .filter((collapseToggleAll) => areAll(getCollapseToggleAllTargets(collapseToggleAll), 'collapsed'))\n      .forEach((collapseToggleAll) => {\n        collapseToggleAll.setAttribute('aria-expanded', 'false');\n        collapseToggleAll.textContent = 'Expand All';\n      });\n\n  const onShownBsCollapse = () =>\n    [...document.querySelectorAll('[data-nb-toggle=\"collapse-all\"]')]\n      .filter((collapseToggleAll) => areAll(getCollapseToggleAllTargets(collapseToggleAll), 'expanded'))\n      .forEach((collapseToggleAll) => {\n        collapseToggleAll.setAttribute('aria-expanded', 'true');\n        collapseToggleAll.textContent = 'Collapse All';\n      });\n\n  // Using event delegation pattern here to avoid re-creating listeners each time DOM is modified.\n  document.addEventListener('click', onClick);\n  document.addEventListener('hidden.bs.collapse', onHiddenBsCollapse);\n  document.addEventListener('shown.bs.collapse', onShownBsCollapse);\n\n  return () => {\n    document.removeEventListener('click', onClick);\n    document.removeEventListener('hidden.bs.collapse', onHiddenBsCollapse);\n    document.removeEventListener('shown.bs.collapse', onShownBsCollapse);\n  };\n};\n","const DRAGGABLE_CLASS = 'nb-draggable';\nconst DRAGGABLE_CONTAINER_CLASS = 'nb-draggable-container';\nconst DRAGGABLE_HANDLE_CLASS = 'nb-draggable-handle';\nconst DRAGGING_CLASS = 'nb-dragging';\n\nexport const initializeDraggable = () => {\n  const closest = (element, className) => element?.closest?.(`.${className}`);\n\n  const createHandleOnMouseListener = (isDraggable) => (event) => {\n    const handle = closest(event.target, DRAGGABLE_HANDLE_CLASS);\n    if (handle) {\n      const draggable = closest(handle, DRAGGABLE_CLASS);\n      draggable.setAttribute('draggable', String(isDraggable));\n    }\n  };\n\n  const onMouseDown = createHandleOnMouseListener(true);\n  const onMouseUp = createHandleOnMouseListener(false);\n\n  const onDragStart = (event) => {\n    const draggable = closest(event.target, DRAGGABLE_CLASS);\n    if (draggable) {\n      event.dataTransfer.clearData('text/plain');\n      event.dataTransfer.setData('text/plain', event.target.id);\n      draggable.classList.add(DRAGGING_CLASS);\n    }\n  };\n\n  const onDragEnd = (event) => {\n    const draggable = closest(event.target, DRAGGABLE_CLASS);\n    if (draggable) {\n      draggable.classList.remove(DRAGGING_CLASS);\n      draggable.setAttribute('draggable', 'false');\n    }\n  };\n\n  const onDragOver = (event) => {\n    const draggableContainer = closest(event.target, DRAGGABLE_CONTAINER_CLASS);\n    if (draggableContainer) {\n      event.preventDefault();\n    }\n  };\n\n  const onDrop = (event) => {\n    const draggable = document.getElementById(event.dataTransfer.getData('text/plain'));\n    if (draggable) {\n      event.preventDefault();\n\n      const container = closest(draggable, DRAGGABLE_CONTAINER_CLASS);\n\n      const insertBefore = (() => {\n        // Were we dropped onto another draggable?\n        const dropDraggable = closest(event.target, DRAGGABLE_CLASS);\n        if (dropDraggable) {\n          /*\n           * Were we dropped in the top half or the bottom half of the target draggable?\n           *   - Top half - insert before that draggable.\n           *   - Bottom half - insert after that draggable.\n           */\n          const { height, top } = dropDraggable.getBoundingClientRect();\n          const isTopHalf = event.clientY < top + height / 2;\n          return isTopHalf ? dropDraggable : dropDraggable.nextSibling;\n        }\n\n        // We were dropped into empty space - find the closest draggable by geometry.\n        return [...container.children].find((child) => {\n          const { left, right, top } = child.getBoundingClientRect();\n          // Are we in the correct column?\n          if (left > event.clientX) {\n            // Found the first child that is too far to the right, so we insert before that child.\n            return true;\n          } else if (right >= event.clientX) {\n            // Child is in the correct column.\n            if (top >= event.clientY) {\n              // Found the first child in this column we were dropped above, so we insert before that child.\n              return true;\n            }\n          }\n        });\n      })();\n\n      if (insertBefore) {\n        container.insertBefore(draggable, insertBefore);\n      } else {\n        // Add to end of the list.\n        container.append(draggable);\n      }\n\n      draggable.classList.add(DRAGGING_CLASS);\n    }\n  };\n\n  // Using event delegation pattern here to avoid re-creating listeners each time DOM is modified.\n  document.addEventListener('mousedown', onMouseDown);\n  document.addEventListener('mouseup', onMouseUp);\n  document.addEventListener('dragstart', onDragStart);\n  document.addEventListener('dragend', onDragEnd);\n  document.addEventListener('dragover', onDragOver);\n  document.addEventListener('drop', onDrop);\n};\n","const DRAWER_CLASS = 'nb-drawer';\nconst DRAWER_OPEN_CLASS = 'nb-drawer-open';\n\n/**\n * Toggle drawer element with an option to force open/close.\n * @param {HTMLElement} drawer - Drawer HTML element to be toggled.\n * @param {boolean} [force] - Optionally force opening (`true`) or closing (`false`) regardless of current state.\n * @returns {void} Do not return any value, modify existing HTML element in-place.\n */\nconst toggleDrawer = (drawer, force) => {\n  if (!drawer) {\n    return;\n  }\n\n  drawer.classList.toggle(DRAWER_OPEN_CLASS, force);\n\n  const isOpen = drawer.classList.contains(DRAWER_OPEN_CLASS);\n\n  drawer.setAttribute('aria-hidden', isOpen ? 'false' : 'true');\n\n  const drawerToggles = [...document.querySelectorAll(`[data-nb-toggle=\"drawer\"][data-nb-target=\"#${drawer.id}\"]`)];\n  drawerToggles.forEach((drawerToggle) => drawerToggle.setAttribute('aria-expanded', isOpen ? 'true' : 'false'));\n\n  /*\n   * Maintain proper element focus when the drawer is:\n   *   1. Open - focus the drawer as soon as it becomes visible and focusable.\n   *   2. Closed - in case focus is within the drawer move it back to the first found drawer toggle and, if not\n   *     available, the `main` element instead.\n   */\n  if (isOpen) {\n    // Close other open drawers if there are any. Effectively, this allows only one drawer to be open at a time.\n    const openDrawers = document.getElementsByClassName(DRAWER_OPEN_CLASS);\n    [...openDrawers]\n      .filter((openDrawer) => openDrawer !== drawer)\n      .forEach((openDrawer) => toggleDrawer(openDrawer, false));\n\n    (() => {\n      let rafRetriesRemaining = 100; // In case something goes wrong prevent falling into an infinite loop.\n\n      // Use `requestAnimationFrame` to wait until drawer becomes visible and focusable.\n      window.requestAnimationFrame(function focusDrawer() {\n        const isDrawerVisible = window.getComputedStyle(drawer).visibility === 'visible';\n\n        if (isDrawerVisible) {\n          drawer.focus();\n        } else if (rafRetriesRemaining > 0) {\n          rafRetriesRemaining -= 1;\n          window.requestAnimationFrame(focusDrawer);\n        }\n      });\n    })();\n  } else if (drawer.contains(document.activeElement)) {\n    const nextActiveElement = drawerToggles[0] || document.querySelector('main');\n    nextActiveElement?.focus({ preventScroll: true });\n  }\n};\n\n/**\n * Initialize custom Nautobot drawers mechanism.\n * @returns {void} Do not return any value, attach an event listener.\n */\nexport const initializeDrawers = () => {\n  // Using event delegation pattern here to avoid re-creating listeners each time DOM is modified.\n  document.addEventListener('click', (event) => {\n    const dismiss = event.target.closest('[data-nb-dismiss]');\n    const toggle = event.target.closest('[data-nb-toggle]');\n\n    if (dismiss?.dataset.nbDismiss === 'drawer') {\n      toggleDrawer(dismiss.closest(`.${DRAWER_CLASS}`), false);\n    } else if (toggle?.dataset.nbToggle === 'drawer') {\n      toggleDrawer(document.querySelector(toggle.dataset.nbTarget));\n    }\n  });\n};\n","/**\n * This function is heavily inspired by React `createElement`. Its purpose is to remove some boilerplate code otherwise\n * required for creating new HTML elements.\n * @example\n * // Create `row` and `col` elements with a valid parent-child relationship.\n * const child = createElement('div', { className: 'col' });\n * const parent = createElement('div', { className: 'row' }, child);\n * @param {string} tag - HTML element tag name to be passed to `document.createElement` function.\n * @param {object} [attributes={}] - Object containing HTML element attributes to be set on newly created HTML element.\n *   `class` attribute is a special case in which `className` property name can be optionally used in order to avoid\n *   ambiguation with JavaScript reserved `class` keyword.\n * @param {(HTMLElement|string)} [children] - HTML elements or string values to become newly created element children.\n * @returns {HTMLElement} New HTML element. Append it to an existing DOM node if you want it to appear in browser.\n */\nexport const createElement = (tag, attributes = {}, ...children) => {\n  const element = document.createElement(tag);\n\n  Object.entries(attributes).forEach(([attribute, value]) =>\n    element.setAttribute(attribute === 'className' ? 'class' : attribute, value),\n  );\n\n  children.forEach((child) =>\n    typeof child === 'string' ? element.insertAdjacentText('beforeend', child) : element.appendChild(child),\n  );\n\n  return element;\n};\n\n/**\n * Remove all classes from given element, optionally excluding some explicitly.\n * @example\n * // Remove all classes except `container-fluid` from given element.\n * removeElementClasses(element, 'container-fluid');\n * @param {HTMLElement} element - HTML element which classes are to be removed.\n * @param {string} [ignore] - Classes to ignore during class removal, i.e. should be left as-is.\n * @returns {void} Do not return any value, modify existing HTML element in-place.\n */\nexport const removeElementClasses = (element, ...ignore) =>\n  [...element.classList.entries()]\n    .filter(([, className]) => !ignore.includes(className))\n    .forEach(([, className]) => element.classList.remove(className));\n\n/**\n * Convert `px` pixel value to `rem` units.\n * @example\n * // Convert `20` (`px`) to `rem`, return `1.25` (`rem`).\n * rem(20);\n * @param {number} px - Pixel value.\n * @returns {number} Given pixel value converted to `rem` units.\n */\nexport const rem = (px) => {\n  const rootFontSize = window.getComputedStyle(document.documentElement).fontSize;\n  return px / parseInt(rootFontSize, 10);\n};\n","import { createElement, rem } from './utils.js';\n\nconst FORM_CONTROL_PADDING_X = rem(12);\nconst GAP = rem(6);\nconst ICON_SIZE = rem(20);\n\nconst BASE_SEARCH_INPUT_PADDING_X = `${FORM_CONTROL_PADDING_X + ICON_SIZE + GAP}rem`;\n\nconst MAX_BADGE_COUNT = 1;\n\nexport const initializeSearch = () => {\n  const headerSearch = document.getElementById('header_search');\n\n  // Do nothing and `return` early when there is no `#header_search` element in the page.\n  if (!headerSearch) {\n    return () => {};\n  }\n\n  const NAV_MENU = (() => {\n    try {\n      const navMenu = document.getElementById('nav_menu');\n      return navMenu ? JSON.parse(navMenu.textContent) : {};\n    } catch (exception) {\n      return {};\n    }\n  })();\n\n  /*\n   * Pick only the lowest level of nested `nav_menu` object. In TypeScript, it would be manifested as the following type:\n   * `{ [item_link: string]: { name: string; weight: number } };`.\n   */\n  const SEARCHABLE_MODELS = Object.fromEntries(\n    Object.entries(NAV_MENU.tabs).flatMap(([, tab_details]) =>\n      Object.entries(tab_details.groups).flatMap(([, group_details]) =>\n        Object.entries(group_details.items).map(([item_link, item_details]) => [item_link, item_details]),\n      ),\n    ),\n  );\n\n  const BADGE_REG_EXP = new RegExp(\n    `^\\\\s*in\\\\s*:\\\\s*(${Object.entries(SEARCHABLE_MODELS)\n      // Extend simple vanilla model name match with more word delimiter variants (or no word delimiters at all).\n      .flatMap(([, { name }]) => [name, ...['', '_', '\\\\-'].map((delimiter) => name.replace(/\\s+/g, delimiter))])\n      .join('|')})\\\\s+`,\n    'i',\n  );\n\n  const headerSearchInput = headerSearch.querySelector('input');\n\n  const closeSearchPopup = () => {\n    const searchPopup = document.getElementById('search_popup');\n\n    if (searchPopup) {\n      searchPopup.remove();\n      document.body.classList.toggle('overflow-y-hidden', false);\n    }\n  };\n\n  // Focus search input on Cmd+K or Ctrl+K shortcut and close search popup on Escape.\n  const onKeyDown = (event) => {\n    const isPressedCmd = event.getModifierState('Meta');\n    const isPressedCtrl = event.ctrlKey;\n\n    if ((isPressedCmd || isPressedCtrl) && event.key === 'k') {\n      event.preventDefault();\n      headerSearchInput.focus();\n    } else if (event.key === 'Escape') {\n      closeSearchPopup();\n    }\n  };\n\n  document.addEventListener('keydown', onKeyDown);\n\n  const openSearchPopup = () => {\n    const searchPopup = document.getElementById('search_popup');\n\n    // Just focus an existing search popup `input` and `return` early if `#searchPopup` is already open.\n    if (searchPopup) {\n      const input = searchPopup.querySelector('input');\n      input?.focus();\n      input?.setSelectionRange(-1, -1);\n      return;\n    }\n\n    document.body.classList.toggle('overflow-y-hidden', true);\n\n    const { left: mainLeft = 0, right: mainRight = 0 } = document.querySelector('main')?.getBoundingClientRect() ?? {};\n    const { top: headerSearchInputTop } = headerSearchInput.getBoundingClientRect();\n\n    const icon = createElement('span', {\n      ['aria-hidden']: 'true',\n      className:\n        'mdi mdi-magnify d-inline-flex ms-12 mt-6 pe-none position-absolute start-0 text-secondary top-0 user-select-none',\n      style: `height: ${ICON_SIZE}rem; width: ${ICON_SIZE}rem;`,\n    });\n\n    const badges = createElement('span', {\n      className: 'd-inline-flex gap-6 left-0 my-6 position-absolute top-0',\n      style: `left: ${BASE_SEARCH_INPUT_PADDING_X};`,\n    });\n\n    const input = createElement('input', {\n      className: 'form-control w-100',\n      name: 'q',\n      required: 'true',\n      style: `padding-inline: ${BASE_SEARCH_INPUT_PADDING_X};`,\n      type: 'search',\n      value: headerSearchInput.value,\n    });\n\n    const clear = createElement(\n      'button',\n      {\n        className: `btn mdi mdi-close bg-transparent border-0 end-0 hstack justify-content-center me-12 mt-6 p-0 position-absolute text-secondary top-0 nb-transition-base${input.value === '' ? ' invisible opacity-0' : ''}`,\n        style: `height: ${ICON_SIZE}rem; width: ${ICON_SIZE}rem;`,\n        type: 'button',\n      },\n      createElement('span', { className: 'visually-hidden' }, 'Clear'),\n    );\n\n    clear.addEventListener('click', () => {\n      input.value = '';\n      input.dispatchEvent(new InputEvent('input'));\n      input.focus();\n    });\n\n    input.addEventListener('input', () => {\n      const shouldHideClear = input.value === '';\n      clear.classList.toggle('invisible', shouldHideClear);\n      clear.classList.toggle('opacity-0', shouldHideClear);\n    });\n\n    const submit = createElement('input', { className: 'd-none', type: 'submit' });\n\n    const form = createElement(\n      'form',\n      { action: headerSearch.getAttribute('action'), className: 'position-relative w-100', role: 'search' },\n      icon,\n      badges,\n      input,\n      clear,\n      submit,\n    );\n\n    /* In case there is no badge, use global search. Otherwise, navigate to badge specific model list view. */\n    form.addEventListener('submit', () => {\n      const badge = form.querySelector('[data-nb-link]:last-child');\n\n      if (badge) {\n        form.setAttribute('action', badge.dataset.nbLink);\n      }\n    });\n\n    const results = createElement('div');\n\n    const popup = createElement(\n      'div',\n      { className: 'mx-auto w-100', style: `max-width: ${rem(720)}rem;` },\n      form,\n      results,\n    );\n\n    const overlay = createElement(\n      'div',\n      {\n        className: 'overflow-auto pb-20 position-fixed top-0 end-0 bottom-0 start-0 nb-z-modal-backdrop',\n        id: 'search_popup',\n        role: 'dialog',\n        style: `background-color: rgba(0, 0, 0, .5); padding-block-start: ${headerSearchInputTop}px; padding-inline-start: calc(${mainLeft}px + ${rem(20)}rem); padding-inline-end: calc(100% - ${mainRight}px + ${rem(20)}rem);`,\n      },\n      popup,\n    );\n\n    // Close search popup on direct overlay click.\n    overlay.addEventListener('click', (event) => {\n      if (event.target === overlay) {\n        closeSearchPopup();\n      }\n    });\n\n    document.body.appendChild(overlay);\n\n    const addBadge = (link) => {\n      const name = Object.entries(SEARCHABLE_MODELS).find(([item_link]) => item_link === link)?.[1]?.name ?? link;\n\n      const removeButton = createElement(\n        'button',\n        { type: 'button' },\n        createElement('span', { ['aria-hidden']: 'true', class: 'mdi mdi-close' }),\n        createElement('span', { class: 'visually-hidden' }, 'Remove'),\n      );\n\n      removeButton.addEventListener('click', () => {\n        badge.remove();\n        input.focus();\n      });\n\n      const badge = createElement(\n        'span',\n        { className: 'badge border', ['data-nb-link']: link },\n        `in: ${name}`,\n        removeButton,\n      );\n\n      // Before adding a new badge, remove existing badges with the same `link` to prevent duplicates.\n      [...badges.querySelectorAll(`[data-nb-link=\"${link}\"]`)].forEach((badge) => badge.remove());\n\n      badges.appendChild(badge);\n\n      // Obey the `MAX_BADGE_COUNT` constraint.\n      [...badges.children].slice(0, -1 * MAX_BADGE_COUNT).forEach((badge) => badge.remove());\n    };\n\n    // Recalculate search input left padding when badges container size changes, i.e. a badge is added or removed.\n    const resizeObserver = new ResizeObserver(() => {\n      const { width } = badges.getBoundingClientRect();\n      input.style.paddingInlineStart = width\n        ? `calc(${BASE_SEARCH_INPUT_PADDING_X} + ${width}px + ${GAP}rem)`\n        : BASE_SEARCH_INPUT_PADDING_X;\n    });\n\n    resizeObserver.observe(badges);\n\n    input.addEventListener('input', (event) => {\n      const match = input.value.match(BADGE_REG_EXP);\n\n      if (match) {\n        const [phrase, model] = match;\n\n        const normalize = (text) =>\n          text\n            .trim()\n            .toLowerCase()\n            .replace(/\\s|_|-/g, '');\n        const link = Object.entries(SEARCHABLE_MODELS).find(\n          ([, { name }]) => normalize(name) === normalize(model),\n        )?.[0];\n\n        if (link) {\n          // Remove phrase that matched the badge-specific regular expression and replace it with a corresponding badge.\n          input.value = input.value.replace(phrase, '');\n          input.dispatchEvent(new InputEvent('input'));\n          addBadge(link);\n        }\n      }\n    });\n\n    // Remove the first badge on the right-hand side when `'Backspace'` key is pressed on the input start position.\n    input.addEventListener('keydown', (event) => {\n      const isBackspace = event.key === 'Backspace';\n      const isInputStart = input.selectionEnd === 0 && input.selectionStart === 0;\n\n      if (isBackspace && isInputStart) {\n        badges.querySelector(':last-child')?.remove();\n      }\n    });\n\n    // When search popup is open, copy existing badges from `#header_search` to search popup input.\n    headerSearch.querySelectorAll('[data-nb-link]').forEach((badge) => addBadge(badge.dataset.nbLink));\n\n    // Automatically focus search popup input when opened and move cursor to the end of input field.\n    input.focus();\n    input.setSelectionRange(-1, -1);\n  };\n\n  headerSearchInput.addEventListener('focus', openSearchPopup);\n\n  return () => {\n    closeSearchPopup();\n    document.removeEventListener('keydown', onKeyDown);\n    headerSearchInput.removeEventListener('focus', openSearchPopup);\n  };\n};\n","import get from 'lodash.get';\nimport { createElement } from './utils.js';\n\n/**\n * Get HTML `element`. This function accepts input as native `Document` and `Element` object and `jQuery` collection.\n * It should no longer be required after migrating away from jQuery.\n * @param {Document|Element|jQuery} `element` - `element` in question.\n * @returns {Document|Element} Native `element` object.\n */\nconst getElement = (element) => (element instanceof Document || element instanceof Element ? element : element[0]);\n\n/**\n * Get `select` element value.\n * @param {HTMLSelectElement} select - `select` element in question.\n * @returns {string|string[]} `string` value for single combobox, an array of `string` values for multiple combobox.\n */\nconst getValue = (select) =>\n  select?.getAttribute('multiple') ? [...select.selectedOptions].map((option) => option.value) : select?.value;\n\n/**\n * Parse URLs which may contain variable references to other field values.\n * @param {string} url - URL template string.\n * @returns {string} URL with interpolated dynamic values.\n */\nconst parseURL = (url) => {\n  const filter_regex = /\\{\\{([a-z_]+)}}/g;\n\n  let match;\n  let rendered_url = url;\n\n  while ((match = filter_regex.exec(url))) {\n    const filter_field = document.querySelector(`#id_${match[1]}`);\n    const custom_attribute = filter_field?.selectedOptions?.[0]?.getAttribute('api-value');\n    const replace =\n      custom_attribute || filter_field.value || (filter_field.getAttribute('data-null-option') ? 'null' : undefined);\n\n    rendered_url = replace ? rendered_url.replace(match[0], replace) : rendered_url;\n  }\n\n  return rendered_url;\n};\n\n/**\n * Initialize given Select2 components in passed `context` by `selector`, optionally with `options`.\n * @param {Document|Element|jQuery} context - Context root element.\n * @param {string} selector - CSS query selector of `select` elements to be initialized as Select2 components.\n * @param {object} [options] - Optional Select2 components initialization options.\n * @returns {void} Do not return any value, just initialize given Select2 components.\n */\nconst initializeSelect2 = (context, selector, options) =>\n  [...getElement(context).querySelectorAll(selector)].forEach((element) =>\n    $(element).select2({\n      allowClear: true,\n      placeholder: element.getAttribute('placeholder') || '---------',\n      theme: 'bootstrap-5',\n      selectionCssClass: 'select2--small',\n      width: 'off',\n      ...options,\n    }),\n  );\n\nconst initializeColorPicker = (context, dropdownParent = null) => {\n  // Assign color picker selection classes.\n  const colorPickerClassCopy = (data, container) => {\n    if (data.element) {\n      // Swap the style.\n      const containerElement = getElement(container);\n      containerElement.setAttribute('style', data.element.getAttribute('style'));\n    }\n\n    return data.text;\n  };\n\n  initializeSelect2(context, '.nautobot-select2-color-picker', {\n    dropdownParent,\n    templateResult: colorPickerClassCopy,\n    templateSelection: colorPickerClassCopy,\n  });\n};\n\nconst initializeDynamicChoiceSelection = (context, dropdownParent = null) => {\n  initializeSelect2(context, '.nautobot-select2-api', {\n    ajax: {\n      delay: 500,\n      url: function () {\n        const element = this[0];\n        const url = parseURL(element.getAttribute('data-url'));\n\n        // If URL is not fully rendered yet, abort the request.\n        return !url.includes('{{') && url;\n      },\n      data: function (params) {\n        const element = this[0];\n\n        // Paging. Note that `params.page` indexes at 1.\n        const offset = (params.page - 1) * 50 || 0;\n\n        // Base query params.\n        const limit = 50;\n        const q = params.term;\n\n        // Set api_version.\n        const api_version = element.getAttribute('data-api-version');\n\n        // Allow for controlling the depth setting from within APISelect.\n        const depth = parseInt(element.getAttribute('data-depth'), 10) || 0;\n\n        // Attach contenttype to parameters.\n        const contenttype = element.getAttribute('data-contenttype');\n\n        // Attach any extra query parameters\n        const extra_query_parameters = Object.fromEntries(\n          [...element.attributes]\n            .filter((attribute) => attribute.name.includes('data-query-param-'))\n            .flatMap((attribute) => {\n              const [, param_name] = attribute.name.split('data-query-param-');\n\n              const values = (() => {\n                try {\n                  return JSON.parse(attribute.value);\n                } catch (exception) {\n                  return [];\n                }\n              })();\n\n              return values.flatMap((value) => {\n                const has_ref_field = value.startsWith('$');\n\n                // Referencing the value of another form field.\n                const ref_field = has_ref_field\n                  ? (() => {\n                      const name = value.slice(1);\n\n                      if (element.id.includes('id_form-')) {\n                        const id_prefix = element.id.match(/id_form-[0-9]+-/i, '')[0];\n                        return document.querySelector(`#${id_prefix}${name}`);\n                      }\n\n                      /*\n                       * If the element is in a table row with a class containing \"dynamic-formset\" we need to find the\n                       * reference field in the same row.\n                       */\n                      if (element.closest('tr')?.classList.contains('dynamic-formset')) {\n                        return element.closest('tr').querySelector(`select[id*=\"${name}\"]`);\n                      }\n\n                      return document.querySelector(`#id_${name}`);\n                    })()\n                  : null;\n\n                const ref_field_value = ref_field\n                  ? (() => {\n                      const field_value = getValue(ref_field);\n                      const style = window.getComputedStyle(ref_field);\n\n                      if (field_value && style.opacity !== '0' && style.visibility !== 'hidden') {\n                        return field_value;\n                      }\n\n                      if (ref_field.getAttribute('required') && ref_field.getAttribute('data-null-option')) {\n                        return 'null';\n                      }\n                    })()\n                  : null;\n\n                const param_value = has_ref_field ? ref_field_value : value;\n                return param_value !== null && param_value !== undefined\n                  ? [[param_name, ref_field_value || value]]\n                  : [];\n              });\n            }),\n        );\n\n        const parameters = {\n          depth: String(depth),\n          limit: String(limit),\n          offset: String(offset),\n          ...(api_version ? { api_version } : undefined),\n          ...(contenttype ? { contenttype } : undefined),\n          ...(q ? { q } : undefined),\n          ...extra_query_parameters,\n        };\n\n        // This will handle params with multiple values (i.e. for list filter forms).\n        return new URLSearchParams(parameters).toString();\n      },\n      processResults: function (data) {\n        const element = this.$element[0];\n        [...element.querySelectorAll('option')].forEach((child) => child.removeAttribute('disabled'));\n\n        const results = [\n          // Handle the null option, but only add it once.\n          ...(element.getAttribute('data-null-option') && data.previous === null\n            ? [{ id: 'null', text: element.getAttribute('data-null-option') }]\n            : []),\n          ...Object.values(\n            data.results.reduce((results, record, index) => {\n              // The disabled-indicator equated to true, so we disable this option.\n              const disabled = Boolean(record?.[element.getAttribute('disabled-indicator')]);\n              const id = get(record, element.getAttribute('value-field')) || record.id;\n              const text = get(record, element.getAttribute('display-field')) || record.name;\n\n              const item = { ...record, disabled, id, text };\n              const { group, site, url } = item;\n\n              // DynamicGroupSerializer has a `children` field which fits an inappropriate if condition\n              // in select2.min.js, which will result in the incorrect rendering of DynamicGroup DynamicChoiceField.\n              // So we nullify the field here since we do not need this field.\n              const should_nullify_children = Boolean(url?.includes('dynamic-groups'));\n\n              const collection = (() => {\n                switch (true) {\n                  case group !== undefined && group !== null && site !== undefined && site !== null:\n                    return { property: `${site.name}:${group.name}`, text: `${site.name} / ${group.name}` };\n\n                  case group !== undefined && group !== null:\n                    return { property: group.name, text: group.name };\n\n                  case site !== undefined && site !== null:\n                    return { property: site.name, text: site.name };\n\n                  case group === null && site === null:\n                    return { property: 'global', text: 'Global' };\n\n                  default:\n                    return undefined;\n                }\n              })();\n\n              return {\n                ...results,\n                ...(collection\n                  ? {\n                      [collection.property]: {\n                        ...results[collection.property],\n                        ...(!results[collection.property] ? { text: collection.text } : undefined),\n                        children: should_nullify_children\n                          ? undefined\n                          : [...(results[collection.property]?.children ?? []), item],\n                      },\n                    }\n                  : { [index]: item }),\n              };\n            }, {}),\n          ),\n        ];\n\n        // Check if there are more results to page.\n        const has_next_page = data.next !== null;\n        return { results, pagination: { more: has_next_page } };\n      },\n    },\n    dropdownParent,\n  });\n};\n\nconst initializeMultiValueChar = (context, dropdownParent = null) =>\n  initializeSelect2(context, '.nautobot-select2-multi-value-char', {\n    dropdownParent,\n    language: { noResults: () => 'Type something to add it as an option' },\n    multiple: true,\n    tags: true,\n  });\n\nconst initializeStaticChoiceSelection = (context, dropdownParent = null) =>\n  initializeSelect2(context, '.nautobot-select2-static', { dropdownParent });\n\nconst initializeTags = (context, dropdownParent = null) => {\n  const element = getElement(context);\n  const selector = '#id_tags.tagfield';\n\n  const field = element.querySelector(selector);\n  const data = (field?.value?.split(/,\\s*/) ?? []).map((tag) => ({ id: tag, selected: true, text: tag }));\n\n  // Replace the Django-issued text input with a select element.\n  field?.replaceWith(\n    createElement('select', {\n      className: 'form-select tagfield',\n      id: 'id_tags',\n      name: 'tags',\n      placeholder: 'Select...',\n    }),\n  );\n\n  initializeSelect2(context, selector, {\n    ajax: {\n      delay: 250,\n      url: `${nautobot_api_path}extras/tags/`,\n      data: (params) => {\n        // Paging. Note that `params.page` indexes at 1.\n        const offset = (params.page - 1) * 50 || 0;\n\n        // Base query params.\n        const limit = 50;\n        const q = params.term;\n\n        const parameters = { limit: String(limit), offset: String(offset), ...(q ? { q } : undefined) };\n\n        return new URLSearchParams(parameters).toString();\n      },\n      processResults: function (data) {\n        const results = data.results.map((obj) => {\n          // If tag contains space add double quotes.\n          const name = /\\s/.test(obj.name) ? `\"${obj.name}\"` : obj.name;\n          return { id: name, text: name };\n        });\n\n        // Check if there are more results to page.\n        const has_next_page = data.next !== null;\n        return { results, pagination: { more: has_next_page } };\n      },\n    },\n    data,\n    dropdownParent,\n    multiple: true,\n    tags: true,\n  });\n\n  const select = element.querySelector(selector);\n  select?.form?.addEventListener('submit', () => {\n    // django-taggit can only accept a single comma seperated string value\n    const value = getValue(select);\n\n    if (value.length > 0) {\n      select.value = '';\n      select.dispatchEvent(new Event('change', { bubbles: true, cancelable: true }));\n\n      const final_tags = value.join(', ');\n      const option = createElement('option', { selected: 'true', value: final_tags }, final_tags);\n      select.appendChild(option);\n      select.dispatchEvent(new Event('change', { bubbles: true, cancelable: true }));\n    }\n  });\n};\n\nexport const initializeSelect2Fields = (context) => {\n  initializeColorPicker(context);\n  initializeDynamicChoiceSelection(context);\n  initializeMultiValueChar(context);\n  initializeStaticChoiceSelection(context);\n  initializeTags(context);\n\n  [...getElement(context).querySelectorAll('.modal')].forEach((modal) => {\n    initializeColorPicker(modal, modal);\n    initializeDynamicChoiceSelection(modal, modal);\n    initializeMultiValueChar(modal, modal);\n    initializeStaticChoiceSelection(modal, modal);\n    initializeTags(modal, modal);\n  });\n};\n","import * as bootstrap from 'bootstrap';\nimport { createElement, removeElementClasses } from './utils.js';\n\nconst TABS_HIDDEN_CLASSES = ['invisible', 'position-absolute'];\n\n/**\n * Collapse wrapped tabs to dropdown menu in given tab container.\n * @param {HTMLElement} tabs - Tab container HTML element.\n * @returns {void} Do not return any value, modify DOM instead.\n */\nexport const collapseTabs = (tabs) => {\n  const tabsParent = tabs.parentNode;\n\n  // Remove existing tab clones to prevent duplicates because they will be created from scratch below if needed.\n  [...tabsParent.querySelectorAll('.nav.nav-tabs[data-clone=\"true\"]')].forEach((tabsClone) => tabsClone.remove());\n\n  // For safety, do not operate on original tabs element, deep clone tabs to operate on its clone instead.\n  const tabsClone = tabs.cloneNode(true);\n\n  // Remove `id` element attribute from cloned tabs element to avoid potential `id` conflicts.\n  tabsClone.removeAttribute('id');\n\n  // Set `data-clone` attribute to `\"true\"` on tabs clone element to be able to easily distinguish it from the original.\n  tabsClone.dataset.clone = 'true';\n\n  /*\n   * Add following classes to cloned element to:\n   *   1. Make tabs span across the whole required width without wrapping.\n   *   2. Force them to be (temporarily) invisible.\n   */\n  const tabsCloneTemporaryClasses = ['flex-nowrap', 'invisible', 'position-absolute', 'z-n1'];\n  tabsClone.classList.add(...tabsCloneTemporaryClasses);\n\n  // Append currently invisible cloned tabs to DOM right after the original tabs element.\n  tabs.nextSibling ? tabsParent.insertBefore(tabsClone, tabs.nextSibling) : tabsParent.appendChild(tabsClone);\n\n  // Excessive tabs should be collapsed if tabs clone is wider than the original. Remember - clone does not wrap.\n  const shouldCollapseTabs = () => tabsClone.getBoundingClientRect().width > tabs.getBoundingClientRect().width;\n\n  // If there is no need to collapse tabs, show original tabs (if previously hidden) clean up tabs clone and `return` early.\n  if (!shouldCollapseTabs()) {\n    tabs.classList.remove(...TABS_HIDDEN_CLASSES);\n    tabsParent.removeChild(tabsClone);\n    return;\n  }\n\n  /*\n   * Compose dropdown element. Ignore dropdown items for now, they will be added to the dropdown menu soon anyway. The\n   * most important thing about this step is to append dropdown with visible toggle button at the end of cloned tabs\n   * list to reach maximum width (dropdown toggle has considerable size too) before starting to actually collapse tabs.\n   */\n  const dropdownMenu = createElement('ul', { className: 'dropdown-menu' });\n  const dropdownToggleIcon = createElement('span', { className: 'mdi mdi-menu' });\n  const dropdownToggleLabel = createElement('span', { className: 'visually-hidden' }, 'Toggle Dropdown');\n  const dropdownToggle = createElement(\n    'button',\n    {\n      'aria-expanded': 'false',\n      className: 'btn dropdown-toggle text-secondary',\n      'data-bs-toggle': 'dropdown',\n      type: 'button',\n    },\n    dropdownToggleIcon,\n    dropdownToggleLabel,\n  );\n  const dropdown = createElement(\n    'li',\n    { className: 'dropdown flex-grow-1 mb-n1 text-end' },\n    dropdownToggle,\n    dropdownMenu,\n  );\n  tabsClone.appendChild(dropdown);\n\n  /*\n   * Identify tabs that require collapsing by taking out one by one from the right-hand side until tabs width can fit\n   * inside its parent container. Essentially, overflowing tabs are moved from tab list to future dropdown menu.\n   */\n  const collapsedTabs = [];\n  while (shouldCollapseTabs()) {\n    const lastTab = dropdown.previousElementSibling; // With dropdown appended to DOM, its previous siblings are tabs.\n    collapsedTabs.unshift(lastTab); // Use `unshift` instead of `push` because this loop is iterating backward in a sense.\n    tabsClone.removeChild(lastTab);\n  }\n\n  /*\n   * Properly convert collapsed tabs to dropdown items:\n   *   1. Remove all `<li>` `nav-item` element classes.\n   *   2. Remove all `<a>` `nav-link` element classes other than `active` and `disabled` to maintain valid tab state.\n   *   3. Add `dropdown-item` class to `<a>` element (formerly `nav-link`).\n   *   4. Append collapsed tab to dropdown menu.\n   */\n  collapsedTabs.forEach((collapsedTab) => {\n    removeElementClasses(collapsedTab);\n\n    [...collapsedTab.children].forEach((navLink) => {\n      removeElementClasses(navLink, 'active', 'disabled');\n      navLink.classList.add('dropdown-item', 'justify-content-between');\n    });\n\n    dropdownMenu.appendChild(collapsedTab);\n  });\n\n  /*\n   * Tabs clone with collapsed tabs is now ready to be swapped with original. The only thing left to do is to\n   * make it synchronize its state back to the original.\n   */\n  [...tabsClone.querySelectorAll('a')].forEach((clonedTab) => {\n    clonedTab.addEventListener('shown.bs.tab', () => {\n      const originalTab = tabs.querySelector(`a[href=\"${clonedTab.getAttribute('href')}\"]`);\n      const originalTabInstance = bootstrap.Tab.getInstance(originalTab) || new bootstrap.Tab(originalTab);\n      originalTabInstance.show();\n    });\n  });\n\n  // Swap tabs clone with the original, in other words swap wrapped tabs with collapsed tabs.\n  tabs.classList.add(...TABS_HIDDEN_CLASSES);\n  tabsClone.classList.remove(...tabsCloneTemporaryClasses);\n};\n\n/**\n * Observe size changes of all tab containers on the page and collapse tabs inside of them if they wrap.\n * @example\n * // Run `collapseTabs` algorithm for all tabs on the page exactly once, i.e. observe and immediately unobserve.\n * const unobserveCollapseTabs = observeCollapseTabs();\n * unobserveCollapseTabs();\n * @returns {function(): void} Unobserve function - disconnect all resize observers created during function call.\n */\nexport const observeCollapseTabs = () => {\n  const resizeObservers = [...document.querySelectorAll('.nav.nav-tabs')].map((tabs) => {\n    const resizeObserver = new ResizeObserver(() => collapseTabs(tabs));\n    resizeObserver.observe(tabs);\n    return resizeObserver;\n  });\n\n  return () => resizeObservers.forEach((resizeObserver) => resizeObserver.disconnect());\n};\n","const THEME_MODAL_ID = 'theme_modal';\n\nconst THEME_DARK = 'dark';\nconst THEME_LIGHT = 'light';\nconst THEME_SYSTEM = 'system';\n\n/**\n * Get preferred system color scheme.\n * @returns {('dark'|'light')} Preferred system color scheme.\n */\nconst getPreferredColorScheme = () =>\n  window.matchMedia?.(`(prefers-color-scheme: ${THEME_DARK})`).matches ? THEME_DARK : THEME_LIGHT;\n\n/**\n * Check if given `theme` is a valid Nautobot theme, i.e. `'dark'`, `'light'`, or `'system'`.\n * @param {string} theme - Theme in question.\n * @returns {boolean} `true` is given `theme` is a valid Nautobot theme, `false` otherwise.\n */\nconst isValidTheme = (theme) => theme === THEME_DARK || theme === THEME_LIGHT || theme === THEME_SYSTEM;\n\n/**\n * Automatically detect Nautobot theme. It is derived from `cookie` or `localStorage` if set manually, and falls back to\n * preferred system color scheme by default.\n * @returns {('dark'|'light'|'system')} Detected Nautobot theme.\n */\nconst detectTheme = () => {\n  // Cookie getter based on MDN example: https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie#example_2_get_a_sample_cookie_named_test2\n  const cookieTheme = document.cookie\n    .split('; ')\n    .find((cookie) => cookie.startsWith('theme='))\n    ?.split('=')[1];\n  if (isValidTheme(cookieTheme)) {\n    return cookieTheme;\n  }\n\n  const localStorageTheme = window.localStorage?.getItem('theme');\n  if (isValidTheme(localStorageTheme)) {\n    return localStorageTheme;\n  }\n\n  return THEME_SYSTEM;\n};\n\n/**\n * Set Nautobot theme.\n * @param {('dark'|'light'|'system')} theme - Nautobot theme to be set.\n * @param {{ manual?: boolean }} [options] - Setter function options object. Currently supported option is `manual`.\n * @returns {void} Do not return any value, set given `theme` and save it into a persistent store if `manual` is `true`.\n */\nconst setTheme = (theme, options) => {\n  const isManual = Boolean(options?.manual);\n\n  const modal = document.getElementById(THEME_MODAL_ID);\n  const buttons = modal?.querySelectorAll('button[data-nb-theme]') ?? [];\n\n  buttons.forEach((button) =>\n    ['border', 'border-primary'].forEach((className) =>\n      button.classList.toggle(className, button.dataset.nbTheme === theme),\n    ),\n  );\n\n  const bsTheme = theme === THEME_SYSTEM ? getPreferredColorScheme() : theme;\n  document.documentElement.dataset.theme = bsTheme;\n  document.documentElement.dataset.bsTheme = bsTheme;\n\n  if (theme === THEME_SYSTEM) {\n    document.cookie = `theme=${theme}; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT`;\n    window.localStorage?.removeItem('theme');\n  } else if (isManual) {\n    document.cookie = `theme=${theme}; path=/`;\n    window.localStorage?.setItem('theme', theme);\n  }\n\n  if (theme === THEME_DARK || (theme === THEME_SYSTEM && bsTheme === THEME_DARK)) {\n    [...document.getElementsByTagName('object')].forEach((object) => {\n      object.addEventListener('load', (event) => {\n        if (event.target.contentDocument) {\n          const images = event.target.contentDocument.getElementsByTagName('image');\n          const short_names = event.target.contentDocument.getElementsByClassName('rack-device-shortname');\n          const full_names = event.target.contentDocument.getElementsByClassName('rack-device-fullname');\n\n          [...images, ...short_names, ...full_names].forEach((rack_image) =>\n            rack_image.setAttribute('filter', 'url(#darkmodeinvert)'),\n          );\n        }\n      });\n    });\n  }\n\n  if (isManual) {\n    document.location.reload();\n  }\n};\n\nexport const initializeTheme = () => {\n  const modal = document.getElementById(THEME_MODAL_ID);\n  const buttons = modal?.querySelectorAll('button[data-nb-theme]') ?? [];\n\n  setTheme(detectTheme());\n  window.matchMedia(`(prefers-color-scheme: ${THEME_DARK})`).addEventListener('change', () => setTheme(detectTheme()));\n\n  const onClick = (event) => setTheme(event.currentTarget.dataset.nbTheme, { manual: true });\n  buttons.forEach((button) => button.addEventListener('click', onClick));\n\n  return () => buttons.forEach((button) => button.removeEventListener('click', onClick));\n};\n","import '../scss/nautobot.scss';\n\nimport * as bootstrap from 'bootstrap';\nwindow.bootstrap = bootstrap;\n\nimport ClipboardJS from 'clipboard';\nwindow.ClipboardJS = ClipboardJS;\n\nimport flatpickr from 'flatpickr';\nwindow.flatpickr = flatpickr;\n\nimport hljs from 'highlight.js/lib/core';\nimport 'highlight.js/styles/github.css';\nimport graphql from 'highlight.js/lib/languages/graphql';\nimport json from 'highlight.js/lib/languages/json';\nimport xml from 'highlight.js/lib/languages/xml';\nimport yaml from 'highlight.js/lib/languages/yaml';\n\nhljs.registerLanguage('graphql', graphql);\nhljs.registerLanguage('json', json);\nhljs.registerLanguage('xml', xml);\nhljs.registerLanguage('yaml', yaml);\nwindow.hljs = hljs;\n\nimport jQuery from 'jquery';\nwindow.jQuery = jQuery;\nwindow.$ = window.jQuery;\n\nimport 'jquery-ui';\nimport 'select2';\n\nimport { initializeCollapseToggleAll } from './collapse.js';\nimport { initializeDraggable } from './draggable.js';\nimport { initializeDrawers } from './drawer.js';\nimport { observeFormStickyFooters } from './form.js';\nimport { initializeSearch } from './search.js';\nimport { initializeSelect2Fields } from './select2.js';\nimport { observeCollapseTabs } from './tabs.js';\nimport { initializeTheme } from './theme.js';\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  // Tooltips\n  // https://getbootstrap.com/docs/5.3/components/tooltips/#enable-tooltips\n  [...document.querySelectorAll('[data-bs-toggle=\"tooltip\"]')].forEach((tooltip) => new bootstrap.Tooltip(tooltip));\n\n  // Sidenav\n  document.querySelector('.sidenav-toggler').addEventListener('click', (event) => {\n    const toggler = event.currentTarget;\n\n    const controls = toggler.getAttribute('aria-controls');\n    const expanded = toggler.getAttribute('aria-expanded') === 'true';\n\n    toggler.setAttribute('aria-expanded', String(!expanded));\n\n    const sidenav = document.getElementById(controls);\n    sidenav.classList.toggle('sidenav-collapsed', expanded);\n  });\n\n  [...document.querySelectorAll('.sidenav-list-item')].forEach((sidenavListItem) => {\n    sidenavListItem.addEventListener('click', () => {\n      const controls = sidenavListItem.getAttribute('aria-controls');\n      const expanded = sidenavListItem.getAttribute('aria-expanded') === 'true';\n\n      sidenavListItem.setAttribute('aria-expanded', String(!expanded));\n\n      const onClickDocument = (documentClickEvent) => {\n        const { target: documentClickTarget } = documentClickEvent;\n        const sidenavFlyout = document.getElementById(controls);\n\n        const isClickOutside =\n          !sidenavListItem.contains(documentClickTarget) && !sidenavFlyout.contains(documentClickTarget);\n\n        if (isClickOutside) {\n          sidenavListItem.setAttribute('aria-expanded', 'false');\n          document.removeEventListener('click', onClickDocument);\n        }\n      };\n\n      expanded\n        ? document.removeEventListener('click', onClickDocument)\n        : document.addEventListener('click', onClickDocument);\n    });\n  });\n\n  // Collapse\n  initializeCollapseToggleAll();\n\n  // Draggable\n  initializeDraggable();\n\n  // Drawer\n  initializeDrawers();\n\n  // Form\n  // TODO(norbert-mieczkowski-codilime): for htmx SPA-like behavior, re-initialize sticky footers like tabs below.\n  let unobserveFormStickyFooters = observeFormStickyFooters();\n\n  // Search\n  initializeSearch();\n\n  // Select2\n  // TODO(norbert-mieczkowski-codilime): clean up forms to prevent exporting functions to global scope like this.\n  window.initializeSelect2Fields = initializeSelect2Fields;\n\n  // Tabs\n  /*\n   * TODO(norbert-mieczkowski-codilime): listen for proper event type(s) to re-initialize collapse tabs observers when\n   *   htmx dynamic content reloading is implemented. Said re-initialization should be as simple as something like:\n   *   ```js\n   *   let unobserveCollapseTabs = observeCollapseTabs();\n   *   document.body.addEventListener('htmx:xhr:loadend', () => unobserveCollapseTabs());\n   *   document.body.addEventListener('htmx:load', () => {\n   *     unobserveCollapseTabs = observeCollapseTabs();\n   *   });\n   *   ```\n   */\n  let unobserveCollapseTabs = observeCollapseTabs();\n\n  // Theme\n  initializeTheme();\n\n  const toggleFavorite = (element, event) => {\n    if (event.detail.successful) {\n      element.classList.toggle('active');\n    }\n  };\n  window.toggleFavorite = toggleFavorite;\n\n  const setRequestUrl = (element, event) => {\n    const isFavorite = element.classList.contains('active');\n    event.detail.path = isFavorite ? element.dataset.deleteUrl : element.dataset.addUrl;\n  };\n  window.setRequestUrl = setRequestUrl;\n});\n","/**\n * Observe pinned state of elements of class `nb-form-sticky-footer` on the page and add drop shadow with `nb-is-pinned`\n * class if they are pinned. This is purely cosmetic and does not affect functionality.\n * @example\n * // Run form sticky footers observer algorithm exactly once, i.e. observe and immediately unobserve.\n * const unobserveFormStickyFooters = observeFormStickyFooters();\n * unobserveFormStickyFooters();\n * @returns {function(): void} Unobserve function - disconnect all resize observers created during function call.\n */\nexport const observeFormStickyFooters = () => {\n  // Form sticky footers pinned state detection with `IntersectionObserver` based on: https://stackoverflow.com/a/57991537.\n  const intersectionObserver = new IntersectionObserver(\n    ([entry]) => entry.target.classList.toggle('nb-is-pinned', entry.intersectionRatio < 1),\n    { threshold: [1] },\n  );\n\n  const formStickyFooters = [...document.querySelectorAll('.nb-form-sticky-footer')];\n  formStickyFooters.forEach((formStickyFooter) => intersectionObserver.observe(formStickyFooter));\n\n  return () => {\n    intersectionObserver.disconnect();\n  };\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t825: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunknautobot\"] = self[\"webpackChunknautobot\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [68], () => (__webpack_require__(116)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","DRAGGABLE_CLASS","DRAGGABLE_CONTAINER_CLASS","DRAGGING_CLASS","DRAWER_OPEN_CLASS","toggleDrawer","drawer","force","classList","toggle","isOpen","contains","setAttribute","drawerToggles","document","querySelectorAll","id","forEach","drawerToggle","getElementsByClassName","filter","openDrawer","rafRetriesRemaining","window","requestAnimationFrame","focusDrawer","getComputedStyle","visibility","focus","activeElement","nextActiveElement","querySelector","preventScroll","createElement","tag","attributes","children","element","Object","entries","attribute","value","child","insertAdjacentText","appendChild","removeElementClasses","ignore","className","includes","remove","rem","px","rootFontSize","documentElement","fontSize","parseInt","FORM_CONTROL_PADDING_X","GAP","ICON_SIZE","BASE_SEARCH_INPUT_PADDING_X","getElement","Document","Element","getValue","select","getAttribute","selectedOptions","map","option","initializeSelect2","context","selector","options","$","select2","allowClear","placeholder","theme","selectionCssClass","width","initializeColorPicker","dropdownParent","colorPickerClassCopy","data","container","text","templateResult","templateSelection","initializeDynamicChoiceSelection","ajax","delay","url","filter_regex","match","rendered_url","exec","filter_field","custom_attribute","replace","undefined","parseURL","this","params","offset","page","q","term","api_version","depth","contenttype","extra_query_parameters","fromEntries","name","flatMap","param_name","split","JSON","parse","exception","has_ref_field","startsWith","ref_field","slice","id_prefix","closest","ref_field_value","field_value","style","opacity","param_value","parameters","String","limit","URLSearchParams","toString","processResults","$element","removeAttribute","results","previous","values","reduce","record","index","disabled","Boolean","item","group","site","should_nullify_children","collection","property","pagination","more","next","initializeMultiValueChar","language","noResults","multiple","tags","initializeStaticChoiceSelection","initializeTags","field","selected","replaceWith","nautobot_api_path","obj","test","form","addEventListener","length","dispatchEvent","Event","bubbles","cancelable","final_tags","join","initializeSelect2Fields","modal","TABS_HIDDEN_CLASSES","THEME_MODAL_ID","THEME_DARK","THEME_LIGHT","THEME_SYSTEM","isValidTheme","detectTheme","cookieTheme","cookie","find","localStorageTheme","localStorage","getItem","setTheme","isManual","manual","getElementById","button","dataset","nbTheme","bsTheme","matchMedia","matches","removeItem","setItem","getElementsByTagName","object","event","target","contentDocument","rack_image","location","reload","bootstrap","ClipboardJS","flatpickr","registerLanguage","graphql","json","xml","yaml","hljs","jQuery","tooltip","toggler","currentTarget","controls","expanded","sidenavListItem","onClickDocument","documentClickEvent","documentClickTarget","sidenavFlyout","removeEventListener","areAll","collapseElements","collapsedOrExpanded","every","isCollapsed","getCollapseToggleAllTargets","collapseToggleAll","nbTarget","collapse","collapseInstance","Collapse","getOrCreateInstance","hide","show","textContent","initializeCollapseToggleAll","createHandleOnMouseListener","isDraggable","handle","onMouseDown","onMouseUp","draggable","dataTransfer","clearData","setData","add","preventDefault","getData","insertBefore","dropDraggable","height","top","getBoundingClientRect","clientY","nextSibling","left","right","clientX","append","initializeDraggable","dismiss","nbDismiss","nbToggle","intersectionObserver","IntersectionObserver","entry","intersectionRatio","threshold","formStickyFooter","observe","observeFormStickyFooters","headerSearch","NAV_MENU","navMenu","SEARCHABLE_MODELS","tabs","tab_details","groups","group_details","items","item_link","item_details","BADGE_REG_EXP","RegExp","delimiter","headerSearchInput","closeSearchPopup","searchPopup","body","isPressedCmd","getModifierState","isPressedCtrl","ctrlKey","key","input","setSelectionRange","mainLeft","mainRight","headerSearchInputTop","icon","badges","required","type","clear","InputEvent","shouldHideClear","submit","action","role","badge","nbLink","popup","overlay","addBadge","link","removeButton","class","ResizeObserver","paddingInlineStart","phrase","model","normalize","trim","toLowerCase","isBackspace","isInputStart","selectionEnd","selectionStart","initializeSearch","resizeObservers","resizeObserver","tabsParent","parentNode","tabsClone","cloneNode","clone","tabsCloneTemporaryClasses","shouldCollapseTabs","removeChild","dropdownMenu","dropdownToggleIcon","dropdownToggleLabel","dropdownToggle","dropdown","collapsedTabs","lastTab","previousElementSibling","unshift","collapsedTab","navLink","clonedTab","originalTab","getInstance","collapseTabs","observeCollapseTabs","buttons","onClick","initializeTheme","toggleFavorite","detail","successful","setRequestUrl","isFavorite","path","deleteUrl","addUrl","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","keys","splice","r","d","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}