{"version":3,"file":"js/nautobot.js","mappings":"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","sources":["webpack://nautobot/webpack/runtime/chunk loaded","webpack://nautobot/./src/js/draggable.js","webpack://nautobot/./src/js/drawer.js","webpack://nautobot/./src/js/utils.js","webpack://nautobot/./src/js/tabs.js","webpack://nautobot/./src/js/nautobot.js","webpack://nautobot/webpack/bootstrap","webpack://nautobot/webpack/runtime/define property getters","webpack://nautobot/webpack/runtime/hasOwnProperty shorthand","webpack://nautobot/webpack/runtime/make namespace object","webpack://nautobot/webpack/runtime/jsonp chunk loading","webpack://nautobot/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","const DRAGGABLE_CLASS = 'nb-draggable';\nconst DRAGGABLE_CONTAINER_CLASS = 'nb-draggable-container';\nconst DRAGGABLE_HANDLE_CLASS = 'nb-draggable-handle';\nconst DRAGGING_CLASS = 'nb-dragging';\n\nexport const initializeDraggable = () => {\n  const closest = (element, className) => element?.closest?.(`.${className}`);\n\n  const createHandleOnMouseListener = (isDraggable) => (event) => {\n    const handle = closest(event.target, DRAGGABLE_HANDLE_CLASS);\n    if (handle) {\n      const draggable = closest(handle, DRAGGABLE_CLASS);\n      draggable.setAttribute('draggable', String(isDraggable));\n    }\n  };\n\n  const onMouseDown = createHandleOnMouseListener(true);\n  const onMouseUp = createHandleOnMouseListener(false);\n\n  const onDragStart = (event) => {\n    const draggable = closest(event.target, DRAGGABLE_CLASS);\n    if (draggable) {\n      event.dataTransfer.clearData('text/plain');\n      event.dataTransfer.setData('text/plain', event.target.id);\n      draggable.classList.add(DRAGGING_CLASS);\n    }\n  };\n\n  const onDragEnd = (event) => {\n    const draggable = closest(event.target, DRAGGABLE_CLASS);\n    if (draggable) {\n      draggable.classList.remove(DRAGGING_CLASS);\n      draggable.setAttribute('draggable', 'false');\n    }\n  };\n\n  const onDragOver = (event) => {\n    const draggableContainer = closest(event.target, DRAGGABLE_CONTAINER_CLASS);\n    if (draggableContainer) {\n      event.preventDefault();\n    }\n  };\n\n  const onDrop = (event) => {\n    const draggable = document.getElementById(event.dataTransfer.getData('text/plain'));\n    if (draggable) {\n      event.preventDefault();\n\n      const container = closest(draggable, DRAGGABLE_CONTAINER_CLASS);\n\n      const insertBefore = (() => {\n        // Were we dropped onto another draggable?\n        const dropDraggable = closest(event.target, DRAGGABLE_CLASS);\n        if (dropDraggable) {\n          /*\n           * Were we dropped in the top half or the bottom half of the target draggable?\n           *   - Top half - insert before that draggable.\n           *   - Bottom half - insert after that draggable.\n           */\n          const { height, top } = dropDraggable.getBoundingClientRect();\n          const isTopHalf = event.clientY < top + height / 2;\n          return isTopHalf ? dropDraggable : dropDraggable.nextSibling;\n        }\n\n        // We were dropped into empty space - find the closest draggable by geometry.\n        return [...container.children].find((child) => {\n          const { left, right, top } = child.getBoundingClientRect();\n          // Are we in the correct column?\n          if (left > event.clientX) {\n            // Found the first child that is too far to the right, so we insert before that child.\n            return true;\n          } else if (right >= event.clientX) {\n            // Child is in the correct column.\n            if (top >= event.clientY) {\n              // Found the first child in this column we were dropped above, so we insert before that child.\n              return true;\n            }\n          }\n        });\n      })();\n\n      if (insertBefore) {\n        container.insertBefore(draggable, insertBefore);\n      } else {\n        // Add to end of the list.\n        container.append(draggable);\n      }\n\n      draggable.classList.add(DRAGGING_CLASS);\n    }\n  };\n\n  // Using event delegation pattern here to avoid re-creating listeners each time DOM is modified.\n  document.addEventListener('mousedown', onMouseDown);\n  document.addEventListener('mouseup', onMouseUp);\n  document.addEventListener('dragstart', onDragStart);\n  document.addEventListener('dragend', onDragEnd);\n  document.addEventListener('dragover', onDragOver);\n  document.addEventListener('drop', onDrop);\n};\n","const DRAWER_CLASS = 'nb-drawer';\nconst DRAWER_OPEN_CLASS = 'nb-drawer-open';\n\n/**\n * Toggle drawer element with an option to force open/close.\n * @param {HTMLElement} drawer - Drawer HTML element to be toggled.\n * @param {boolean} [force] - Optionally force opening (`true`) or closing (`false`) regardless of current state.\n * @returns {void} Do not return any value, modify existing HTML element in-place.\n */\nconst toggleDrawer = (drawer, force) => {\n  if (!drawer) {\n    return;\n  }\n\n  drawer.classList.toggle(DRAWER_OPEN_CLASS, force);\n\n  const isOpen = drawer.classList.contains(DRAWER_OPEN_CLASS);\n\n  drawer.setAttribute('aria-hidden', isOpen ? 'false' : 'true');\n\n  const drawerToggles = [...document.querySelectorAll(`[data-nb-toggle=\"drawer\"][data-nb-target=\"#${drawer.id}\"]`)];\n  drawerToggles.forEach((drawerToggle) => drawerToggle.setAttribute('aria-expanded', isOpen ? 'true' : 'false'));\n\n  /*\n   * Maintain proper element focus when the drawer is:\n   *   1. Open - focus the drawer as soon as it becomes visible and focusable.\n   *   2. Closed - in case focus is within the drawer move it back to the first found drawer toggle and, if not\n   *     available, the `main` element instead.\n   */\n  if (isOpen) {\n    // Close other open drawers if there are any. Effectively, this allows only one drawer to be open at a time.\n    const openDrawers = document.getElementsByClassName(DRAWER_OPEN_CLASS);\n    [...openDrawers]\n      .filter((openDrawer) => openDrawer !== drawer)\n      .forEach((openDrawer) => toggleDrawer(openDrawer, false));\n\n    (() => {\n      let rafRetriesRemaining = 100; // In case something goes wrong prevent falling into an infinite loop.\n\n      // Use `requestAnimationFrame` to wait until drawer becomes visible and focusable.\n      window.requestAnimationFrame(function focusDrawer() {\n        const isDrawerVisible = window.getComputedStyle(drawer).visibility === 'visible';\n\n        if (isDrawerVisible) {\n          drawer.focus();\n        } else if (rafRetriesRemaining > 0) {\n          rafRetriesRemaining -= 1;\n          window.requestAnimationFrame(focusDrawer);\n        }\n      });\n    })();\n  } else if (drawer.contains(document.activeElement)) {\n    const nextActiveElement = drawerToggles[0] || document.querySelector('main');\n    nextActiveElement?.focus({ preventScroll: true });\n  }\n};\n\n/**\n * Initialize custom Nautobot drawers mechanism.\n * @returns {void} Do not return any value, attach an event listener.\n */\nexport const initializeDrawers = () => {\n  // Using event delegation pattern here to avoid re-creating listeners each time DOM is modified.\n  document.addEventListener('click', (event) => {\n    const dismiss = event.target.closest('[data-nb-dismiss]');\n    const toggle = event.target.closest('[data-nb-toggle]');\n\n    if (dismiss?.dataset.nbDismiss === 'drawer') {\n      toggleDrawer(dismiss.closest(`.${DRAWER_CLASS}`), false);\n    } else if (toggle?.dataset.nbToggle === 'drawer') {\n      toggleDrawer(document.querySelector(toggle.dataset.nbTarget));\n    }\n  });\n};\n","/**\n * This function is heavily inspired by React `createElement`. Its purpose is to remove some boilerplate code otherwise\n * required for creating new HTML elements.\n * @example\n * // Create `row` and `col` elements with a valid parent-child relationship.\n * const child = createElement('div', { className: 'col' });\n * const parent = createElement('div', { className: 'row' }, child);\n * @param {string} tag - HTML element tag name to be passed to `document.createElement` function.\n * @param {object} [attributes={}] - Object containing HTML element attributes to be set on newly created HTML element.\n *   `class` attribute is a special case in which `className` property name can be optionally used in order to avoid\n *   ambiguation with JavaScript reserved `class` keyword.\n * @param {(HTMLElement|string)} [children] - HTML elements or string values to become newly created element children.\n * @returns {HTMLElement} New HTML element. Append it to an existing DOM node if you want it to appear in browser.\n */\nexport const createElement = (tag, attributes = {}, ...children) => {\n  const element = document.createElement(tag);\n\n  Object.entries(attributes).forEach(([attribute, value]) =>\n    element.setAttribute(attribute === 'className' ? 'class' : attribute, value),\n  );\n\n  children.forEach((child) =>\n    typeof child === 'string' ? element.insertAdjacentText('beforeend', child) : element.appendChild(child),\n  );\n\n  return element;\n};\n\n/**\n * Remove all classes from given element, optionally excluding some explicitly.\n * @example\n * // Remove all classes except `container-fluid` from given element.\n * removeElementClasses(element, 'container-fluid');\n * @param {HTMLElement} element - HTML element which classes are to be removed.\n * @param {string} [ignore] - Classes to ignore during class removal, i.e. should be left as-is.\n * @returns {void} Do not return any value, modify existing HTML element in-place.\n */\nexport const removeElementClasses = (element, ...ignore) =>\n  [...element.classList.entries()]\n    .filter(([, className]) => !ignore.includes(className))\n    .forEach(([, className]) => element.classList.remove(className));\n","import * as bootstrap from 'bootstrap';\nimport { createElement, removeElementClasses } from './utils.js';\n\nconst TABS_HIDDEN_CLASSES = ['invisible', 'position-absolute'];\n\n/**\n * Collapse wrapped tabs to dropdown menu in given tab container.\n * @param {HTMLElement} tabs - Tab container HTML element.\n * @returns {void} Do not return any value, modify DOM instead.\n */\nexport const collapseTabs = (tabs) => {\n  const tabsParent = tabs.parentNode;\n\n  // Remove existing tab clones to prevent duplicates because they will be created from scratch below if needed.\n  [...tabsParent.querySelectorAll('.nav.nav-tabs[data-clone=\"true\"]')].forEach((tabsClone) => tabsClone.remove());\n\n  // For safety, do not operate on original tabs element, deep clone tabs to operate on its clone instead.\n  const tabsClone = tabs.cloneNode(true);\n\n  // Remove `id` element attribute from cloned tabs element to avoid potential `id` conflicts.\n  tabsClone.removeAttribute('id');\n\n  // Set `data-clone` attribute to `\"true\"` on tabs clone element to be able to easily distinguish it from the original.\n  tabsClone.dataset.clone = 'true';\n\n  /*\n   * Add following classes to cloned element to:\n   *   1. Make tabs span across the whole required width without wrapping.\n   *   2. Force them to be (temporarily) invisible.\n   */\n  const tabsCloneTemporaryClasses = ['flex-nowrap', 'invisible', 'position-absolute', 'z-n1'];\n  tabsClone.classList.add(...tabsCloneTemporaryClasses);\n\n  // Append currently invisible cloned tabs to DOM right after the original tabs element.\n  tabs.nextSibling ? tabsParent.insertBefore(tabsClone, tabs.nextSibling) : tabsParent.appendChild(tabsClone);\n\n  // Excessive tabs should be collapsed if tabs clone is wider than the original. Remember - clone does not wrap.\n  const shouldCollapseTabs = () => tabsClone.getBoundingClientRect().width > tabs.getBoundingClientRect().width;\n\n  // If there is no need to collapse tabs, show original tabs (if previously hidden) clean up tabs clone and `return` early.\n  if (!shouldCollapseTabs()) {\n    tabs.classList.remove(...TABS_HIDDEN_CLASSES);\n    tabsParent.removeChild(tabsClone);\n    return;\n  }\n\n  /*\n   * Compose dropdown element. Ignore dropdown items for now, they will be added to the dropdown menu soon anyway. The\n   * most important thing about this step is to append dropdown with visible toggle button at the end of cloned tabs\n   * list to reach maximum width (dropdown toggle has considerable size too) before starting to actually collapse tabs.\n   */\n  const dropdownMenu = createElement('ul', { className: 'dropdown-menu' });\n  const dropdownToggleIcon = createElement('span', { className: 'mdi mdi-menu' });\n  const dropdownToggleLabel = createElement('span', { className: 'visually-hidden' }, 'Toggle Dropdown');\n  const dropdownToggle = createElement(\n    'button',\n    {\n      'aria-expanded': 'false',\n      className: 'btn dropdown-toggle text-secondary',\n      'data-bs-toggle': 'dropdown',\n      type: 'button',\n    },\n    dropdownToggleIcon,\n    dropdownToggleLabel,\n  );\n  const dropdown = createElement(\n    'li',\n    { className: 'dropdown flex-grow-1 mb-n1 text-end' },\n    dropdownToggle,\n    dropdownMenu,\n  );\n  tabsClone.appendChild(dropdown);\n\n  /*\n   * Identify tabs that require collapsing by taking out one by one from the right-hand side until tabs width can fit\n   * inside its parent container. Essentially, overflowing tabs are moved from tab list to future dropdown menu.\n   */\n  const collapsedTabs = [];\n  while (shouldCollapseTabs()) {\n    const lastTab = dropdown.previousElementSibling; // With dropdown appended to DOM, its previous siblings are tabs.\n    collapsedTabs.unshift(lastTab); // Use `unshift` instead of `push` because this loop is iterating backward in a sense.\n    tabsClone.removeChild(lastTab);\n  }\n\n  /*\n   * Properly convert collapsed tabs to dropdown items:\n   *   1. Remove all `<li>` `nav-item` element classes.\n   *   2. Remove all `<a>` `nav-link` element classes other than `active` and `disabled` to maintain valid tab state.\n   *   3. Add `dropdown-item` class to `<a>` element (formerly `nav-link`).\n   *   4. Append collapsed tab to dropdown menu.\n   */\n  collapsedTabs.forEach((collapsedTab) => {\n    removeElementClasses(collapsedTab);\n\n    [...collapsedTab.children].forEach((navLink) => {\n      removeElementClasses(navLink, 'active', 'disabled');\n      navLink.classList.add('dropdown-item', 'justify-content-between');\n    });\n\n    dropdownMenu.appendChild(collapsedTab);\n  });\n\n  /*\n   * Tabs clone with collapsed tabs is now ready to be swapped with original. The only thing left to do is to\n   * make it synchronize its state back to the original.\n   */\n  [...tabsClone.querySelectorAll('a')].forEach((clonedTab) => {\n    clonedTab.addEventListener('shown.bs.tab', () => {\n      const originalTab = tabs.querySelector(`a[href=\"${clonedTab.getAttribute('href')}\"]`);\n      const originalTabInstance = bootstrap.Tab.getInstance(originalTab) || new bootstrap.Tab(originalTab);\n      originalTabInstance.show();\n    });\n  });\n\n  // Swap tabs clone with the original, in other words swap wrapped tabs with collapsed tabs.\n  tabs.classList.add(...TABS_HIDDEN_CLASSES);\n  tabsClone.classList.remove(...tabsCloneTemporaryClasses);\n};\n\n/**\n * Observe size changes of all tab containers on the page and collapse tabs inside of them if they wrap.\n * @example\n * // Run `collapseTabs` algorithm for all tabs on the page exactly once, i.e. observe and immediately unobserve.\n * const unobserveCollapseTabs = observeCollapseTabs();\n * unobserveCollapseTabs();\n * @returns {function(): void} Unobserve function - disconnect all resize observers created during function call.\n */\nexport const observeCollapseTabs = () => {\n  const resizeObservers = [...document.querySelectorAll('.nav.nav-tabs')].map((tabs) => {\n    const resizeObserver = new ResizeObserver(() => collapseTabs(tabs));\n    resizeObserver.observe(tabs);\n    return resizeObserver;\n  });\n\n  return () => resizeObservers.forEach((resizeObserver) => resizeObserver.disconnect());\n};\n","import '../scss/nautobot.scss';\n\nimport * as bootstrap from 'bootstrap';\nwindow.bootstrap = bootstrap;\n\nimport ClipboardJS from 'clipboard';\nwindow.ClipboardJS = ClipboardJS;\n\nimport flatpickr from 'flatpickr';\nwindow.flatpickr = flatpickr;\n\nimport hljs from 'highlight.js/lib/core';\nimport 'highlight.js/styles/github.css';\nimport graphql from 'highlight.js/lib/languages/graphql';\nimport json from 'highlight.js/lib/languages/json';\nimport xml from 'highlight.js/lib/languages/xml';\nimport yaml from 'highlight.js/lib/languages/yaml';\n\nhljs.registerLanguage('graphql', graphql);\nhljs.registerLanguage('json', json);\nhljs.registerLanguage('xml', xml);\nhljs.registerLanguage('yaml', yaml);\nwindow.hljs = hljs;\n\nimport jQuery from 'jquery';\nwindow.jQuery = jQuery;\nwindow.$ = window.jQuery;\n\nimport 'jquery-ui';\nimport 'select2';\n\nimport { initializeDraggable } from './draggable.js';\nimport { initializeDrawers } from './drawer.js';\nimport { observeCollapseTabs } from './tabs.js';\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  // Tooltips\n  // https://getbootstrap.com/docs/5.3/components/tooltips/#enable-tooltips\n  [...document.querySelectorAll('[data-bs-toggle=\"tooltip\"]')].forEach((tooltip) => new bootstrap.Tooltip(tooltip));\n\n  // Sidenav\n  document.querySelector('.sidenav-toggler').addEventListener('click', (event) => {\n    const toggler = event.currentTarget;\n\n    const controls = toggler.getAttribute('aria-controls');\n    const expanded = toggler.getAttribute('aria-expanded') === 'true';\n\n    toggler.setAttribute('aria-expanded', String(!expanded));\n\n    const sidenav = document.getElementById(controls);\n    sidenav.classList.toggle('sidenav-collapsed', expanded);\n  });\n\n  [...document.querySelectorAll('.sidenav-list-item')].forEach((sidenavListItem) => {\n    sidenavListItem.addEventListener('click', () => {\n      const controls = sidenavListItem.getAttribute('aria-controls');\n      const expanded = sidenavListItem.getAttribute('aria-expanded') === 'true';\n\n      sidenavListItem.setAttribute('aria-expanded', String(!expanded));\n\n      const onClickDocument = (documentClickEvent) => {\n        const { target: documentClickTarget } = documentClickEvent;\n        const sidenavFlyout = document.getElementById(controls);\n\n        const isClickOutside =\n          !sidenavListItem.contains(documentClickTarget) && !sidenavFlyout.contains(documentClickTarget);\n\n        if (isClickOutside) {\n          sidenavListItem.setAttribute('aria-expanded', 'false');\n          document.removeEventListener('click', onClickDocument);\n        }\n      };\n\n      expanded\n        ? document.removeEventListener('click', onClickDocument)\n        : document.addEventListener('click', onClickDocument);\n    });\n  });\n\n  // Draggable\n  initializeDraggable();\n\n  // Drawer\n  initializeDrawers();\n\n  // Tabs\n  /*\n   * TODO(norbert-mieczkowski-codilime): listen for proper event type(s) to re-initialize collapse tabs observers when\n   *   htmx dynamic content reloading is implemented. Said re-initialization should be as simple as something like:\n   *   ```js\n   *   let unobserveCollapseTabs = observeCollapseTabs();\n   *   document.body.addEventListener('htmx:xhr:loadend', () => unobserveCollapseTabs());\n   *   document.body.addEventListener('htmx:load', () => {\n   *     unobserveCollapseTabs = observeCollapseTabs();\n   *   });\n   *   ```\n   */\n  let unobserveCollapseTabs = observeCollapseTabs();\n\n  const toggleFavorite = (element, event) => {\n    if (event.detail.successful) {\n      element.classList.toggle('active');\n    }\n  };\n  window.toggleFavorite = toggleFavorite;\n\n  const setRequestUrl = (element, event) => {\n    const isFavorite = element.classList.contains('active');\n    event.detail.path = isFavorite ? element.dataset.deleteUrl : element.dataset.addUrl;\n  };\n  window.setRequestUrl = setRequestUrl;\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t825: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunknautobot\"] = self[\"webpackChunknautobot\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [68], () => (__webpack_require__(426)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","DRAGGABLE_CLASS","DRAGGABLE_CONTAINER_CLASS","DRAGGING_CLASS","DRAWER_OPEN_CLASS","toggleDrawer","drawer","force","classList","toggle","isOpen","contains","setAttribute","drawerToggles","document","querySelectorAll","id","forEach","drawerToggle","getElementsByClassName","filter","openDrawer","rafRetriesRemaining","window","requestAnimationFrame","focusDrawer","getComputedStyle","visibility","focus","activeElement","nextActiveElement","querySelector","preventScroll","createElement","tag","attributes","children","element","Object","entries","attribute","value","child","insertAdjacentText","appendChild","removeElementClasses","ignore","className","includes","remove","TABS_HIDDEN_CLASSES","bootstrap","ClipboardJS","flatpickr","registerLanguage","graphql","json","xml","yaml","hljs","jQuery","$","addEventListener","tooltip","event","toggler","currentTarget","controls","getAttribute","expanded","String","getElementById","sidenavListItem","onClickDocument","documentClickEvent","target","documentClickTarget","sidenavFlyout","removeEventListener","closest","createHandleOnMouseListener","isDraggable","handle","onMouseDown","onMouseUp","draggable","dataTransfer","clearData","setData","add","preventDefault","getData","container","insertBefore","dropDraggable","height","top","getBoundingClientRect","clientY","nextSibling","find","left","right","clientX","append","initializeDraggable","dismiss","dataset","nbDismiss","nbToggle","nbTarget","resizeObservers","map","tabs","resizeObserver","ResizeObserver","tabsParent","parentNode","tabsClone","cloneNode","removeAttribute","clone","tabsCloneTemporaryClasses","shouldCollapseTabs","width","removeChild","dropdownMenu","dropdownToggleIcon","dropdownToggleLabel","dropdownToggle","type","dropdown","collapsedTabs","lastTab","previousElementSibling","unshift","collapsedTab","navLink","clonedTab","originalTab","getInstance","show","collapseTabs","observe","observeCollapseTabs","toggleFavorite","detail","successful","setRequestUrl","isFavorite","path","deleteUrl","addUrl","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","keys","every","key","splice","r","d","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}