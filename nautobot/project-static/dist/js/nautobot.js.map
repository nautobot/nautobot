{"version":3,"file":"js/nautobot.js","mappings":"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","sources":["webpack://nautobot/webpack/runtime/chunk loaded","webpack://nautobot/./src/js/collapse.js","webpack://nautobot/./src/js/draggable.js","webpack://nautobot/./src/js/drawer.js","webpack://nautobot/./src/js/history.js","webpack://nautobot/./src/js/utils.js","webpack://nautobot/./src/js/search.js","webpack://nautobot/./src/js/select2.js","webpack://nautobot/./src/js/tabs.js","webpack://nautobot/./src/js/theme.js","webpack://nautobot/./src/js/nautobot.js","webpack://nautobot/./src/js/form.js","webpack://nautobot/webpack/bootstrap","webpack://nautobot/webpack/runtime/define property getters","webpack://nautobot/webpack/runtime/global","webpack://nautobot/webpack/runtime/hasOwnProperty shorthand","webpack://nautobot/webpack/runtime/make namespace object","webpack://nautobot/webpack/runtime/jsonp chunk loading","webpack://nautobot/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","/**\n * Initialize collapse toggle all buttons identified by `data-nb-toggle=\"collapse-all\"` data attribute. Collapse toggle\n * all buttons can be further configured with `data-nb-target=\"{collapse CSS selector}\"` data attribute specifying which\n * collapse elements they control. When not explicitly set, target collapse CSS selector falls back to `\".collapse\"`.\n * ---\n * Critical difference between this and default Bootstrap 5 collapse implementation is that Bootstrap only supports\n * toggling individual panel states without an option to toggle them collectively. See an explanation below:\n * Bootstrap 5 on \"Collapse All\" button click:  |  Nautobot on \"Collapse All\" button click:\n *   * X [expanded]  -> [collapsed]             |    * X [expanded]  -> [collapsed]\n *   * Y [collapsed] -> [expanded]              |    * Y [collapsed] -> [collapsed]\n *   * Z [expanded]  -> [collapsed]             |    * Z [expanded]  -> [collapsed]\n * ---\n * @returns {function(): void} Destructor function - remove all event listeners added during initialization.\n */\nexport const initializeCollapseToggleAll = () => {\n  const areAll = (collapseElements, collapsedOrExpanded) =>\n    collapseElements.every((element) => {\n      const isCollapsed = !element.classList.contains('show');\n      return collapsedOrExpanded === 'collapsed' ? isCollapsed : !isCollapsed;\n    });\n\n  const getCollapseToggleAllTargets = (collapseToggleAll) => [\n    ...document.querySelectorAll(collapseToggleAll.dataset.nbTarget || '.collapse'),\n  ];\n\n  const onClick = (event) => {\n    const collapseToggleAll = event.target.closest('[data-nb-toggle=\"collapse-all\"]');\n\n    if (collapseToggleAll) {\n      getCollapseToggleAllTargets(collapseToggleAll).forEach((collapse) => {\n        const collapseInstance = window.bootstrap.Collapse.getOrCreateInstance(collapse);\n        const shouldCollapse = collapseToggleAll.getAttribute('aria-expanded') === 'true';\n\n        if (shouldCollapse) {\n          collapseInstance.hide();\n        } else {\n          collapseInstance.show();\n        }\n      });\n    }\n  };\n\n  const onHiddenBsCollapse = () =>\n    [...document.querySelectorAll('[data-nb-toggle=\"collapse-all\"]')]\n      .filter((collapseToggleAll) => areAll(getCollapseToggleAllTargets(collapseToggleAll), 'collapsed'))\n      .forEach((collapseToggleAll) => {\n        collapseToggleAll.setAttribute('aria-expanded', 'false');\n        collapseToggleAll.textContent = 'Expand All';\n      });\n\n  const onShownBsCollapse = () =>\n    [...document.querySelectorAll('[data-nb-toggle=\"collapse-all\"]')]\n      .filter((collapseToggleAll) => areAll(getCollapseToggleAllTargets(collapseToggleAll), 'expanded'))\n      .forEach((collapseToggleAll) => {\n        collapseToggleAll.setAttribute('aria-expanded', 'true');\n        collapseToggleAll.textContent = 'Collapse All';\n      });\n\n  // Using event delegation pattern here to avoid re-creating listeners each time DOM is modified.\n  document.addEventListener('click', onClick);\n  document.addEventListener('hidden.bs.collapse', onHiddenBsCollapse);\n  document.addEventListener('shown.bs.collapse', onShownBsCollapse);\n\n  return () => {\n    document.removeEventListener('click', onClick);\n    document.removeEventListener('hidden.bs.collapse', onHiddenBsCollapse);\n    document.removeEventListener('shown.bs.collapse', onShownBsCollapse);\n  };\n};\n","const DRAGGABLE_CLASS = 'nb-draggable';\nconst DRAGGABLE_CONTAINER_CLASS = 'nb-draggable-container';\nconst DRAGGABLE_HANDLE_CLASS = 'nb-draggable-handle';\nconst DRAGGING_CLASS = 'nb-dragging';\n\nexport const initializeDraggable = () => {\n  const closest = (element, className) => element?.closest?.(`.${className}`);\n\n  const createHandleOnMouseListener = (isDraggable) => (event) => {\n    const handle = closest(event.target, DRAGGABLE_HANDLE_CLASS);\n    if (handle) {\n      const draggable = closest(handle, DRAGGABLE_CLASS);\n      draggable.setAttribute('draggable', String(isDraggable));\n    }\n  };\n\n  const onMouseDown = createHandleOnMouseListener(true);\n  const onMouseUp = createHandleOnMouseListener(false);\n\n  const onDragStart = (event) => {\n    const draggable = closest(event.target, DRAGGABLE_CLASS);\n    if (draggable) {\n      event.dataTransfer.clearData('text/plain');\n      event.dataTransfer.setData('text/plain', event.target.id);\n      draggable.classList.add(DRAGGING_CLASS);\n    }\n  };\n\n  const onDragEnd = (event) => {\n    const draggable = closest(event.target, DRAGGABLE_CLASS);\n    if (draggable) {\n      draggable.classList.remove(DRAGGING_CLASS);\n      draggable.setAttribute('draggable', 'false');\n    }\n  };\n\n  const onDragOver = (event) => {\n    const draggableContainer = closest(event.target, DRAGGABLE_CONTAINER_CLASS);\n    if (draggableContainer) {\n      event.preventDefault();\n    }\n  };\n\n  const onDrop = (event) => {\n    const draggable = document.getElementById(event.dataTransfer.getData('text/plain'));\n    if (draggable) {\n      event.preventDefault();\n\n      const container = closest(draggable, DRAGGABLE_CONTAINER_CLASS);\n\n      const insertBefore = (() => {\n        // Were we dropped onto another draggable?\n        const dropDraggable = closest(event.target, DRAGGABLE_CLASS);\n        if (dropDraggable) {\n          /*\n           * Were we dropped in the top half or the bottom half of the target draggable?\n           *   - Top half - insert before that draggable.\n           *   - Bottom half - insert after that draggable.\n           */\n          const { height, top } = dropDraggable.getBoundingClientRect();\n          const isTopHalf = event.clientY < top + height / 2;\n          return isTopHalf ? dropDraggable : dropDraggable.nextSibling;\n        }\n\n        // We were dropped into empty space - find the closest draggable by geometry.\n        return [...container.children].find((child) => {\n          const { left, right, top } = child.getBoundingClientRect();\n          // Are we in the correct column?\n          if (left > event.clientX) {\n            // Found the first child that is too far to the right, so we insert before that child.\n            return true;\n          } else if (right >= event.clientX) {\n            // Child is in the correct column.\n            if (top >= event.clientY) {\n              // Found the first child in this column we were dropped above, so we insert before that child.\n              return true;\n            }\n          }\n          return false;\n        });\n      })();\n\n      if (insertBefore) {\n        container.insertBefore(draggable, insertBefore);\n      } else {\n        // Add to end of the list.\n        container.append(draggable);\n      }\n\n      draggable.classList.add(DRAGGING_CLASS);\n    }\n  };\n\n  // Using event delegation pattern here to avoid re-creating listeners each time DOM is modified.\n  document.addEventListener('mousedown', onMouseDown);\n  document.addEventListener('mouseup', onMouseUp);\n  document.addEventListener('dragstart', onDragStart);\n  document.addEventListener('dragend', onDragEnd);\n  document.addEventListener('dragover', onDragOver);\n  document.addEventListener('drop', onDrop);\n};\n","const DRAWER_CLASS = 'nb-drawer';\nconst DRAWER_OPEN_CLASS = 'nb-drawer-open';\n\n/**\n * Toggle drawer element with an option to force open/close.\n * @param {HTMLElement} drawer - Drawer HTML element to be toggled.\n * @param {boolean} [force] - Optionally force opening (`true`) or closing (`false`) regardless of current state.\n * @returns {void} Do not return any value, modify existing HTML element in-place.\n */\nconst toggleDrawer = (drawer, force) => {\n  if (!drawer) {\n    return;\n  }\n\n  drawer.classList.toggle(DRAWER_OPEN_CLASS, force);\n\n  const isOpen = drawer.classList.contains(DRAWER_OPEN_CLASS);\n\n  drawer.setAttribute('aria-hidden', isOpen ? 'false' : 'true');\n\n  const drawerToggles = [...document.querySelectorAll(`[data-nb-toggle=\"drawer\"][data-nb-target=\"#${drawer.id}\"]`)];\n  drawerToggles.forEach((drawerToggle) => drawerToggle.setAttribute('aria-expanded', isOpen ? 'true' : 'false'));\n\n  /*\n   * Maintain proper element focus when the drawer is:\n   *   1. Open - focus the drawer as soon as it becomes visible and focusable.\n   *   2. Closed - in case focus is within the drawer move it back to the first found drawer toggle and, if not\n   *     available, the `main` element instead.\n   */\n  if (isOpen) {\n    // Close other open drawers if there are any. Effectively, this allows only one drawer to be open at a time.\n    const openDrawers = document.getElementsByClassName(DRAWER_OPEN_CLASS);\n    [...openDrawers]\n      .filter((openDrawer) => openDrawer !== drawer)\n      .forEach((openDrawer) => toggleDrawer(openDrawer, false));\n\n    (() => {\n      let rafRetriesRemaining = 100; // In case something goes wrong prevent falling into an infinite loop.\n\n      // Use `requestAnimationFrame` to wait until drawer becomes visible and focusable.\n      window.requestAnimationFrame(function focusDrawer() {\n        const isDrawerVisible = window.getComputedStyle(drawer).visibility === 'visible';\n\n        if (isDrawerVisible) {\n          drawer.focus();\n        } else if (rafRetriesRemaining > 0) {\n          rafRetriesRemaining -= 1;\n          window.requestAnimationFrame(focusDrawer);\n        }\n      });\n    })();\n  } else if (drawer.contains(document.activeElement)) {\n    const nextActiveElement = drawerToggles[0] || document.querySelector('main');\n    nextActiveElement?.focus({ preventScroll: true });\n  }\n\n  const event = isOpen ? 'nb-drawer:opened' : 'nb-drawer:closed';\n  drawer.dispatchEvent(new CustomEvent(event, { bubbles: true, cancelable: true }));\n};\n\n/**\n * Initialize custom Nautobot drawers mechanism.\n * @returns {void} Do not return any value, attach an event listener.\n */\nexport const initializeDrawers = () => {\n  // Using event delegation pattern here to avoid re-creating listeners each time DOM is modified.\n  document.addEventListener('nb-drawer:close', (event) => toggleDrawer(event.target, false));\n  document.addEventListener('nb-drawer:open', (event) => toggleDrawer(event.target, true));\n  document.addEventListener('nb-drawer:toggle', (event) => toggleDrawer(event.target));\n\n  document.addEventListener('nb-drawer:opened', (event) => {\n    if (event.target.id) {\n      const nextState = { ...window.history?.state, drawer: event.target.id };\n      const url = `${window.location.pathname}${window.location.search}${window.location.hash}`;\n      window.history?.replaceState(nextState, '', url);\n    }\n  });\n\n  document.addEventListener('nb-drawer:closed', () => {\n    // eslint-disable-next-line no-unused-vars\n    const { drawer, ...restState } =\n      typeof window.history?.state === 'object' && window.history.state !== null ? window.history.state : {};\n    const nextState = Object.keys(restState).length > 0 ? restState : null;\n    const url = `${window.location.pathname}${window.location.search}${window.location.hash}`;\n    window.history?.replaceState(nextState, '', url);\n  });\n\n  document.addEventListener('click', (event) => {\n    const dismiss = event.target.closest('[data-nb-dismiss]');\n    const toggle = event.target.closest('[data-nb-toggle]');\n\n    if (dismiss?.dataset.nbDismiss === 'drawer') {\n      const drawer = dismiss.closest(`.${DRAWER_CLASS}`);\n      drawer?.dispatchEvent(new CustomEvent(`nb-drawer:close`, { bubbles: true, cancelable: true }));\n    } else if (toggle?.dataset.nbToggle === 'drawer') {\n      const drawer = document.querySelector(toggle.dataset.nbTarget);\n      drawer?.dispatchEvent(new CustomEvent(`nb-drawer:toggle`, { bubbles: true, cancelable: true }));\n    }\n  });\n\n  if (window.history?.state?.drawer) {\n    document\n      .getElementById(window.history.state.drawer)\n      ?.dispatchEvent(new CustomEvent('nb-drawer:open', { bubbles: true, cancelable: true }));\n  }\n};\n","const SESSION_STORAGE_KEY = 'historyState';\n\n/**\n * Load last saved history state from `sessionStorage`.\n *\n * *The idea behind this and `saveState` function below is to be able to maintain history state between history entries\n * separated by a full document reload caused by navigation or form submission. Browsers do not export any native API\n * to manage history state in said scenario, so the workaround is to call `saveState` before full document reload and\n * then `loadState` after the document is loaded back again. `saveState` must be called on demand by arbitrary logic,\n * whereas `loadState` is executed automatically by the main `nautobot.js` script and should not be called manually.*\n *\n * @returns {void} Do not return any value, update current history entry with last saved state instead.\n */\nexport const loadState = () => {\n  const state = (() => {\n    try {\n      const item = window.sessionStorage?.getItem(SESSION_STORAGE_KEY);\n      return item ? JSON.parse(item) : undefined;\n      // eslint-disable-next-line no-unused-vars\n    } catch (exception) {\n      return undefined;\n    }\n  })();\n\n  if (state !== undefined) {\n    const url = `${window.location.pathname}${window.location.search}${window.location.hash}`;\n    window.history?.replaceState(state, '', url);\n    window.sessionStorage?.removeItem(SESSION_STORAGE_KEY);\n  }\n};\n\n/**\n * Save given state, or current history entry state if not explicitly passed, into `sessionStorage`.\n *\n * *The idea behind this and `loadState` function above is to be able to maintain history state between history entries\n * separated by a full document reload caused by navigation or form submission. Browsers do not export any native API\n * to manage history state in said scenario, so the workaround is to call `saveState` before full document reload and\n * then `loadState` after the document is loaded back again. `saveState` must be called on demand by arbitrary logic,\n * whereas `loadState` is executed automatically by the main `nautobot.js` script and should not be called manually.*\n *\n * @param {object|null} [state] - Optional `state` object to be saved; current history entry state will be used if\n *   `state` is not explicitly passed. Use `null` to remove history state from `sessionStorage`.\n * @returns {void} Do not return any value, save current history entry state into `sessionStorage` instead.\n */\nexport const saveState = (state) => {\n  const stateToSave = state === undefined ? window.history?.state : state;\n\n  if (stateToSave !== undefined) {\n    window.sessionStorage?.setItem(SESSION_STORAGE_KEY, JSON.stringify(stateToSave));\n  }\n};\n","/**\n * This function is heavily inspired by React `createElement`. Its purpose is to remove some boilerplate code otherwise\n * required for creating new HTML elements.\n * @example\n * // Create `row` and `col` elements with a valid parent-child relationship.\n * const child = createElement('div', { className: 'col' });\n * const parent = createElement('div', { className: 'row' }, child);\n * @param {string} tag - HTML element tag name to be passed to `document.createElement` function.\n * @param {object} [attributes={}] - Object containing HTML element attributes to be set on newly created HTML element.\n *   `class` attribute is a special case in which `className` property name can be optionally used in order to avoid\n *   ambiguation with JavaScript reserved `class` keyword.\n * @param {(HTMLElement|string)} [children] - HTML elements or string values to become newly created element children.\n * @returns {HTMLElement} New HTML element. Append it to an existing DOM node if you want it to appear in browser.\n */\nexport const createElement = (tag, attributes = {}, ...children) => {\n  const element = document.createElement(tag);\n\n  Object.entries(attributes).forEach(([attribute, value]) =>\n    element.setAttribute(attribute === 'className' ? 'class' : attribute, value),\n  );\n\n  children.forEach((child) =>\n    typeof child === 'string' ? element.insertAdjacentText('beforeend', child) : element.appendChild(child),\n  );\n\n  return element;\n};\n\n/**\n * Remove all classes from given element, optionally excluding some explicitly.\n * @example\n * // Remove all classes except `container-fluid` from given element.\n * removeElementClasses(element, 'container-fluid');\n * @param {HTMLElement} element - HTML element which classes are to be removed.\n * @param {string} [ignore] - Classes to ignore during class removal, i.e. should be left as-is.\n * @returns {void} Do not return any value, modify existing HTML element in-place.\n */\nexport const removeElementClasses = (element, ...ignore) =>\n  [...element.classList.entries()]\n    .filter(([, className]) => !ignore.includes(className))\n    .forEach(([, className]) => element.classList.remove(className));\n\n/**\n * Convert `px` pixel value to `rem` units.\n * @example\n * // Convert `20` (`px`) to `rem`, return `1.25` (`rem`).\n * rem(20);\n * @param {number} px - Pixel value.\n * @returns {number} Given pixel value converted to `rem` units.\n */\nexport const rem = (px) => {\n  const rootFontSize = window.getComputedStyle(document.documentElement).fontSize;\n  return px / parseInt(rootFontSize, 10);\n};\n","import { createElement, rem } from './utils.js';\n\nconst FORM_CONTROL_PADDING_X = rem(12);\nconst GAP = rem(6);\nconst ICON_SIZE = rem(20);\n\nconst BASE_SEARCH_INPUT_PADDING_X = `${FORM_CONTROL_PADDING_X + ICON_SIZE + GAP}rem`;\n\nconst MAX_BADGE_COUNT = 1;\n\nexport const initializeSearch = () => {\n  const headerSearch = document.getElementById('header_search');\n\n  // Do nothing and `return` early when there is no `#header_search` element in the page.\n  if (!headerSearch) {\n    return () => {};\n  }\n\n  const NAV_MENU = (() => {\n    try {\n      const navMenu = document.getElementById('nav_menu');\n      return navMenu ? JSON.parse(navMenu.textContent) : {};\n      // eslint-disable-next-line no-unused-vars\n    } catch (exception) {\n      return {};\n    }\n  })();\n\n  /*\n   * Pick only the lowest level of nested `nav_menu` object. In TypeScript, it would be manifested as the following type:\n   * `{ [item_link: string]: { name: string; weight: number } };`.\n   */\n  const SEARCHABLE_MODELS = Object.fromEntries(\n    Object.entries(NAV_MENU.tabs).flatMap(([, tab_details]) =>\n      Object.entries(tab_details.groups).flatMap(([, group_details]) =>\n        Object.entries(group_details.items).map(([item_link, item_details]) => [item_link, item_details]),\n      ),\n    ),\n  );\n\n  const BADGE_REG_EXP = new RegExp(\n    `^\\\\s*in\\\\s*:\\\\s*(${Object.entries(SEARCHABLE_MODELS)\n      // Extend simple vanilla model name match with more word delimiter variants (or no word delimiters at all).\n      .flatMap(([, { name }]) => [name, ...['', '_', '\\\\-'].map((delimiter) => name.replace(/\\s+/g, delimiter))])\n      .join('|')})\\\\s+`,\n    'i',\n  );\n\n  const headerSearchInput = headerSearch.querySelector('input');\n\n  const closeSearchPopup = () => {\n    const searchPopup = document.getElementById('search_popup');\n\n    if (searchPopup) {\n      searchPopup.remove();\n      document.body.classList.toggle('overflow-y-hidden', false);\n    }\n  };\n\n  // Focus search input on Cmd+K or Ctrl+K shortcut and close search popup on Escape.\n  const onKeyDown = (event) => {\n    const isPressedCmd = event.getModifierState?.('Meta');\n    const isPressedCtrl = event.ctrlKey;\n\n    if ((isPressedCmd || isPressedCtrl) && event.key === 'k') {\n      event.preventDefault();\n      headerSearchInput.focus();\n    } else if (event.key === 'Escape') {\n      closeSearchPopup();\n    }\n  };\n\n  document.addEventListener('keydown', onKeyDown);\n\n  const openSearchPopup = () => {\n    const searchPopup = document.getElementById('search_popup');\n\n    // Just focus an existing search popup `input` and `return` early if `#searchPopup` is already open.\n    if (searchPopup) {\n      const input = searchPopup.querySelector('input');\n      input?.focus();\n      input?.setSelectionRange(-1, -1);\n      return;\n    }\n\n    document.body.classList.toggle('overflow-y-hidden', true);\n\n    const { left: mainLeft = 0, right: mainRight = 0 } = document.querySelector('main')?.getBoundingClientRect() ?? {};\n    const { top: headerSearchInputTop } = headerSearchInput.getBoundingClientRect();\n\n    const icon = createElement('span', {\n      'aria-hidden': 'true',\n      className:\n        'mdi mdi-magnify d-inline-flex ms-12 mt-6 pe-none position-absolute start-0 text-secondary top-0 user-select-none',\n      style: `height: ${ICON_SIZE}rem; width: ${ICON_SIZE}rem;`,\n    });\n\n    const badges = createElement('span', {\n      className: 'd-inline-flex gap-6 left-0 my-6 position-absolute top-0',\n      style: `left: ${BASE_SEARCH_INPUT_PADDING_X};`,\n    });\n\n    const input = createElement('input', {\n      className: 'form-control w-100',\n      name: 'q',\n      required: 'true',\n      style: `padding-inline: ${BASE_SEARCH_INPUT_PADDING_X};`,\n      type: 'search',\n      value: headerSearchInput.value,\n    });\n\n    const clear = createElement(\n      'button',\n      {\n        className: `btn mdi mdi-close bg-transparent border-0 end-0 hstack justify-content-center me-12 mt-6 p-0 position-absolute text-secondary top-0 nb-transition-base${input.value === '' ? ' invisible opacity-0' : ''}`,\n        style: `height: ${ICON_SIZE}rem; width: ${ICON_SIZE}rem;`,\n        type: 'button',\n      },\n      createElement('span', { className: 'visually-hidden' }, 'Clear'),\n    );\n\n    clear.addEventListener('click', () => {\n      input.value = '';\n      input.dispatchEvent(new InputEvent('input'));\n      input.focus();\n    });\n\n    input.addEventListener('input', () => {\n      const shouldHideClear = input.value === '';\n      clear.classList.toggle('invisible', shouldHideClear);\n      clear.classList.toggle('opacity-0', shouldHideClear);\n    });\n\n    const submit = createElement('input', { className: 'd-none', type: 'submit' });\n\n    const form = createElement(\n      'form',\n      { action: headerSearch.getAttribute('action'), className: 'position-relative w-100', role: 'search' },\n      icon,\n      badges,\n      input,\n      clear,\n      submit,\n    );\n\n    /* In case there is no badge, use global search. Otherwise, navigate to badge specific model list view. */\n    form.addEventListener('submit', () => {\n      const badge = form.querySelector('[data-nb-link]:last-child');\n\n      if (badge) {\n        form.setAttribute('action', badge.dataset.nbLink);\n      }\n    });\n\n    const results = createElement('div');\n\n    const popup = createElement(\n      'div',\n      { className: 'mx-auto w-100', style: `max-width: ${rem(720)}rem;` },\n      form,\n      results,\n    );\n\n    const overlay = createElement(\n      'div',\n      {\n        className: 'overflow-auto pb-20 position-fixed top-0 end-0 bottom-0 start-0 nb-z-modal-backdrop',\n        id: 'search_popup',\n        role: 'dialog',\n        style: `background-color: rgba(0, 0, 0, .5); padding-block-start: ${headerSearchInputTop}px; padding-inline-start: calc(${mainLeft}px + ${rem(20)}rem); padding-inline-end: calc(100% - ${mainRight}px + ${rem(20)}rem);`,\n      },\n      popup,\n    );\n\n    // Close search popup on direct overlay click.\n    overlay.addEventListener('click', (event) => {\n      if (event.target === overlay) {\n        closeSearchPopup();\n      }\n    });\n\n    document.body.appendChild(overlay);\n\n    const addBadge = (link) => {\n      const name = Object.entries(SEARCHABLE_MODELS).find(([item_link]) => item_link === link)?.[1]?.name ?? link;\n\n      const removeButton = createElement(\n        'button',\n        { type: 'button' },\n        createElement('span', { 'aria-hidden': 'true', class: 'mdi mdi-close' }),\n        createElement('span', { class: 'visually-hidden' }, 'Remove'),\n      );\n\n      const badge = createElement(\n        'span',\n        { className: 'badge border', 'data-nb-link': link },\n        `in: ${name}`,\n        removeButton,\n      );\n\n      removeButton.addEventListener('click', () => {\n        badge.remove();\n        input.focus();\n      });\n\n      // Before adding a new badge, remove existing badges with the same `link` to prevent duplicates.\n      [...badges.querySelectorAll(`[data-nb-link=\"${link}\"]`)].forEach((existing) => existing.remove());\n\n      badges.appendChild(badge);\n\n      // Obey the `MAX_BADGE_COUNT` constraint.\n      [...badges.children].slice(0, -1 * MAX_BADGE_COUNT).forEach((child) => child.remove());\n    };\n\n    // Recalculate search input left padding when badges container size changes, i.e. a badge is added or removed.\n    const resizeObserver = new ResizeObserver(() => {\n      const { width } = badges.getBoundingClientRect();\n      input.style.paddingInlineStart = width\n        ? `calc(${BASE_SEARCH_INPUT_PADDING_X} + ${width}px + ${GAP}rem)`\n        : BASE_SEARCH_INPUT_PADDING_X;\n    });\n\n    resizeObserver.observe(badges);\n\n    input.addEventListener('input', () => {\n      const match = input.value.match(BADGE_REG_EXP);\n\n      if (match) {\n        const [phrase, model] = match;\n\n        const normalize = (text) =>\n          text\n            .trim()\n            .toLowerCase()\n            .replace(/\\s|_|-/g, '');\n        const link = Object.entries(SEARCHABLE_MODELS).find(\n          ([, { name }]) => normalize(name) === normalize(model),\n        )?.[0];\n\n        if (link) {\n          // Remove phrase that matched the badge-specific regular expression and replace it with a corresponding badge.\n          input.value = input.value.replace(phrase, '');\n          input.dispatchEvent(new InputEvent('input'));\n          addBadge(link);\n        }\n      }\n    });\n\n    // Remove the first badge on the right-hand side when `'Backspace'` key is pressed on the input start position.\n    input.addEventListener('keydown', (event) => {\n      const isBackspace = event.key === 'Backspace';\n      const isInputStart = input.selectionEnd === 0 && input.selectionStart === 0;\n\n      if (isBackspace && isInputStart) {\n        badges.querySelector(':last-child')?.remove();\n      }\n    });\n\n    // When search popup is open, copy existing badges from `#header_search` to search popup input.\n    headerSearch.querySelectorAll('[data-nb-link]').forEach((badge) => addBadge(badge.dataset.nbLink));\n\n    // Automatically focus search popup input when opened and move cursor to the end of input field.\n    input.focus();\n    input.setSelectionRange(-1, -1);\n  };\n\n  headerSearchInput.addEventListener('focus', openSearchPopup);\n\n  return () => {\n    closeSearchPopup();\n    document.removeEventListener('keydown', onKeyDown);\n    headerSearchInput.removeEventListener('focus', openSearchPopup);\n  };\n};\n","import get from 'lodash.get';\n\n/**\n * Get HTML `element`. This function accepts input as native `Document` and `Element` object and `jQuery` collection.\n * It should no longer be required after migrating away from jQuery.\n * @param {Document|Element|jQuery} `element` - `element` in question.\n * @returns {Document|Element} Native `element` object.\n */\nconst getElement = (element) => (element instanceof Document || element instanceof Element ? element : element[0]);\n\n/**\n * Get `select` element value.\n * @param {HTMLSelectElement} select - `select` element in question.\n * @returns {string|string[]} `string` value for single combobox, an array of `string` values for multiple combobox.\n */\nconst getValue = (select) =>\n  select?.getAttribute('multiple') === null ? select?.value : [...select.selectedOptions].map((option) => option.value);\n\n/**\n * Set Select2 combobox value(s).\n * @param {HTMLSelectElement} select2 - Select2 combobox HTML element.\n * @param {{ text: string, value: string }[]|null} value - Array of objects containing `text` and `value` key-value\n *   pairs; `null` to reset the field value.\n */\nexport const setSelect2Value = (select2, value) => {\n  $(select2).val(null);\n\n  (value ?? []).forEach((attributes) => {\n    if (!select2.querySelector(`option[value=\"${attributes.value}\"]`)) {\n      const option = document.createElement('option');\n      option.innerText = attributes.text;\n      option.setAttribute('selected', 'true');\n      option.setAttribute('value', attributes.value);\n      select2.appendChild(option);\n    }\n  });\n\n  const nextValue = (() => {\n    if (value.length > 0) {\n      const isMultiple = select2?.getAttribute('multiple') !== null;\n      return isMultiple ? value.map((attributes) => attributes.value) : value?.[0]?.value;\n    }\n\n    return null;\n  })();\n\n  $(select2).val(nextValue).trigger('change');\n};\n\n/**\n * Parse URLs which may contain variable references to other field values.\n * @param {string} url - URL template string.\n * @returns {string} URL with interpolated dynamic values.\n */\nconst parseURL = (url) => {\n  const filter_regex = /\\{\\{([a-z_]+)}}/g;\n\n  let match; // eslint-disable-line init-declarations\n  let rendered_url = url;\n\n  while ((match = filter_regex.exec(url))) {\n    const filter_field = document.querySelector(`#id_${match[1]}`);\n    const custom_attribute = filter_field?.selectedOptions?.[0]?.getAttribute('api-value');\n    const replace =\n      custom_attribute || filter_field.value || (filter_field.getAttribute('data-null-option') ? 'null' : undefined);\n\n    rendered_url = replace ? rendered_url.replace(match[0], replace) : rendered_url;\n  }\n\n  return rendered_url;\n};\n\n/**\n * Initialize given Select2 components in passed `context` by `selector`, optionally with `options`.\n * @param {Document|Element|jQuery} context - Context root element.\n * @param {string} selector - CSS query selector of `select` elements to be initialized as Select2 components.\n * @param {object} [options] - Optional Select2 components initialization options.\n * @returns {void} Do not return any value, just initialize given Select2 components.\n */\nconst initializeSelect2 = (context, selector, options) =>\n  [...getElement(context).querySelectorAll(selector)].forEach((element) =>\n    $(element).select2({\n      allowClear: true,\n      placeholder: element.getAttribute('placeholder') || '---------',\n      selectionCssClass: 'select2--small',\n      theme: 'bootstrap-5',\n      width: 'off',\n      ...options,\n    }),\n  );\n\nconst initializeColorPicker = (context, dropdownParent = null) => {\n  // Assign color picker selection classes.\n  const colorPickerClassCopy = (data, container) => {\n    if (data.element) {\n      // Swap the style.\n      const containerElement = getElement(container);\n      containerElement.setAttribute('style', data.element.getAttribute('style'));\n    }\n\n    return data.text;\n  };\n\n  initializeSelect2(context, '.nautobot-select2-color-picker', {\n    dropdownParent,\n    templateResult: colorPickerClassCopy,\n    templateSelection: colorPickerClassCopy,\n  });\n};\n\nconst initializeDynamicChoiceSelection = (context, dropdownParent = null) => {\n  initializeSelect2(context, '.nautobot-select2-api', {\n    ajax: {\n      data: function data(params) {\n        const [element] = this;\n\n        // Paging. Note that `params.page` indexes at 1.\n        const offset = (params.page - 1) * 50 || 0;\n\n        // Base query params.\n        const limit = 50;\n        const q = params.term;\n\n        // Get search query param name, defaults to `'q'`.\n        const search_field = element.getAttribute('search-field') || 'q';\n\n        // Set api_version.\n        const api_version = element.getAttribute('data-api-version');\n\n        // Allow for controlling the depth setting from within APISelect.\n        const depth = parseInt(element.getAttribute('data-depth'), 10) || 0;\n\n        // Attach content_type to parameters.\n        const content_type = element.getAttribute('data-contenttype');\n\n        // Attach any extra query parameters\n        const extra_query_parameters = Object.fromEntries(\n          [...element.attributes]\n            .filter((attribute) => attribute.name.includes('data-query-param-'))\n            .flatMap((attribute) => {\n              const [, param_name] = attribute.name.split('data-query-param-');\n\n              const values = (() => {\n                try {\n                  return JSON.parse(attribute.value);\n                  // eslint-disable-next-line no-unused-vars\n                } catch (exception) {\n                  return [];\n                }\n              })();\n\n              return values.flatMap((value) => {\n                const has_ref_field = value.startsWith('$');\n\n                // Referencing the value of another form field.\n                const ref_field = has_ref_field\n                  ? (() => {\n                      const name = value.slice(1);\n\n                      if (element.id.includes('id_form-')) {\n                        const [id_prefix] = element.id.match(/id_form-[0-9]+-/i, '');\n                        return document.querySelector(`#${id_prefix}${name}`);\n                      }\n\n                      /*\n                       * If the element is in a table row with a class containing \"dynamic-formset\" we need to find the\n                       * reference field in the same row.\n                       */\n                      if (element.closest('tr')?.classList.contains('dynamic-formset')) {\n                        return element.closest('tr').querySelector(`select[id*=\"${name}\"]`);\n                      }\n\n                      return document.querySelector(`#id_${name}`);\n                    })()\n                  : null;\n\n                const ref_field_value = ref_field\n                  ? (() => {\n                      const field_value = getValue(ref_field);\n                      const style = window.getComputedStyle(ref_field);\n\n                      if (field_value && style.opacity !== '0' && style.visibility !== 'hidden') {\n                        return field_value;\n                      }\n\n                      if (ref_field.getAttribute('required') && ref_field.getAttribute('data-null-option')) {\n                        return 'null';\n                      }\n\n                      return undefined;\n                    })()\n                  : null;\n\n                const param_value = has_ref_field ? ref_field_value : value;\n                return param_value !== null && param_value !== undefined\n                  ? [[param_name, ref_field_value || value]]\n                  : [];\n              });\n            }),\n        );\n\n        const parameters = {\n          depth: String(depth),\n          limit: String(limit),\n          offset: String(offset),\n          ...(api_version ? { api_version } : undefined),\n          ...(content_type ? { content_type } : undefined),\n          ...(q ? { [search_field]: q } : undefined),\n          ...extra_query_parameters,\n        };\n\n        // This will handle params with multiple values (i.e. for list filter forms).\n        return new URLSearchParams(parameters).toString();\n      },\n      delay: 500,\n      processResults: function processResults(data) {\n        const [element] = this.$element;\n        [...element.querySelectorAll('option')].forEach((child) => child.removeAttribute('disabled'));\n\n        const results = [\n          // Handle the null option, but only add it once.\n          ...(element.getAttribute('data-null-option') && data.previous === null\n            ? [{ id: 'null', text: element.getAttribute('data-null-option') }]\n            : []),\n          ...Object.values(\n            data.results.reduce((accumulator, record, index) => {\n              // The disabled-indicator equated to true, so we disable this option.\n              const disabled = Boolean(record?.[element.getAttribute('disabled-indicator')]);\n              const id = get(record, element.getAttribute('value-field')) || record.id;\n              const text = get(record, element.getAttribute('display-field')) || record.name;\n\n              const item = { ...record, disabled, id, text };\n              const { group, site, url } = item;\n\n              /*\n               * `DynamicGroupSerializer` has a `children` field which fits an inappropriate if condition in\n               * `select2.min.js`, which will result in the incorrect rendering of `DynamicGroup` `DynamicChoiceField`.\n               * So we nullify the field here since we do not need this field.\n               */\n              const should_nullify_children = Boolean(url?.includes('dynamic-groups'));\n\n              const collection = (() => {\n                switch (true) {\n                  case group !== undefined && group !== null && site !== undefined && site !== null:\n                    return { property: `${site.name}:${group.name}`, text: `${site.name} / ${group.name}` };\n\n                  case group !== undefined && group !== null:\n                    return { property: group.name, text: group.name };\n\n                  case site !== undefined && site !== null:\n                    return { property: site.name, text: site.name };\n\n                  case group === null && site === null:\n                    return { property: 'global', text: 'Global' };\n\n                  default:\n                    return undefined;\n                }\n              })();\n\n              return {\n                ...accumulator,\n                ...(collection\n                  ? {\n                      [collection.property]: {\n                        ...accumulator[collection.property],\n                        ...(accumulator[collection.property] ? undefined : { text: collection.text }),\n                        children: should_nullify_children\n                          ? undefined\n                          : [...(accumulator[collection.property]?.children ?? []), item],\n                      },\n                    }\n                  : { [index]: item }),\n              };\n            }, {}),\n          ),\n        ];\n\n        // Check if there are more results to page.\n        const has_next_page = data.next !== null;\n        return { pagination: { more: has_next_page }, results };\n      },\n      url: function url() {\n        const [element] = this;\n        const dataUrl = parseURL(element.getAttribute('data-url'));\n\n        // If URL is not fully rendered yet, abort the request.\n        return !dataUrl.includes('{{') && dataUrl;\n      },\n    },\n    dropdownParent,\n  });\n};\n\nconst initializeMultiValueChar = (context, dropdownParent = null) =>\n  initializeSelect2(context, '.nautobot-select2-multi-value-char', {\n    dropdownParent,\n    language: { noResults: () => 'Type something to add it as an option' },\n    multiple: true,\n    tags: true,\n  });\n\nconst initializeStaticChoiceSelection = (context, dropdownParent = null) =>\n  initializeSelect2(context, '.nautobot-select2-static', { dropdownParent });\n\nexport const initializeSelect2Fields = (context) => {\n  initializeColorPicker(context);\n  initializeDynamicChoiceSelection(context);\n  initializeMultiValueChar(context);\n  initializeStaticChoiceSelection(context);\n\n  [...getElement(context).querySelectorAll('.modal')].forEach((modal) => {\n    initializeColorPicker(modal, modal);\n    initializeDynamicChoiceSelection(modal, modal);\n    initializeMultiValueChar(modal, modal);\n    initializeStaticChoiceSelection(modal, modal);\n  });\n};\n","import * as bootstrap from 'bootstrap';\nimport { createElement, removeElementClasses } from './utils.js';\n\nconst TABS_HIDDEN_CLASSES = ['invisible', 'position-absolute'];\n\n/**\n * Collapse wrapped tabs to dropdown menu in given tab container.\n * @param {HTMLElement} tabs - Tab container HTML element.\n * @returns {void} Do not return any value, modify DOM instead.\n */\nexport const collapseTabs = (tabs) => {\n  const tabsParent = tabs.parentNode;\n\n  // Remove existing tab clones to prevent duplicates because they will be created from scratch below if needed.\n  [...tabsParent.querySelectorAll('.nav.nav-tabs[data-clone=\"true\"]')].forEach((tabsClone) => tabsClone.remove());\n\n  // For safety, do not operate on original tabs element, deep clone tabs to operate on its clone instead.\n  const tabsClone = tabs.cloneNode(true);\n\n  // Remove `id` element attribute from cloned tabs element to avoid potential `id` conflicts.\n  tabsClone.removeAttribute('id');\n\n  // Set `data-clone` attribute to `\"true\"` on tabs clone element to be able to easily distinguish it from the original.\n  tabsClone.dataset.clone = 'true';\n\n  /*\n   * Add following classes to cloned element to:\n   *   1. Make tabs span across the whole required width without wrapping.\n   *   2. Force them to be (temporarily) invisible.\n   */\n  const tabsCloneTemporaryClasses = ['flex-nowrap', 'invisible', 'position-absolute', 'z-n1'];\n  tabsClone.classList.add(...tabsCloneTemporaryClasses);\n\n  // Append currently invisible cloned tabs to DOM right after the original tabs element.\n  if (tabs.nextSibling) {\n    tabsParent.insertBefore(tabsClone, tabs.nextSibling);\n  } else {\n    tabsParent.appendChild(tabsClone);\n  }\n  // Excessive tabs should be collapsed if tabs clone is wider than the original. Remember - clone does not wrap.\n  const shouldCollapseTabs = () => tabsClone.getBoundingClientRect().width > tabs.getBoundingClientRect().width;\n\n  // If there is no need to collapse tabs, show original tabs (if previously hidden) clean up tabs clone and `return` early.\n  if (!shouldCollapseTabs()) {\n    tabs.classList.remove(...TABS_HIDDEN_CLASSES);\n    tabsParent.removeChild(tabsClone);\n    return;\n  }\n\n  /*\n   * Compose dropdown element. Ignore dropdown items for now, they will be added to the dropdown menu soon anyway. The\n   * most important thing about this step is to append dropdown with visible toggle button at the end of cloned tabs\n   * list to reach maximum width (dropdown toggle has considerable size too) before starting to actually collapse tabs.\n   */\n  const dropdownMenu = createElement('ul', { className: 'dropdown-menu dropdown-menu-end' });\n  const dropdownToggleIcon = createElement('span', { className: 'mdi mdi-menu' });\n  const dropdownToggleLabel = createElement('span', { className: 'visually-hidden' }, 'Toggle Dropdown');\n  const dropdownToggle = createElement(\n    'button',\n    {\n      'aria-expanded': 'false',\n      className: 'btn dropdown-toggle text-secondary',\n      'data-bs-toggle': 'dropdown',\n      type: 'button',\n    },\n    dropdownToggleIcon,\n    dropdownToggleLabel,\n  );\n  const dropdown = createElement(\n    'li',\n    { className: 'dropdown flex-grow-1 mb-n1 text-end' },\n    dropdownToggle,\n    dropdownMenu,\n  );\n  tabsClone.appendChild(dropdown);\n\n  /*\n   * Identify tabs that require collapsing by taking out one by one from the right-hand side until tabs width can fit\n   * inside its parent container. Essentially, overflowing tabs are moved from tab list to future dropdown menu.\n   */\n  const collapsedTabs = [];\n  while (shouldCollapseTabs()) {\n    const lastTab = dropdown.previousElementSibling; // With dropdown appended to DOM, its previous siblings are tabs.\n    collapsedTabs.unshift(lastTab); // Use `unshift` instead of `push` because this loop is iterating backward in a sense.\n    tabsClone.removeChild(lastTab);\n  }\n\n  /*\n   * Properly convert collapsed tabs to dropdown items:\n   *   1. Remove all `<li>` `nav-item` element classes.\n   *   2. Remove all `<a>` `nav-link` element classes other than `active` and `disabled` to maintain valid tab state.\n   *   3. Add `dropdown-item` class to `<a>` element (formerly `nav-link`).\n   *   4. Append collapsed tab to dropdown menu.\n   */\n  collapsedTabs.forEach((collapsedTab) => {\n    removeElementClasses(collapsedTab);\n\n    [...collapsedTab.children].forEach((navLink) => {\n      removeElementClasses(navLink, 'active', 'disabled');\n      navLink.classList.add('dropdown-item', 'justify-content-between');\n    });\n\n    dropdownMenu.appendChild(collapsedTab);\n  });\n\n  /*\n   * Tabs clone with collapsed tabs is now ready to be swapped with original. The only thing left to do is to\n   * make it synchronize its state back to the original.\n   */\n  [...tabsClone.querySelectorAll('a')].forEach((clonedTab) => {\n    clonedTab.addEventListener('shown.bs.tab', () => {\n      const originalTab = tabs.querySelector(`a[href=\"${clonedTab.getAttribute('href')}\"]`);\n      const originalTabInstance = bootstrap.Tab.getInstance(originalTab) || new bootstrap.Tab(originalTab);\n      originalTabInstance.show();\n    });\n  });\n\n  // Swap tabs clone with the original, in other words swap wrapped tabs with collapsed tabs.\n  tabs.classList.add(...TABS_HIDDEN_CLASSES);\n  tabsClone.classList.remove(...tabsCloneTemporaryClasses);\n};\n\n/**\n * Observe size changes of all tab containers on the page and collapse tabs inside of them if they wrap.\n * @example\n * // Run `collapseTabs` algorithm for all tabs on the page exactly once, i.e. observe and immediately unobserve.\n * const unobserveCollapseTabs = observeCollapseTabs();\n * unobserveCollapseTabs();\n * @returns {function(): void} Unobserve function - disconnect all resize observers created during function call.\n */\nexport const observeCollapseTabs = () => {\n  const resizeObservers = [...document.querySelectorAll('.nav.nav-tabs')].map((tabs) => {\n    const resizeObserver = new ResizeObserver(() => collapseTabs(tabs));\n    resizeObserver.observe(tabs);\n    return resizeObserver;\n  });\n\n  return () => resizeObservers.forEach((resizeObserver) => resizeObserver.disconnect());\n};\n","const THEME_MODAL_ID = 'theme_modal';\n\nconst THEME_DARK = 'dark';\nconst THEME_LIGHT = 'light';\nconst THEME_SYSTEM = 'system';\n\n/**\n * Get preferred system color scheme.\n * @returns {('dark'|'light')} Preferred system color scheme.\n */\nconst getPreferredColorScheme = () =>\n  window.matchMedia?.(`(prefers-color-scheme: ${THEME_DARK})`).matches ? THEME_DARK : THEME_LIGHT;\n\n/**\n * Check if given `theme` is a valid Nautobot theme, i.e. `'dark'`, `'light'`, or `'system'`.\n * @param {string} theme - Theme in question.\n * @returns {boolean} `true` is given `theme` is a valid Nautobot theme, `false` otherwise.\n */\nconst isValidTheme = (theme) => theme === THEME_DARK || theme === THEME_LIGHT || theme === THEME_SYSTEM;\n\n/**\n * Automatically detect Nautobot theme. It is derived from `cookie` or `localStorage` if set manually, and falls back to\n * preferred system color scheme by default.\n * @returns {('dark'|'light'|'system')} Detected Nautobot theme.\n */\nconst detectTheme = () => {\n  // Cookie getter based on MDN example: https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie#example_2_get_a_sample_cookie_named_test2\n  const cookieTheme = document.cookie\n    .split('; ')\n    .find((cookie) => cookie.startsWith('theme='))\n    ?.split('=')[1];\n  if (isValidTheme(cookieTheme)) {\n    return cookieTheme;\n  }\n\n  const localStorageTheme = window.localStorage?.getItem('theme');\n  if (isValidTheme(localStorageTheme)) {\n    return localStorageTheme;\n  }\n\n  return THEME_SYSTEM;\n};\n\n/**\n * Set Nautobot theme.\n * @param {('dark'|'light'|'system')} theme - Nautobot theme to be set.\n * @param {{ manual?: boolean }} [options] - Setter function options object. Currently supported option is `manual`.\n * @returns {void} Do not return any value, set given `theme` and save it into a persistent store if `manual` is `true`.\n */\nconst setTheme = (theme, options) => {\n  const isManual = Boolean(options?.manual);\n\n  const modal = document.getElementById(THEME_MODAL_ID);\n  const buttons = modal?.querySelectorAll('button[data-nb-theme]') ?? [];\n\n  buttons.forEach((button) =>\n    ['border', 'border-primary'].forEach((className) =>\n      button.classList.toggle(className, button.dataset.nbTheme === theme),\n    ),\n  );\n\n  const bsTheme = theme === THEME_SYSTEM ? getPreferredColorScheme() : theme;\n  document.documentElement.dataset.theme = bsTheme;\n  document.documentElement.dataset.bsTheme = bsTheme;\n\n  if (theme === THEME_SYSTEM) {\n    document.cookie = `theme=${theme}; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT`;\n    window.localStorage?.removeItem('theme');\n  } else if (isManual) {\n    document.cookie = `theme=${theme}; path=/`;\n    window.localStorage?.setItem('theme', theme);\n  }\n\n  if (theme === THEME_DARK || (theme === THEME_SYSTEM && bsTheme === THEME_DARK)) {\n    [...document.getElementsByTagName('object')].forEach((object) => {\n      object.addEventListener('load', (event) => {\n        if (event.target.contentDocument) {\n          const images = event.target.contentDocument.getElementsByTagName('image');\n          const short_names = event.target.contentDocument.getElementsByClassName('rack-device-shortname');\n          const full_names = event.target.contentDocument.getElementsByClassName('rack-device-fullname');\n\n          [...images, ...short_names, ...full_names].forEach((rack_image) =>\n            rack_image.setAttribute('filter', 'url(#darkmodeinvert)'),\n          );\n        }\n      });\n    });\n  }\n\n  if (isManual) {\n    document.location.reload();\n  }\n};\n\nexport const initializeTheme = () => {\n  const modal = document.getElementById(THEME_MODAL_ID);\n  const buttons = modal?.querySelectorAll('button[data-nb-theme]') ?? [];\n\n  setTheme(detectTheme());\n  window.matchMedia(`(prefers-color-scheme: ${THEME_DARK})`).addEventListener('change', () => setTheme(detectTheme()));\n\n  const onClick = (event) => setTheme(event.currentTarget.dataset.nbTheme, { manual: true });\n  buttons.forEach((button) => button.addEventListener('click', onClick));\n\n  return () => buttons.forEach((button) => button.removeEventListener('click', onClick));\n};\n","/* eslint import/order: ['error', { alphabetize: { order: 'asc' }, 'newlines-between': 'ignore' }] */\n\nimport '../scss/nautobot.scss';\n\nimport * as bootstrap from 'bootstrap';\nwindow.bootstrap = bootstrap;\n\nimport ClipboardJS from 'clipboard';\nwindow.ClipboardJS = ClipboardJS;\n\nimport flatpickr from 'flatpickr';\nwindow.flatpickr = flatpickr;\n\nimport hljs from 'highlight.js/lib/core';\nimport 'highlight.js/styles/github.css';\nimport graphql from 'highlight.js/lib/languages/graphql';\nimport json from 'highlight.js/lib/languages/json';\nimport xml from 'highlight.js/lib/languages/xml';\nimport yaml from 'highlight.js/lib/languages/yaml';\n\nimport htmx from 'htmx.org';\nwindow.htmx = htmx;\n\nhljs.registerLanguage('graphql', graphql);\nhljs.registerLanguage('json', json);\nhljs.registerLanguage('xml', xml);\nhljs.registerLanguage('yaml', yaml);\nwindow.hljs = hljs;\n\nimport jQuery from 'jquery';\nwindow.jQuery = jQuery;\nwindow.$ = window.jQuery;\n\nimport 'jquery-ui';\nimport 'select2';\n\nimport { initializeCollapseToggleAll } from './collapse.js';\nimport { initializeDraggable } from './draggable.js';\nimport { initializeDrawers } from './drawer.js';\nimport { observeFormStickyFooters } from './form.js';\nimport { loadState, saveState } from './history.js';\nimport { initializeSearch } from './search.js';\nimport { initializeSelect2Fields, setSelect2Value } from './select2.js';\nimport { observeCollapseTabs } from './tabs.js';\nimport { initializeTheme } from './theme.js';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  window.nb ??= {};\n\n  // History\n  loadState();\n  window.nb.history = { saveState };\n  // Tooltips\n  // https://getbootstrap.com/docs/5.3/components/tooltips/#enable-tooltips\n  [...document.querySelectorAll('[data-bs-toggle=\"tooltip\"]')].forEach((tooltip) => new bootstrap.Tooltip(tooltip));\n\n  // Sidenav\n  document.querySelector('.nb-sidenav-toggler').addEventListener('click', (event) => {\n    const toggler = event.currentTarget;\n\n    const controls = toggler.getAttribute('aria-controls');\n    const expanded = toggler.getAttribute('aria-expanded') === 'true';\n\n    toggler.setAttribute('aria-expanded', String(!expanded));\n\n    const sidenav = document.getElementById(controls);\n    sidenav.classList.toggle('nb-sidenav-collapsed', expanded);\n  });\n\n  [...document.querySelectorAll('.nb-sidenav-list-item:not(.nb-flat)')].forEach((sidenavListItem) => {\n    sidenavListItem.addEventListener('click', () => {\n      const controls = sidenavListItem.getAttribute('aria-controls');\n      const expanded = sidenavListItem.getAttribute('aria-expanded') === 'true';\n\n      sidenavListItem.setAttribute('aria-expanded', String(!expanded));\n\n      const onClickDocument = (documentClickEvent) => {\n        const { target: documentClickTarget } = documentClickEvent;\n        const sidenavFlyout = document.getElementById(controls);\n\n        const isClickOutside =\n          !sidenavListItem.contains(documentClickTarget) && !sidenavFlyout.contains(documentClickTarget);\n\n        if (isClickOutside) {\n          sidenavListItem.setAttribute('aria-expanded', 'false');\n          document.removeEventListener('click', onClickDocument);\n        }\n      };\n\n      if (expanded) {\n        document.removeEventListener('click', onClickDocument);\n      } else {\n        document.addEventListener('click', onClickDocument);\n      }\n    });\n  });\n\n  const sidenavBranchPickerSelect = $('#sidenav-branch-picker-select');\n  sidenavBranchPickerSelect.on('change', (event) => event.currentTarget.form.submit());\n  sidenavBranchPickerSelect.on('select2:open', () => {\n    document.querySelector('.select2-dropdown').setAttribute('data-bs-theme', 'dark');\n    document.querySelector('.select2-dropdown .select2-search__field').setAttribute('placeholder', 'Find a branch...');\n  });\n\n  // Collapse\n  initializeCollapseToggleAll();\n\n  // Draggable\n  initializeDraggable();\n\n  // Drawer\n  initializeDrawers();\n\n  // Form\n  // TODO(norbert-mieczkowski-codilime): for htmx SPA-like behavior, re-initialize sticky footers like tabs below.\n  observeFormStickyFooters();\n\n  // Search\n  initializeSearch();\n\n  // Select2\n  window.nb.select2 = { initializeSelect2Fields, setSelect2Value };\n\n  // Tabs\n  /*\n   * TODO(norbert-mieczkowski-codilime): listen for proper event type(s) to re-initialize collapse tabs observers when\n   *   htmx dynamic content reloading is implemented. Said re-initialization should be as simple as something like:\n   *   ```js\n   *   let unobserveCollapseTabs = observeCollapseTabs();\n   *   document.body.addEventListener('htmx:xhr:loadend', () => unobserveCollapseTabs());\n   *   document.body.addEventListener('htmx:load', () => {\n   *     unobserveCollapseTabs = observeCollapseTabs();\n   *   });\n   *   ```\n   */\n  observeCollapseTabs();\n\n  // Theme\n  initializeTheme();\n\n  const toggleFavorite = (element, event) => {\n    if (event.detail.successful) {\n      element.classList.toggle('active');\n    }\n  };\n  window.toggleFavorite = toggleFavorite;\n\n  const setRequestUrl = (element, event) => {\n    const isFavorite = element.classList.contains('active');\n    event.detail.path = isFavorite ? element.dataset.deleteUrl : element.dataset.addUrl;\n  };\n  window.setRequestUrl = setRequestUrl;\n});\n","/**\n * Observe pinned state of elements of class `nb-form-sticky-footer` on the page and add drop shadow with `nb-is-pinned`\n * class if they are pinned. This is purely cosmetic and does not affect functionality.\n * @example\n * // Run form sticky footers observer algorithm exactly once, i.e. observe and immediately unobserve.\n * const unobserveFormStickyFooters = observeFormStickyFooters();\n * unobserveFormStickyFooters();\n * @returns {function(): void} Unobserve function - disconnect all resize observers created during function call.\n */\nexport const observeFormStickyFooters = () => {\n  // Form sticky footers pinned state detection with `IntersectionObserver` based on: https://stackoverflow.com/a/57991537.\n  const intersectionObserver = new IntersectionObserver(\n    ([entry]) => entry.target.classList.toggle('nb-is-pinned', entry.intersectionRatio < 1),\n    { threshold: [1] },\n  );\n\n  const formStickyFooters = [...document.querySelectorAll('.nb-form-sticky-footer')];\n  formStickyFooters.forEach((formStickyFooter) => intersectionObserver.observe(formStickyFooter));\n\n  return () => {\n    intersectionObserver.disconnect();\n  };\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t825: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunknautobot\"] = self[\"webpackChunknautobot\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [68], () => (__webpack_require__(190)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","DRAGGABLE_CLASS","DRAGGABLE_CONTAINER_CLASS","DRAGGING_CLASS","DRAWER_OPEN_CLASS","toggleDrawer","drawer","force","classList","toggle","isOpen","contains","setAttribute","drawerToggles","document","querySelectorAll","id","forEach","drawerToggle","getElementsByClassName","filter","openDrawer","rafRetriesRemaining","window","requestAnimationFrame","focusDrawer","getComputedStyle","visibility","focus","activeElement","nextActiveElement","querySelector","preventScroll","event","dispatchEvent","CustomEvent","bubbles","cancelable","SESSION_STORAGE_KEY","saveState","state","stateToSave","undefined","history","sessionStorage","setItem","JSON","stringify","createElement","tag","attributes","children","element","Object","entries","attribute","value","child","insertAdjacentText","appendChild","removeElementClasses","ignore","className","includes","remove","rem","px","rootFontSize","documentElement","fontSize","parseInt","FORM_CONTROL_PADDING_X","GAP","ICON_SIZE","BASE_SEARCH_INPUT_PADDING_X","getElement","Document","Element","setSelect2Value","select2","$","val","option","innerText","text","nextValue","length","getAttribute","map","trigger","initializeSelect2","context","selector","options","allowClear","placeholder","selectionCssClass","theme","width","initializeColorPicker","dropdownParent","colorPickerClassCopy","data","container","templateResult","templateSelection","initializeDynamicChoiceSelection","ajax","params","this","offset","page","q","term","search_field","api_version","depth","content_type","extra_query_parameters","fromEntries","name","flatMap","param_name","split","parse","exception","has_ref_field","startsWith","ref_field","slice","id_prefix","match","closest","ref_field_value","field_value","select","selectedOptions","style","opacity","param_value","parameters","String","limit","URLSearchParams","toString","delay","processResults","$element","removeAttribute","results","previous","values","reduce","accumulator","record","index","disabled","Boolean","item","group","site","url","should_nullify_children","collection","property","pagination","more","next","dataUrl","filter_regex","rendered_url","exec","filter_field","custom_attribute","replace","parseURL","initializeMultiValueChar","language","noResults","multiple","tags","initializeStaticChoiceSelection","initializeSelect2Fields","modal","TABS_HIDDEN_CLASSES","THEME_MODAL_ID","THEME_DARK","THEME_LIGHT","THEME_SYSTEM","isValidTheme","detectTheme","cookieTheme","cookie","find","localStorageTheme","localStorage","getItem","setTheme","isManual","manual","getElementById","button","dataset","nbTheme","bsTheme","matchMedia","matches","removeItem","getElementsByTagName","object","addEventListener","target","contentDocument","rack_image","location","reload","bootstrap","ClipboardJS","flatpickr","htmx","registerLanguage","graphql","json","xml","yaml","hljs","jQuery","nb","pathname","search","hash","replaceState","loadState","tooltip","toggler","currentTarget","controls","expanded","sidenavListItem","onClickDocument","documentClickEvent","documentClickTarget","sidenavFlyout","removeEventListener","sidenavBranchPickerSelect","on","form","submit","areAll","collapseElements","collapsedOrExpanded","every","isCollapsed","getCollapseToggleAllTargets","collapseToggleAll","nbTarget","collapse","collapseInstance","Collapse","getOrCreateInstance","hide","show","textContent","initializeCollapseToggleAll","createHandleOnMouseListener","isDraggable","handle","onMouseDown","onMouseUp","draggable","dataTransfer","clearData","setData","add","preventDefault","getData","insertBefore","dropDraggable","height","top","getBoundingClientRect","clientY","nextSibling","left","right","clientX","append","initializeDraggable","nextState","restState","keys","dismiss","nbDismiss","nbToggle","intersectionObserver","IntersectionObserver","entry","intersectionRatio","threshold","formStickyFooter","observe","observeFormStickyFooters","headerSearch","NAV_MENU","navMenu","SEARCHABLE_MODELS","tabs","tab_details","groups","group_details","items","item_link","item_details","BADGE_REG_EXP","RegExp","delimiter","join","headerSearchInput","closeSearchPopup","searchPopup","body","isPressedCmd","getModifierState","isPressedCtrl","ctrlKey","key","input","setSelectionRange","mainLeft","mainRight","headerSearchInputTop","icon","badges","required","type","clear","InputEvent","shouldHideClear","action","role","badge","nbLink","popup","overlay","addBadge","link","removeButton","class","existing","ResizeObserver","paddingInlineStart","phrase","model","normalize","trim","toLowerCase","isBackspace","isInputStart","selectionEnd","selectionStart","initializeSearch","resizeObservers","resizeObserver","tabsParent","parentNode","tabsClone","cloneNode","clone","tabsCloneTemporaryClasses","shouldCollapseTabs","removeChild","dropdownMenu","dropdownToggleIcon","dropdownToggleLabel","dropdownToggle","dropdown","collapsedTabs","lastTab","previousElementSibling","unshift","collapsedTab","navLink","clonedTab","originalTab","getInstance","collapseTabs","observeCollapseTabs","buttons","onClick","initializeTheme","toggleFavorite","detail","successful","setRequestUrl","isFavorite","path","deleteUrl","addUrl","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","splice","r","d","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}