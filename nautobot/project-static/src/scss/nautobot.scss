/* nautobot.scss */

@use "sass:map";

/* 1. Include functions first (so you can manipulate colors, SVGs, calc, etc) */
@import "bootstrap/scss/functions";

/* 2. Include any default variable overrides here */
@import "colors";

/* Color system */
$white: $white-0;
$black: $black-0;

$blue:   $blue-0;
$red:    $red-0;
$orange: $orange-0;
$yellow: $orange-0;
$green:  $green-0;
$cyan:   $blue-0;

$primary:   $blue-0;
$secondary: $gray-3;
$success:   $green-0;
$info:      $blue-0;
$warning:   $orange-0;
$danger:    $red-0;
$light:     $gray-3;
$dark:      $gray-3;

$primary-text-emphasis:   $blue-0;
$secondary-text-emphasis: $gray-3;
$success-text-emphasis:   $green-0;
$info-text-emphasis:      $blue-0;
$warning-text-emphasis:   $orange-0;
$danger-text-emphasis:    $red-0;
$light-text-emphasis:     $gray-3;
$dark-text-emphasis:      $gray-3;

$primary-bg-subtle:       $blue-1;
$secondary-bg-subtle:     $gray-0;
$success-bg-subtle:       $green-1;
$info-bg-subtle:          $blue-1;
$warning-bg-subtle:       $orange-1;
$danger-bg-subtle:        $red-1;
$light-bg-subtle:         $gray-0;
$dark-bg-subtle:          $gray-0;

$primary-border-subtle:   $blue-2;
$secondary-border-subtle: $gray-05;
$success-border-subtle:   $green-2;
$info-border-subtle:      $blue-2;
$warning-border-subtle:   $orange-2;
$danger-border-subtle:    $red-2;
$light-border-subtle:     $gray-05;
$dark-border-subtle:      $gray-05;

$primary-text-emphasis-dark:   $blue-0-dark;
$secondary-text-emphasis-dark: $gray-3-dark;
$success-text-emphasis-dark:   $green-0-dark;
$info-text-emphasis-dark:      $blue-0-dark;
$warning-text-emphasis-dark:   $orange-0-dark;
$danger-text-emphasis-dark:    $red-0-dark;
$light-text-emphasis-dark:     $gray-3-dark;
$dark-text-emphasis-dark:      $gray-3-dark;

$primary-bg-subtle-dark:   $blue-1-dark;
$secondary-bg-subtle-dark: $gray-0-dark;
$success-bg-subtle-dark:   $green-1-dark;
$info-bg-subtle-dark:      $blue-1-dark;
$warning-bg-subtle-dark:   $orange-1-dark;
$danger-bg-subtle-dark:    $red-1-dark;
$light-bg-subtle-dark:     $gray-0-dark;
$dark-bg-subtle-dark:      $gray-0-dark;

$primary-border-subtle-dark:   $blue-2-dark;
$secondary-border-subtle-dark: $gray-05-dark;
$success-border-subtle-dark:   $green-2-dark;
$info-border-subtle-dark:      $blue-2-dark;
$warning-border-subtle-dark:   $orange-2-dark;
$danger-border-subtle-dark:    $red-2-dark;
$light-border-subtle-dark:     $gray-05-dark;
$dark-border-subtle-dark:      $gray-05-dark;

/* Options */
$enable-shadows: true;

$prefix: bs-;

  /* Spacing */
$spacer: 1rem;
/*
 * `$spacers` were supposed to use a popular notation adapted by Tailwind CSS,
 * where keys include decimals, such as 0.5, 1.5, 2.5, etc. Ultimately, it was
 * impossible to achieve due to SCSS shortcomings.
 */
$spacers: (
  0:  0,
  1:  $spacer * 0.0625,
  2:  $spacer * 0.125,
  4:  $spacer * 0.25,
  6:  $spacer * 0.375,
  8:  $spacer * 0.5,
  10: $spacer * 0.625,
  12: $spacer * 0.75,
  14: $spacer * 0.875,
  16: $spacer * 1,
  20: $spacer * 1.25,
  24: $spacer * 1.5,
);

/* Body */
$body-color: $black-0;
$body-bg:    $white-0;

$body-secondary-color: $gray-3;
$body-secondary-bg:    $bg;

$body-tertiary-color: $gray-2;
$body-tertiary-bg:    $gray-0;

$body-emphasis-color: $black-0;

$body-color-dark:           $black-0-dark;
$body-bg-dark:              $white-0-dark;
$body-secondary-color-dark: $gray-3-dark;
$body-secondary-bg-dark:    $bg-dark;
$body-tertiary-color-dark:  $gray-2-dark;
$body-tertiary-bg-dark:     $gray-0-dark;
$body-emphasis-color-dark:  $black-0-dark;

/* Links */
$link-color:            $primary-text-emphasis;
$link-decoration:       none;
$link-hover-color:      $link-color;
$link-hover-decoration: underline;

$link-color-dark:       $primary-text-emphasis-dark;
$link-hover-color-dark: $link-color-dark;

/* Components */
/* Use `rem` instead of `px` to enable arithmetics with `$spacers`. */
$border-width:             0.0625rem; /* 1px */
$border-widths: (
  1: $border-width,     /* 1px */
  2: $border-width * 2, /* 2px */
  3: $border-width * 3, /* 3px */
  4: $border-width * 4, /* 4px */
  5: $border-width * 5  /* 5px */
);
$border-color:             $gray-1;
$border-color-translucent: $border-color;

$border-color-dark:             $gray-1-dark;
$border-color-translucent-dark: $border-color-dark;

$border-radius:      0.25rem; /* 4px */;
$border-radius-sm:   $border-radius;
$border-radius-lg:   $border-radius;
$border-radius-xl:   $border-radius;
$border-radius-xxl:  $border-radius;
$border-radius-pill: $border-radius;
$border-radius-2xl:  $border-radius;

$box-shadow:    0.3125rem 0.3125rem 0.625rem 0 rgba(0, 0, 0, 0.25);
$box-shadow-sm: 0 0 0.625rem 0 rgba(0, 0, 0, 0.1);
$box-shadow-lg: $box-shadow;

$focus-ring-width:      0.25rem; /* 4px */
$focus-ring-opacity:    1;
$focus-ring-color:      rgba($primary-border-subtle, $focus-ring-opacity);
$focus-ring-blur:       0;
$focus-ring-box-shadow: 0 0 $focus-ring-blur $focus-ring-width var(--#{$prefix}focus-ring-color);

$focus-ring-color-dark: rgba($primary-border-subtle-dark, $focus-ring-opacity);

/* Typography */
$font-family-sans-serif: "Ubuntu", sans-serif;
$font-family-monospace:  "Ubuntu Mono", monospace;

$font-size-root: 1rem;     /* Assumes the browser default, typically `16px` */
$font-size-base: 0.875rem; /* 14px */
$font-size-sm:   0.75rem;  /* 12px */
$font-size-lg:   1.125rem; /* 18px */

$line-height-base: 1.4375;
$line-height-sm:   1;

$h1-font-size: 1.5rem;          /* 24px */
$h2-font-size: 1.25rem;         /* 20px */
$h3-font-size: $font-size-lg;   /* 18px */
$h4-font-size: $font-size-base; /* 14px */
$h5-font-size: $font-size-sm;   /* 12px */
$h6-font-size: 0.675rem;        /* 10px */

$headings-margin-bottom: map.get($spacers, 0);
$headings-line-height:   $line-height-base;

/* Tables */
$table-cell-padding-y:    map.get($spacers, 8);
$table-cell-padding-x:    map.get($spacers, 10);
$table-cell-padding-y-sm: map.get($spacers, 4);
$table-cell-padding-x-sm: map.get($spacers, 4);

$table-th-font-weight: 500;

$table-striped-bg-factor: 1;
$table-striped-bg:        var(--#{$prefix}tertiary-bg);

$table-active-bg-factor: 1;
$table-active-bg:        var(--#{$prefix}primary-bg-subtle);

$table-hover-bg-factor: 1;
$table-hover-bg:        var(--#{$prefix}primary-bg-subtle);

$table-border-factor: 1;

/* Buttons + Forms */
$input-btn-padding-y:   map.get($spacers, 6)  - $border-width;
$input-btn-padding-x:   map.get($spacers, 12) - $border-width;

$input-btn-padding-y-sm: map.get($spacers, 2);
$input-btn-padding-x-sm: map.get($spacers, 8);

$input-btn-padding-y-lg: $input-btn-padding-y;
$input-btn-padding-x-lg: $input-btn-padding-x;
$input-btn-font-size-lg: $font-size-base;

/* Buttons */
$btn-box-shadow:        0 0 0 0 transparent;
$btn-disabled-opacity:  1;
$btn-active-box-shadow: none;

$btn-link-disabled-color:   $body-tertiary-color;
$btn-link-focus-shadow-rgb: to-rgb($primary-border-subtle);

$btn-link-disabled-color-dark:   $body-tertiary-color-dark;
$btn-link-focus-shadow-rgb-dark: to-rgb($primary-border-subtle-dark);

/* Forms */
$input-bg:                    var(--#{$prefix}body-bg);
$input-disabled-color:        var(--#{$prefix}tertiary-color);
$input-disabled-bg:           var(--#{$prefix}tertiary-bg);
$input-disabled-border-color: var(--#{$prefix}border-color);

$input-box-shadow: 0 0 0 0 transparent;

$input-focus-border-color: var(--#{$prefix}primary-text-emphasis);

$form-check-input-width:      1.25rem;
$form-check-input-min-height: 1.25rem;
$form-check-padding-start:    0;
$form-check-margin-bottom:    0;

$form-check-input-bg:            $input-bg;
$form-check-input-border-radius: var(--#{$prefix}border-radius);

$form-check-input-checked-color:        var(--#{$prefix}primary-text-emphasis);
$form-check-input-checked-bg-color:     $form-check-input-bg;
$form-check-input-checked-border-color: $form-check-input-checked-color;
$form-check-input-checked-bg-image:     url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'><path fill='none' stroke='#{$primary-text-emphasis}' stroke-linecap='round' stroke-linejoin='round' stroke-width='1' d='m6 10 3 3 6-6'/></svg>");
$form-check-radio-checked-bg-image:     url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'><circle r='2' fill='#{$primary-text-emphasis}'/></svg>");

$form-check-input-indeterminate-color:        $form-check-input-checked-color;
$form-check-input-indeterminate-bg-color:     $form-check-input-checked-bg-color;
$form-check-input-indeterminate-border-color: $form-check-input-checked-border-color;
$form-check-input-indeterminate-bg-image:     url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'><path fill='none' stroke='#{$primary-text-emphasis}' stroke-linecap='round' stroke-linejoin='round' stroke-width='1' d='M6 10h8'/></svg>");

$form-check-input-disabled-opacity:     1;
$form-check-label-disabled-opacity:     $form-check-input-disabled-opacity;

$form-check-inline-margin-end: map.get($spacers, 16);

/* Navs */
$nav-tabs-link-hover-border-color:  var(--#{$prefix}border-color);
$nav-tabs-link-active-color:        var(--#{$prefix}body-color);
$nav-tabs-link-active-border-color: var(--#{$prefix}border-color);

/* Dropdowns */
$dropdown-min-width:        15rem;
$dropdown-padding-y:        map.get($spacers, 4) - $border-width;
$dropdown-spacer:           $border-width;
$dropdown-bg:               var(--#{$prefix}body-bg);
$dropdown-border-color:     var(--#{$prefix}border-color);
$dropdown-divider-margin-y: map.get($spacers, 4);
$dropdown-box-shadow:       $box-shadow;

$dropdown-link-hover-color: var(--#{$prefix}body-color);
$dropdown-link-hover-bg:    var(--#{$prefix}primary-bg-subtle);

$dropdown-link-active-color: var(--#{$prefix}primary-text-emphasis);
$dropdown-link-active-bg:    var(--#{$prefix}primary-bg-subtle);

$dropdown-link-disabled-color: var(--#{$prefix}tertiary-color);

$dropdown-item-padding-y: map.get($spacers, 4);
$dropdown-item-padding-x: map.get($spacers, 12);

$dropdown-header-color:     var(--#{$prefix}secondary-color);
/* Using a workaround below to get all 4 individual padding values with shorthand property. */
$dropdown-header-padding-x: map.get($spacers, 4) $dropdown-item-padding-x;
$dropdown-header-padding-y: map.get($spacers, 8) $dropdown-item-padding-x;

$dropdown-dark-color:               $body-emphasis-color-dark;
$dropdown-dark-bg:                  $body-bg-dark;
$dropdown-dark-border-color:        $border-color-dark;
$dropdown-dark-divider-bg:          $dropdown-dark-border-color;
$dropdown-dark-box-shadow:          $dropdown-box-shadow;
$dropdown-dark-link-hover-color:    $body-color-dark;
$dropdown-dark-link-hover-bg:       $primary-bg-subtle-dark;
$dropdown-dark-link-active-color:   $primary-text-emphasis-dark;
$dropdown-dark-link-active-bg:      $primary-bg-subtle-dark;
$dropdown-dark-link-disabled-color: $body-tertiary-color-dark;
$dropdown-dark-header-color:        $body-secondary-color-dark;

/* 3. Include remainder of required Bootstrap stylesheets (including any separate color mode stylesheets) */
@import "bootstrap/scss/variables";
@import "bootstrap/scss/variables-dark";

/* 4. Include any default map overrides here */

/* 5. Include remainder of required parts */
@import "bootstrap/scss/maps";
@import "bootstrap/scss/mixins";
@import "bootstrap/scss/utilities";

/* 6. Optionally include any other parts as needed */
/* TODO: review the below and trim it down as appropriate */
@import "bootstrap/scss/root";
@import "bootstrap/scss/reboot";
@import "bootstrap/scss/type";
@import "bootstrap/scss/images";
@import "bootstrap/scss/containers";
@import "bootstrap/scss/grid";
@import "bootstrap/scss/tables";
@import "bootstrap/scss/forms";
@import "bootstrap/scss/buttons";
@import "bootstrap/scss/transitions";
@import "bootstrap/scss/dropdown";
@import "bootstrap/scss/button-group";
@import "bootstrap/scss/nav";
@import "bootstrap/scss/navbar";
@import "bootstrap/scss/card";
@import "bootstrap/scss/accordion";
@import "bootstrap/scss/breadcrumb";
@import "bootstrap/scss/pagination";
@import "bootstrap/scss/badge";
@import "bootstrap/scss/alert";
@import "bootstrap/scss/progress";
@import "bootstrap/scss/list-group";
@import "bootstrap/scss/close";
@import "bootstrap/scss/toasts";
@import "bootstrap/scss/modal";
@import "bootstrap/scss/tooltip";
@import "bootstrap/scss/popover";
/* @import "bootstrap/scss/carousel"; */
@import "bootstrap/scss/spinners";
@import "bootstrap/scss/offcanvas";
@import "bootstrap/scss/placeholders";

@import "bootstrap/scss/helpers";

/* 7. Optionally include utilities API last to generate classes based on the Sass map in `_utilities.scss` */
@import "bootstrap/scss/utilities/api";

/* 8. Add additional custom code here */
@if $enable-dark-mode {
  @include color-mode(dark, true) {
    /* Focus styles */
    --#{$prefix}focus-ring-color: #{$focus-ring-color-dark};
  }
}

/* Links */
a,
button {
  outline: none;
  @include transition($btn-transition);

  &:focus-visible {
    @include box-shadow(0 0 0 #{$focus-ring-width} var(--#{$prefix}focus-ring-color));
  }
}

.table {
  > thead:not(caption) > tr > th {
    background-color: var(--#{$prefix}tertiary-bg);
    color: var(--#{$prefix}secondary-color);
  }
}

/* Buttons */
.btn {
  --#{$prefix}btn-box-shadow: #{$btn-box-shadow};
  --#{$prefix}btn-focus-box-shadow: 0 0 0 #{$btn-focus-width} var(--#{$prefix}primary-border-subtle);
}

$btn-variant-primary: (
  "bg":     var(--#{$prefix}primary-bg-subtle),
  "border": var(--#{$prefix}primary-text-emphasis),
  "ring":   var(--#{$prefix}primary-border-subtle),
  "text":   var(--#{$prefix}primary-text-emphasis),
);
$btn-variant-secondary: (
  "bg":     var(--#{$prefix}secondary-bg-subtle),
  "border": var(--#{$prefix}border-color),
  "ring":   var(--#{$prefix}secondary-border-subtle),
  "text":   var(--#{$prefix}emphasis-color),
);
$btn-variant-success: (
  "bg":     var(--#{$prefix}success-bg-subtle),
  "border": var(--#{$prefix}success-text-emphasis),
  "ring":   var(--#{$prefix}success-border-subtle),
  "text":   var(--#{$prefix}success-text-emphasis),
);
$btn-variant-danger: (
  "bg":     var(--#{$prefix}danger-bg-subtle),
  "border": var(--#{$prefix}danger-text-emphasis),
  "ring":   var(--#{$prefix}danger-border-subtle),
  "text":   var(--#{$prefix}danger-text-emphasis),
);
$btn-variant-warning: (
  "bg":     var(--#{$prefix}warning-bg-subtle),
  "border": var(--#{$prefix}warning-text-emphasis),
  "ring":   var(--#{$prefix}warning-border-subtle),
  "text":   var(--#{$prefix}warning-text-emphasis),
);
$btn-variants: (
  "primary":   $btn-variant-primary,
  "secondary": $btn-variant-secondary,
  "success":   $btn-variant-success,
  "danger":    $btn-variant-danger,
  "warning":   $btn-variant-warning,
  "info":      $btn-variant-primary,
  "light":     $btn-variant-secondary,
  "dark":      $btn-variant-secondary,
  "default":   $btn-variant-secondary
);

@each $color, $variant-colors in $btn-variants  {
  .btn-#{$color},
  .btn-outline-#{$color} {
    --#{$prefix}btn-focus-box-shadow: 0 0 0 #{$btn-focus-width} #{map.get($variant-colors, "ring")};

    /* Bootstrap utilizes `button-variant` mixin but apparently it does not support color modes. */
    --#{$prefix}btn-color: #{map.get($variant-colors, "text")};
    --#{$prefix}btn-bg: transparent;
    --#{$prefix}btn-border-color: #{map.get($variant-colors, "border")};
    --#{$prefix}btn-hover-color: #{map.get($variant-colors, "text")};
    --#{$prefix}btn-hover-bg: #{map.get($variant-colors, "bg")};
    --#{$prefix}btn-hover-border-color: #{map.get($variant-colors, "border")};
    --#{$prefix}btn-active-color: #{map.get($variant-colors, "text")};
    --#{$prefix}btn-active-bg: #{map.get($variant-colors, "bg")};
    --#{$prefix}btn-active-border-color: #{map.get($variant-colors, "border")};
    --#{$prefix}btn-active-shadow: #{$btn-box-shadow};
    --#{$prefix}btn-disabled-color: var(--#{$prefix}tertiary-color);
    --#{$prefix}btn-disabled-bg: var(--#{$prefix}tertiary-bg);
    --#{$prefix}btn-disabled-border-color: var(--#{$prefix}border-color);
  }
}

.btn-link {
  --#{$prefix}btn-hover-bg: var(--#{$prefix}primary-bg-subtle);
  --#{$prefix}btn-focus-box-shadow: 0 0 0 #{$btn-focus-width} var(--#{$prefix}focus-ring-color);

  --#{$prefix}btn-hover-border-color: var(--#{$prefix}primary-bg-subtle);
  --#{$prefix}btn-active-border-color: var(--#{$prefix}primary-bg-subtle);
  --#{$prefix}btn-disabled-color: var(--#{$prefix}tertiary-color);
  --#{$prefix}btn-disabled-bg: var(--#{$prefix}tertiary-bg);
  --#{$prefix}btn-disabled-border-color: var(--#{$prefix}border-color);
  --#{$prefix}btn-box-shadow: #{$btn-box-shadow};
}

.btn-xs {
  @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $btn-font-size-sm, $btn-border-radius-sm);
}

/* Forms */
.form-control {
  &:hover:not(:disabled):not([readonly]) {
    border-color: var(--#{$prefix}primary-text-emphasis);
  }
}

.form-check-input {
  @include transition($btn-transition);

  &:focus {
    background-color: var(--#{$prefix}primary-bg-subtle);
  }

  &:not(:disabled):hover,
  &:not(:disabled):has(+ .form-check-label:hover) {
    background-color: var(--#{$prefix}primary-bg-subtle);
    border-color: $form-check-input-focus-border;
  }

  &:disabled {
    background-color: $input-disabled-bg;
    color: $input-disabled-color;
  }

  &[disabled],
  &:disabled {
    ~ .form-check-label {
      color: $input-disabled-color;
    }
  }
}

/* Tabs */
.nav-tabs {
  --#{$prefix}nav-link-padding-x: #{map.get($spacers, 12) - $border-width};
  --#{$prefix}nav-link-padding-y: #{map.get($spacers, 6) - $border-width};
  --#{$prefix}nav-link-color: var(--#{$prefix}body-color);
  --#{$prefix}nav-link-hover-color: var(--#{$prefix}body-color);
  --#{$prefix}nav-link-disabled-color: var(--#{$prefix}tertiary-color);

  padding-inline: #{map.get($spacers, 20)};;

  .nav-item:not(:first-child) {
    margin-inline-start: #{map.get($spacers, 8)};
  }

  .nav-link {
    cursor: pointer;

    &:hover,
    &:focus {
      background-color: var(--#{$prefix}nav-tabs-link-active-bg);
    }

    &.active {
      border-bottom-color: var(--#{$prefix}nav-tabs-link-active-bg);
    }
  }
}

/* Dropdowns */
.dropdown-header {
  @include font-size($font-size-base);
  font-weight: $font-weight-medium;
  text-transform: uppercase;
}

/* Sidenav (a.k.a. navbar, nav menu, sidebar) */
body {
  display: grid;
  grid-template-areas:
    "sidenav header       drawer"
    "sidenav main-content drawer"
    "sidenav footer       drawer";
  grid-template-columns: fit-content(0) 1fr fit-content(0);
  grid-template-rows: fit-content(0) 1fr fit-content(0);

  #sidenav {
    grid-area: sidenav;
  }

  #main-content {
    grid-area: main-content;
  }

  #footer {
    grid-area: footer;
  }
}

#sidenav {
  $sidenav-chevron-svg: "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'><path fill-rule='evenodd' clip-rule='evenodd' d='M14.53 5.46967C14.8229 5.76256 14.8229 6.23744 14.53 6.53033L10.7928 10.2676C10.388 10.6724 10.1167 10.9444 9.92461 11.1708C9.73817 11.3904 9.67071 11.5171 9.6393 11.6137C9.55773 11.8648 9.55773 12.1352 9.6393 12.3863C9.67071 12.4829 9.73817 12.6096 9.92461 12.8292C10.1167 13.0556 10.388 13.3276 10.7928 13.7324L14.53 17.4697C14.8229 17.7626 14.8229 18.2374 14.53 18.5303C14.2371 18.8232 13.7623 18.8232 13.4694 18.5303L9.73211 14.7931L9.71059 14.7715C9.33288 14.3939 9.01761 14.0786 8.7811 13.8C8.53443 13.5094 8.32969 13.2098 8.21272 12.8498C8.03326 12.2975 8.03326 11.7025 8.21272 11.1502C8.32969 10.7902 8.53443 10.4906 8.7811 10.2C9.01761 9.9214 9.33287 9.60615 9.71058 9.22845L9.73211 9.20693L13.4694 5.46967C13.7623 5.17678 14.2371 5.17678 14.53 5.46967Z' fill='#{$nav-white-0}'/></svg>";
  $sidenav-favorite-icon-svg: "<svg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'><path d='M9.13784 4.72433C10.0591 2.8819 10.5197 1.96069 11.143 1.66508C11.6854 1.40782 12.3146 1.40782 12.8571 1.66508C13.4804 1.96069 13.941 2.88191 14.8622 4.72434L15.2215 5.4429C15.5059 6.01177 15.6481 6.29621 15.8562 6.51399C16.0403 6.70676 16.2612 6.86077 16.5058 6.96694C16.782 7.08689 17.0981 7.12201 17.7302 7.19225L18.0564 7.22849C20.2646 7.47385 21.3687 7.59653 21.8677 8.10561C22.3013 8.54802 22.5055 9.16639 22.4205 9.78001C22.3227 10.4861 21.5086 11.242 19.8805 12.7539L19.5361 13.0736C18.9804 13.5897 18.7025 13.8477 18.5419 14.1604C18.4 14.4368 18.3244 14.7424 18.3211 15.0531C18.3174 15.4046 18.4446 15.7671 18.699 16.4921V16.4921C19.5294 18.8587 19.9446 20.042 19.673 20.7338C19.4374 21.3339 18.927 21.7836 18.3021 21.9418C17.5816 22.1241 16.4767 21.5717 14.267 20.4668L13.4311 20.0489C12.9064 19.7865 12.644 19.6553 12.3688 19.6037C12.1251 19.558 11.8749 19.558 11.6312 19.6037C11.356 19.6553 11.0937 19.7865 10.5689 20.0489L9.73299 20.4668C7.52325 21.5717 6.41838 22.1241 5.69791 21.9418C5.07298 21.7836 4.56261 21.3339 4.32703 20.7338C4.05543 20.042 4.47062 18.8587 5.30101 16.4921V16.4921C5.55541 15.7671 5.68261 15.4046 5.67891 15.0531C5.67565 14.7424 5.60005 14.4368 5.45811 14.1604C5.29751 13.8477 5.01964 13.5897 4.46388 13.0736L4.11954 12.7539C2.49141 11.242 1.67734 10.4861 1.57953 9.78001C1.49453 9.16639 1.69867 8.54802 2.13229 8.10561C2.63127 7.59653 3.73538 7.47385 5.9436 7.22849L6.26976 7.19225C6.90189 7.12201 7.21795 7.08689 7.49423 6.96694C7.73879 6.86077 7.95965 6.70676 8.14383 6.51399C8.35189 6.29621 8.49411 6.01178 8.77855 5.44291L9.13784 4.72433Z' fill='none' stroke='#{$nav-white-0}' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/></svg>";
  $sidenav-favorite-icon-svg-filled: "<svg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'><path d='M9.13784 4.72433C10.0591 2.8819 10.5197 1.96069 11.143 1.66508C11.6854 1.40782 12.3146 1.40782 12.8571 1.66508C13.4804 1.96069 13.941 2.88191 14.8622 4.72434L15.2215 5.4429C15.5059 6.01177 15.6481 6.29621 15.8562 6.51399C16.0403 6.70676 16.2612 6.86077 16.5058 6.96694C16.782 7.08689 17.0981 7.12201 17.7302 7.19225L18.0564 7.22849C20.2646 7.47385 21.3687 7.59653 21.8677 8.10561C22.3013 8.54802 22.5055 9.16639 22.4205 9.78001C22.3227 10.4861 21.5086 11.242 19.8805 12.7539L19.5361 13.0736C18.9804 13.5897 18.7025 13.8477 18.5419 14.1604C18.4 14.4368 18.3244 14.7424 18.3211 15.0531C18.3174 15.4046 18.4446 15.7671 18.699 16.4921V16.4921C19.5294 18.8587 19.9446 20.042 19.673 20.7338C19.4374 21.3339 18.927 21.7836 18.3021 21.9418C17.5816 22.1241 16.4767 21.5717 14.267 20.4668L13.4311 20.0489C12.9064 19.7865 12.644 19.6553 12.3688 19.6037C12.1251 19.558 11.8749 19.558 11.6312 19.6037C11.356 19.6553 11.0937 19.7865 10.5689 20.0489L9.73299 20.4668C7.52325 21.5717 6.41838 22.1241 5.69791 21.9418C5.07298 21.7836 4.56261 21.3339 4.32703 20.7338C4.05543 20.042 4.47062 18.8587 5.30101 16.4921V16.4921C5.55541 15.7671 5.68261 15.4046 5.67891 15.0531C5.67565 14.7424 5.60005 14.4368 5.45811 14.1604C5.29751 13.8477 5.01964 13.5897 4.46388 13.0736L4.11954 12.7539C2.49141 11.242 1.67734 10.4861 1.57953 9.78001C1.49453 9.16639 1.69867 8.54802 2.13229 8.10561C2.63127 7.59653 3.73538 7.47385 5.9436 7.22849L6.26976 7.19225C6.90189 7.12201 7.21795 7.08689 7.49423 6.96694C7.73879 6.86077 7.95965 6.70676 8.14383 6.51399C8.35189 6.29621 8.49411 6.01178 8.77855 5.44291L9.13784 4.72433Z' fill='#{$nav-white-0}' stroke='#{$nav-white-0}' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/></svg>";
  $sidenav-favorite-size: 1.25rem; /* 20px */
  $sidenav-link-gap: 0.3125rem; /* 5px */
  $sidenav-link-segment-icon-height: 5.625rem; /* 90px */
  $sidenav-link-segment-icon-width: 1.25rem; /* 20px */
  $sidenav-link-segment-icon-svg: "<svg viewBox='0 0 20 90' xmlns='http://www.w3.org/2000/svg'><line x1='9.5' x2='9.5' y2='90' stroke='#{$nav-gray-3}'/><line x1='10' y1='45' x2='15' y2='45' stroke='#{$nav-gray-3}'/></svg>";
  $sidenav-link-segment-icon-svg-last: "<svg viewBox='0 0 20 90' xmlns='http://www.w3.org/2000/svg'><line x1='9.5' x2='9.5' y2='45.5' stroke='#{$nav-gray-3}'/><line x1='10' y1='45' x2='15' y2='45' stroke='#{$nav-gray-3}'/></svg>";
  $sidenav-link-width: 15rem; /* 240px */

  @mixin chevron($size) {
    @include transition($accordion-icon-transition, $transition-fade);
    background: no-repeat center/#{$size} #{escape-svg(url("data:image/svg+xml,#{$sidenav-chevron-svg}"))};
    content: "";
    display: block;
    height: $size;
    width: $size;
  }

  @mixin fade-in {
    opacity: 1;
    visibility: visible;
  }

  @mixin fade-out {
    opacity: 0;
    visibility: hidden;
  }

  @mixin filter-nav-orange-0 {
    /*
     * CSS workaround to change element color (including its `background-image`)
     * from white to any given color, `$orange-0` in this case.
     * Generated with: https://codepen.io/jumarjuaton/full/mdJYWYq
     */
    filter: invert(50%) sepia(99%) saturate(1810%) hue-rotate(3deg) brightness(93%) contrast(94%);
  }

  @include box-shadow($box-shadow);
  @include transition($transition-collapse-width);
  align-items: center;
  background-color: $navy-0;
  color: $nav-white-0;
  display: flex;
  flex-direction: column;
  height: 100%;
  position: relative;
  width: $sidenav-link-width;
  z-index: 1;

  &.sidenav-collapsed {
    width: 4rem; /* 64px */

    /* Transition between brand logo and icon when navbar expands/collapses. */
    .sidenav-brand {
      &:first-of-type { /* Brand icon */
        @include fade-in;
      }

      &:nth-of-type(2) { /* Brand logo */
        @include fade-out;
      }
    }

    .sidenav-list-item {
      > :last-child { /* Sidenav list item name and chevron icon wrapper */
        @include fade-out;
      }
    }

    .sidenav-toggler::before { /* Sidenav toggler chevron icon */
      transform: rotate(180deg);
    }
  }

  /*
   * `&, *` stands for the current element selector (`&`, i.e. `#sidenav`) and
   * all its descendants (`*`), it interpolates to `#sidenav, #sidenav *`.
   */
  &, * {
    scrollbar-width: none;
  }

  .sidenav-brand {
    @include transition($transition-base);
    display: inline-block;
    margin-block-start: map.get($spacers, 10);
    padding: map.get($spacers, 10);

    &:first-of-type { /* Brand icon */
      @include fade-out;
    }

    &:nth-of-type(2) { /* Brand logo */
      @include fade-in;
    }

    img {
      height: 1.875rem; /* 30px */
    }
  }

  .sidenav-flyout {
    @include box-shadow($box-shadow);
    @include fade-out;
    @include transition($transition-base);
    background: $navy-1;
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    height: 100%;
    left: 0;
    padding-block: map.get($spacers, 20);
    position: absolute;
    top: 0;
    width: max-content;
    z-index: -1;
  }

  .sidenav-link {
    align-items: center;
    color: inherit;
    display: flex;
    flex: 1;
    overflow: hidden;
    padding-block: 0.3125rem; /* 5px */
    padding-inline-start: map.get($spacers, 20) + $sidenav-link-segment-icon-width + $sidenav-link-gap;
    position: relative;
    text-decoration: none;
    width: $sidenav-link-width;

    &-active {
      color: $orange-0;
    }

    &::before { /* Segment icon */
      background: no-repeat center/$sidenav-link-segment-icon-width $sidenav-link-segment-icon-height #{escape-svg(url("data:image/svg+xml,#{$sidenav-link-segment-icon-svg}"))};
      content: "";
      display: block;
      flex: none;
      height: $sidenav-link-segment-icon-height;
      left: map.get($spacers, 20);
      position: absolute;
      width: $sidenav-link-segment-icon-width;
    }
  }

  li:last-child > .sidenav-link::before { /* Last link segment icon */
    background-image: #{escape-svg(url("data:image/svg+xml,#{$sidenav-link-segment-icon-svg-last}"))};
  }

  .sidenav-favorite {
    @include fade-out;
    @include transition($transition-base);
    background: no-repeat #{map.get($spacers, 10)} center/$sidenav-favorite-size #{escape-svg(url("data:image/svg+xml,#{$sidenav-favorite-icon-svg}"))};
    border: none;
    flex: none;
    padding: 0;
    width: $sidenav-favorite-size + 2 * map.get($spacers, 10); /* 20px + 2 * 10px = 40px */

    &:focus-visible,
    &:hover {
      background-image: #{escape-svg(url("data:image/svg+xml,#{$sidenav-favorite-icon-svg-filled}"))};
    }
  }

  .sidenav-link-wrapper {
    display: flex;
    width: $sidenav-link-width;

    &.disabled {
      color: $nav-gray-3;
      pointer-events: none;
    }

    &:has(> :focus-visible), /* CSS has `:focus-within` pseudo-class available but it works similar to `:focus` rather than `:focus-visible` */
    &:hover {
      background-color: $navy-2;

      > .sidenav-favorite {
        @include fade-in;
      }
    }
  }

  .sidenav-link-group {
    color: $nav-gray-3;
    font-weight: $font-weight-medium;
    padding-block: 0.3125rem; /* 5px */
    padding-inline: #{map.get($spacers, 20)};
    text-transform: uppercase;
    width: $sidenav-link-width;
  }

  .sidenav-list-divider {
    border-top: $border-width solid $navy-4;
    margin: #{map.get($spacers, 10)}  #{map.get($spacers, 20)};
  }

  .sidenav-list-item {
    @include transition($btn-transition);
    align-items: center;
    background: transparent;
    border: none;
    color: inherit;
    display: inline-flex;
    font-weight: $font-weight-medium;
    padding-block: 0.3125rem; /* 5px */
    padding-inline: #{map.get($spacers, 20)}  #{map.get($spacers, 10)};
    text-transform: uppercase;
    width: 100%;

    &[aria-expanded="true"] { /* When list item is expanded */
      background-color: $navy-1;

      &::after { /* Overlay */
        @include fade-in;
      }

      & + .sidenav-flyout {
        @include fade-in;
        left: 100%;
      }
    }

    &:focus-visible,
    &:hover {
      background-color: $navy-1;
    }

    &::after { /* Overlay */
      @include fade-out;
      @include transition($transition-base);
      background: rgba(0, 0, 0, 0.25);
      content: "";
      cursor: default;
      display: block;
      inset: 0 0 0 $sidenav-link-width;
      position: fixed;
      z-index: -1;
    }

    &:has(+ .sidenav-flyout .sidenav-link-active) { /* When list item contains an active link */
      color: $orange-0;

      > :last-child::after { /* Chevron icon */
        @include filter-nav-orange-0;
      }
    }

    > :first-child { /* Primary icon */
      flex: none;
      height: 1.5rem; /* 24px */
      width: 1.5rem; /* 24px */
    }

    > :last-child { /* Name and chevron icon wrapper */
      @include transition($transition-base);
      @include fade-in;
      align-items: center;
      display: inline-flex;
      flex: auto 1 0;
      margin-inline-start: map.get($spacers, 10);

      &::after { /* Chevron icon */
        @include chevron(1.5rem); /* 24px */
        margin-inline-start: auto;
        transform: rotate(180deg);
      }
    }
  }

  .sidenav-toggler {
    @include fade-in;
    @include transition($transition-base);
    right: -0.8125rem; /* -13px */
    top: 1.375rem; /* 22px */

    &::before { /* Chevron icon */
      @include chevron(1rem); /* 16px */
    }
  }

  &:has(> ul .sidenav-list-item[aria-expanded="true"]) { /* When flyout is expanded */
    .sidenav-toggler {
      @include fade-out;
    }
  }
}
