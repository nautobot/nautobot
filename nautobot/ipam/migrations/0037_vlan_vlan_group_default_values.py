# Generated by Django 3.2.18 on 2023-06-07 16:31

from django.db import migrations

from nautobot.ipam.utils.migrations import increment_names_of_records_with_similar_names


def vlan_vlan_group_uniqueness_constrains_revise(apps, schema_editor):
    # Resolve VLAN-Group name uniqueness
    VLAN = apps.get_model("ipam", "vlan")
    VLANGroup = apps.get_model("ipam", "vlangroup")

    increment_names_of_records_with_similar_names(VLANGroup)

    # Hope fully vlan group with name `Default VLAN Group` would not exist
    _, default_vlan_group = VLANGroup.objects.get_or_create(name="Default VLAN Group")
    VLAN.objects.filter(vlan_group__isnull=True).update(vlan_group=default_vlan_group)


def revert_vlan_vlan_group_uniqueness_constrains_revise(apps, schema_editor):
    VLAN = apps.get_model("ipam", "vlan")
    VLANGroup = apps.get_model("ipam", "vlangroup")

    # Revert changes made to vlan
    default_vlan_group = VLANGroup.objects.get(name="Default VLAN Group")
    VLAN.objects.filter(vlan_group=default_vlan_group).update(vlan_group=None)
    default_vlan_group.delete()

    # Reverting changes made to VLAN Group might be tricky


class Migration(migrations.Migration):
    dependencies = [
        ("ipam", "0036_add_uniqueness_constraints_to_service"),
    ]

    operations = [
        migrations.RunPython(
            vlan_vlan_group_uniqueness_constrains_revise, revert_vlan_vlan_group_uniqueness_constrains_revise
        )
    ]
