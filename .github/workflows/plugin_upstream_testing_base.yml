---
name: "Nautobot Plugin Upstream Testing - Base"

on:
  workflow_call:
    inputs:
      invoke_context_name:
        required: true
        type: string
      plugin_name:
        required: true
        type: string

env:
  PYTHON_VERSION: "3.8"

jobs:
  build:
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        nautobot-version: ["develop", "ltm-1.6"]
    runs-on: "ubuntu-24.04"
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v4"
        with:
          ref: "${{ matrix.nautobot-version == 'develop' && 'develop' || matrix.nautobot-version == 'ltm-1.6' && 'ltm-1.6' || env.GITHUB_REF_NAME || 'develop' }}"
      - name: "Setup environment"
        uses: "networktocode/gh-action-setup-poetry-environment@v6"
        with:
          poetry-install-options: ""  # override default "--only dev"
          poetry-version: "1.8.2"
          python-version: "${{ env.PYTHON_VERSION }}"
      # This deviates from the app CI since we can't force invoke to run locally using the `INVOKE_APPNAME_LOCAL` environment variable
      - name: "Constrain Nautobot version and regenerate lock file"
        run: "poetry add --lock git+https://github.com/nautobot/nautobot.git#${{ matrix.nautobot-version }} --python ${{ env.PYTHON_VERSION }}"
      - name: "Set up Docker Buildx"
        id: "buildx"
        uses: "docker/setup-buildx-action@v1"
      - name: "Build"
        uses: "docker/build-push-action@v2"
        with:
          builder: "${{ steps.buildx.outputs.name }}"
          context: "./"
          push: false
          tags: "${{ inputs.plugin_name }}/nautobot:${{ matrix.nautobot-version }}-py${{ env.PYTHON_VERSION }}"
          file: "./development/Dockerfile"
          cache-from: "type=gha,scope=nautobot-${{ matrix.nautobot-version }}"
          build-args: |
            NAUTOBOT_VER=${{ matrix.nautobot-version }}
            PYTHON_VER=${{ env.PYTHON_VERSION }}
            CI=true
          outputs: "type=docker,dest=/tmp/nautobot_${{ matrix.nautobot-version }}.tar"
      - name: Upload docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: "docker_nautobot_${{ matrix.nautobot-version }}"
          path: "/tmp/nautobot_${{ matrix.nautobot-version }}.tar"
  unittest:
    name: "Run Unit Tests"
    needs: "build"
    strategy:
      fail-fast: false
      matrix:
        nautobot-version: ["develop", "ltm-1.6"]
    runs-on: "ubuntu-24.04"
    steps:
      # Try to download the artifact first so the job can be skipped if the artifact is not found
      - name: Download docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: "docker_nautobot_${{ matrix.nautobot-version }}"
          path: /tmp
      - name: Load docker image
        run: "docker load --input /tmp/nautobot_${{ matrix.nautobot-version }}.tar"
      - name: "Check out repository code"
        uses: "actions/checkout@v4"
        with:
          ref: "${{ matrix.nautobot-version == 'develop' && 'develop' || matrix.nautobot-version == 'ltm-1.6' && 'ltm-1.6' || env.GITHUB_REF_NAME || 'develop' }}"
      - name: "Setup environment"
        uses: "networktocode/gh-action-setup-poetry-environment@v6"
        with:
          poetry-install-options: ""  # override default "--only dev"
          poetry-version: "1.8.2"
          python-version: "${{ env.PYTHON_VERSION }}"
      - name: "Copy credentials"
        run: "cp development/creds.example.env development/creds.env"
      - name: "Run Tests"
        run: "INVOKE_${{ inputs.invoke_context_name }}_NAUTOBOT_VER=${{ matrix.nautobot-version }} INVOKE_${{ inputs.invoke_context_name }}_PYTHON_VER=${{ env.PYTHON_VERSION }} poetry run invoke unittest --failfast --keepdb"
  check-migrations:
    name: "Run 'nautobot-server makemigrations --dry-run --check'"
    needs: "build"
    strategy:
      fail-fast: false
      matrix:
        nautobot-version: ["develop", "ltm-1.6"]
    runs-on: "ubuntu-24.04"
    steps:
      # Try to download the artifact first so the job can be skipped if the artifact is not found
      - name: Download docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: "docker_nautobot_${{ matrix.nautobot-version }}"
          path: /tmp
      - name: Load docker image
        run: "docker load --input /tmp/nautobot_${{ matrix.nautobot-version }}.tar"
      - name: "Check out repository code"
        uses: "actions/checkout@v4"
        with:
          ref: "${{ matrix.nautobot-version == 'develop' && 'develop' || matrix.nautobot-version == 'ltm-1.6' && 'ltm-1.6' || env.GITHUB_REF_NAME || 'develop' }}"
      - name: "Setup environment"
        uses: "networktocode/gh-action-setup-poetry-environment@v6"
        with:
          poetry-install-options: ""  # override default "--only dev"
          poetry-version: "1.8.2"
          python-version: "${{ env.PYTHON_VERSION }}"
      - name: "Copy credentials"
        run: "cp development/creds.example.env development/creds.env"
      - name: "Run check migrations"
        run: "INVOKE_${{ inputs.invoke_context_name }}_NAUTOBOT_VER=${{ matrix.nautobot-version }} INVOKE_${{ inputs.invoke_context_name }}_PYTHON_VER=${{ env.PYTHON_VERSION }} poetry run invoke check-migrations"
