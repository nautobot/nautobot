---
# This file contains the important snippets from `ci_integration.yml` to be tested on feature branch push.
#     Images `push` is hardcoded to `false` here.
# TBD: Remove this file after review and before merge.
name: "Testing workflow"
on:  # yamllint disable
  push:
    branches:
      - "u/snaselj-4028-ci-integration-workflows"

jobs:
  container-build:
    name: "Build Container Images (GHCR Only)"
    runs-on: "ubuntu-22.04"
    if: |
      github.event_name == 'push' &&
      (github.ref_name == 'u/snaselj-4028-ci-integration-workflows')
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - name: "Configuration"
        id: "config"
        shell: "bash"
        run: |
          # This is a testing workflow, so we hardcode the branch name
          export BRANCH="snaselj"
          # export BRANCH="${{ github.ref_name }}"
          export TAG_LATEST="false"
          export TAG_LATEST_FOR_BRANCH="false"
          export TAG_LATEST_FOR_PY="false"

          if [[ $BRANCH == "develop" ]]; then
            export TAG_LATEST_FOR_PY="true"
          fi

          if [[ "${{ matrix.python-version }}" == "3.11" ]]; then
            export TAG_LATEST_FOR_BRANCH="true"
            if [[ $TAG_LATEST_FOR_PY == "true" ]]; then
              export TAG_LATEST="true"
            fi
          fi

          echo "branch=$BRANCH" >> $GITHUB_OUTPUT
          echo "tag-latest=$TAG_LATEST" >> $GITHUB_OUTPUT
          echo "tag-latest-for-branch=$TAG_LATEST_FOR_BRANCH" >> $GITHUB_OUTPUT
          echo "tag-latest-for-py=$TAG_LATEST_FOR_PY" >> $GITHUB_OUTPUT
      - name: "Check out repository code"
        uses: "actions/checkout@v3"
      - name: "Set up QEMU"
        uses: "docker/setup-qemu-action@v2"
      - name: "Set up Docker Buildx"
        uses: "docker/setup-buildx-action@v2"
      - name: "Login to GitHub Container Registry"
        uses: "docker/login-action@v2"
        with:
          registry: "ghcr.io"
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"
      - name: "Build `final`"
        if: |
          steps.config.outputs.tag-latest-for-branch == 'true'
        uses: "./.github/actions/build-nautobot-image"
        with:
          branch: "${{ steps.config.outputs.branch }}"
          image: "ghcr.io/nautobot/nautobot"
          push: "false"
          python-version: "${{ matrix.python-version }}"
          tag-latest: "${{ steps.config.outputs.tag-latest }}"
          tag-latest-for-branch: "${{ steps.config.outputs.tag-latest-for-branch }}"
          tag-latest-for-py: "${{ steps.config.outputs.tag-latest-for-py }}"
          target: "final"
      - name: "Build and Push `final-dev`"
        uses: "./.github/actions/build-nautobot-image"
        with:
          branch: "${{ steps.config.outputs.branch }}"
          image: "ghcr.io/nautobot/nautobot-dev"
          # Do not push anything testing
          push: "false"
          python-version: "${{ matrix.python-version }}"
          tag-latest: "${{ steps.config.outputs.tag-latest }}"
          tag-latest-for-branch: "${{ steps.config.outputs.tag-latest-for-branch }}"
          tag-latest-for-py: "${{ steps.config.outputs.tag-latest-for-py }}"
          target: "final-dev"
