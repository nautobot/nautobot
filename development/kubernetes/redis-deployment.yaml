apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose --file docker-compose-min.yml convert
    kompose.version: 1.34.0 (HEAD)
  labels:
    io.kompose.service: redis
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: redis
  template:
    metadata:
      annotations:
        kompose.cmd: kompose --file docker-compose-min.yml convert
        kompose.version: 1.34.0 (HEAD)
      labels:
        io.kompose.service: redis
    spec:
      containers:
        - args:
            - sh
            - -c
            - redis-server --appendonly yes --requirepass ${NAUTOBOT_REDIS_PASSWORD}
          env:
            - name: NAUTOBOT_REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  key: NAUTOBOT_REDIS_HOST
                  name: dev-env
            - name: NAUTOBOT_REDIS_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: NAUTOBOT_REDIS_PASSWORD
                  name: dev-env
            - name: NAUTOBOT_REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  key: NAUTOBOT_REDIS_PORT
                  name: dev-env
            - name: REDISCLI_AUTH
              valueFrom:
                configMapKeyRef:
                  key: REDISCLI_AUTH
                  name: dev-env
            - name: REDIS_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: REDIS_PASSWORD
                  name: dev-env
          image: redis:6-alpine
          name: redis
          ports:
            - containerPort: 6379
              protocol: TCP
      restartPolicy: Always
