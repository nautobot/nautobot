# Linting/Testing available at https://config.travis-ci.com/explore
os: linux
dist: xenial

stages:
  - Linting
  - test
  # This assumes tags will only be used for version releases
  - name: "deploy-github"
    if: "tag IS present"
  - name: "deploy-pypi"
    if: "tag IS present"

services:
  - postgresql
  - redis

# The test stage will be a matrix of the python list * the env['jobs'] list
language: "python"
python:
  - "3.6"
  - "3.7"
  - "3.8"
  - "3.9"

env:
  global:
    - INVOKE_NAUTOBOT_LOCAL=True
  jobs:
    - "TESTING_OPTIONS='--failfast --buffer --keepdb'"
    - "TESTING_OPTIONS='--failfast --buffer --keepdb --label nautobot.core.tests.integration'"

addons:
  postgresql: "9.6"

before_install:
  - pip install poetry
  - curl -Lo /home/travis/bin/hadolint https://github.com/hadolint/hadolint/releases/download/v2.0.0/hadolint-Linux-x86_64
  - chmod +x /home/travis/bin/hadolint
install:
  - poetry config virtualenvs.create false
  # Poetry 1.1.0 added parallel installation as an option;
  # unfortunately it seems to have some issues with installing/updating "requests" and "certifi"
  # while simultaneously atttempting to *use* those packages to install other packages.
  # For now we disable it.
  - poetry config installer.parallel false
  - poetry install
before_script:
  - psql --version
  - psql -U postgres -c 'SELECT version();'
  - psql -U postgres -c 'create database nautobot;'
script:
  - invoke unittest $TESTING_OPTIONS
  - invoke unittest-coverage

jobs:
  fast_finish: true
  include:
    # Lint in python 3.9 for speed
    - stage: "Linting"
      python: "3.9"
      script: "invoke tests --lint-only"

    - stage: "deploy-github"
      before_script:
        - "pip install poetry"
      script:
        - "poetry version $TRAVIS_TAG"
        - "poetry build"
      deploy:
        provider: "releases"
        api_key: "$GITHUB_AUTH_TOKEN"
        file_glob: true
        file: "dist/*"
        skip_cleanup: true
        "on":
          all_branches: true

    - stage: "deploy-pypi"
      before_script:
        - "pip install poetry"
      script:
        - "poetry version $TRAVIS_TAG"
        - "poetry config pypi-token.pypi $PYPI_TOKEN"
        - "poetry publish --build"
