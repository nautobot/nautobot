Running docker-compose command "ps --services --filter status=running"
Running docker-compose command "exec nautobot coverage run --module nautobot.core.cli test nautobot.ipam.tests --config=nautobot/core/tests/nautobot_config.py --cache-test-fixtures 
--keepdb"
PYTHON_VER=3.10 \
docker-compose \
    --project-name "nautobot" \
    --project-directory "development" \
    -f "development/docker-compose.yml" \
    -f "development/docker-compose.postgres.yml" \
    -f "development/docker-compose.dev.yml" exec nautobot coverage run \
    --module nautobot.core.cli test nautobot.ipam.tests \
    --config=nautobot/core/tests/nautobot_config.py \
    --cache-test-fixtures \
    --keepdb
Using NautobotPerformanceTestRunner to run tests ...
Using existing test database for alias 'default'...
Pre-populating test database with factory data...
[33;1mFlushing all existing data from the database...[0m
[33;1mLoading factory data from file development/factory_dump.json[0m
Installed 1979 object(s) from 1 fixture(s)
[32;1mDatabase populated successfully![0m
System check identified some issues:

WARNINGS:
[33;1m<Settings "nautobot_config">: (nautobot.core.W005) STORAGE_CONFIG has been set but STORAGE_BACKEND is not defined. STORAGE_CONFIG will be ignored.[0m

System check identified 1 issue (0 silenced).
........................................................................................................................................................................s...s........................................................................................................s....................................s....s..s..........s..........s....s..s..............s...............ssss.ssssssssss............................s........s.....ss....ss..............ss.........ss....................FF.....^C^CEmptying test database...
[31;1mCommandError: Database test_nautobot couldn't be flushed. Possible reasons:
  * The database isn't running or isn't configured correctly.
  * At least one of the expected database tables doesn't exist.
  * The SQL was invalid.
Hint: Look at the output of 'django-admin sqlflush'. That's the SQL this command wasn't able to run.
[0m[0m